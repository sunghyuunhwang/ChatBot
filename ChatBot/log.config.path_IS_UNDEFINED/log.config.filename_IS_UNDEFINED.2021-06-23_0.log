INFO  21-06-23 09:26:23[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 27844 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 09:26:23[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 09:26:24[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 09:26:24[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 09:26:24[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 09:26:24[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 09:26:24[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 09:26:24[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 09:26:24[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 1784 ms
INFO  21-06-23 09:26:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 09:26:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 09:26:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 09:26:26[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15c487a8, org.springframework.security.web.context.SecurityContextPersistenceFilter@5634a861, org.springframework.security.web.header.HeaderWriterFilter@1c7350b0, org.springframework.security.web.authentication.logout.LogoutFilter@795f8317, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@127705e4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@37ad042b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c854752, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3f36e8d1, org.springframework.security.web.session.SessionManagementFilter@3bc4ef12, org.springframework.security.web.access.ExceptionTranslationFilter@1a3e8e24, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7219ac49]
INFO  21-06-23 09:26:26[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 09:26:26[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 09:26:26[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 09:26:26[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 09:26:26[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 09:26:26[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 09:26:26[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 09:26:26[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 09:26:26[main] [ChatBotApplication:61] - Started ChatBotApplication in 3.963 seconds (JVM running for 6.316)
INFO  21-06-23 09:36:39[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 09:36:40[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 09:37:16[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 22088 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 09:37:16[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 09:37:17[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 09:37:18[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 09:37:18[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 09:37:18[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 09:37:18[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 09:37:18[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 09:37:18[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 1363 ms
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 09:37:19[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@44be69aa, org.springframework.security.web.context.SecurityContextPersistenceFilter@4fdca00a, org.springframework.security.web.header.HeaderWriterFilter@7d247660, org.springframework.security.web.authentication.logout.LogoutFilter@1a500561, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@12f49ca8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a8c93, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5634a861, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7219ac49, org.springframework.security.web.session.SessionManagementFilter@49d30c6f, org.springframework.security.web.access.ExceptionTranslationFilter@3003827c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@257ef9ed]
INFO  21-06-23 09:37:19[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 09:37:19[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 09:37:19[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 09:37:19[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 09:37:19[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 09:37:19[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 09:37:19[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 09:37:19[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 09:37:19[main] [ChatBotApplication:61] - Started ChatBotApplication in 3.249 seconds (JVM running for 4.915)
INFO  21-06-23 09:37:54[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 09:37:54[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 09:37:54[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 4 ms
INFO  21-06-23 09:38:34[http-nio-8082-exec-9] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 09:38:35[http-nio-8082-exec-9] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 09:38:35[http-nio-8082-exec-9] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 09:38:35[http-nio-8082-exec-9] [executeProGetNo:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:38:35[http-nio-8082-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', 'I20210614224300' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 346 msec}
DEBUG 21-06-23 09:38:36[http-nio-8082-exec-9] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 09:38:36[http-nio-8082-exec-9] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 09:38:36[http-nio-8082-exec-9] [selectToChgmasChgdt:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:38:36[http-nio-8082-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224300' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 6 msec}
DEBUG 21-06-23 09:38:36[http-nio-8082-exec-9] [selectToChgmasChgdt:143] - <==      Total: 0
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectSigongYn:143] - ==>  Preparing: SELECT ISNULL(ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectSigongYn:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(ORM_CRYN, 'N') AS DATA1,
		   TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224300' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectSigongYn:143] - <==      Total: 1
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectSchDivYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectSchDivYn:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224300' /*key_no*/
 {executed in 9 msec}
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectSchDivYn:143] - <==      Total: 1
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectSigongConfirmYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectSigongConfirmYn:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224300' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectSigongConfirmYn:143] - <==      Total: 1
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectChgstatusYn:143] - ==>  Preparing: SELECT ( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = ? /*key_no*/ AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' ) 
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectChgstatusYn:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TO_CHGMAS TOC WITH (NOLOCK)
	 WHERE TOC.ORM_NO = 'I20210614224300' /*key_no*/ 
	   AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' )
 {executed in 7 msec}
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [selectChgstatusYn:143] - <==      Total: 1
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [insertOrmCdtChangeReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45002', NULL, 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, ? /*req_dt*/ , TOO.ORM_NM, NULL, TOO.ORM_GPOST, NULL, TOO.ORM_GADDR, NULL, NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, NULL, TOO.BDONG, NULL FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [insertOrmCdtChangeReq:143] - ==> Parameters: 20210628(String), I20210614224300(String)
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45002',
		NULL,
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'20210628' /*req_dt*/ ,
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL,
		TOO.ORM_GADDR,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		NULL,
		TOO.BDONG,
		NULL
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224300' /*key_no*/
 {executed in 94 msec}
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [insertOrmCdtChangeReq:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 09:40:32[http-nio-8082-exec-2] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeDtRequest(String), 챗봇 주문 도착일정 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 09:40:33[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeDtRequest' /*call_function*/ , '챗봇 주문 도착일정 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 23 msec}
DEBUG 21-06-23 09:40:33[http-nio-8082-exec-2] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:43[http-nio-8082-exec-3] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 09:40:43[http-nio-8082-exec-3] [executeProGetNo:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:43[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', 'I20210614224300' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 3 msec}
DEBUG 21-06-23 09:40:43[http-nio-8082-exec-3] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 09:40:43[http-nio-8082-exec-3] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 09:40:43[http-nio-8082-exec-3] [selectToChgmasChgdt:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:43[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224300' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 3 msec}
DEBUG 21-06-23 09:40:43[http-nio-8082-exec-3] [selectToChgmasChgdt:143] - <==      Total: 1
DEBUG 21-06-23 09:40:43[http-nio-8082-exec-3] [insertNewOrdMaster:143] - ==>  Preparing: INSERT INTO TO_ORDMAS ( ORM_NO ,ORM_NM ,COM_ORD ,ORM_SSEC ,VND_CD ,AGT_CD ,CMP_CD ,ORM_ORDDT ,ORM_STAT ,ORM_RDT ,ORM_ADT ,ORM_CDT ,ORM_AGTCST ,ORM_PURCST ,ORM_VISIT ,ORM_PURRSN ,ORM_GGUBUN ,ORM_GOOD ,ORM_GPOST ,ORM_GADDR ,ORM_GEMP ,DET_CD ,ORM_GEMPHP ,ORM_HDPHONE ,ORM_GSPC ,ORM_DOWNST ,ORM_GRTTON ,ORM_DOWNNM ,ORM_DPOST ,ORM_DADDR ,ORM_CONSP ,ORM_SALEMP ,ORM_AGTEMP ,PRJ_CD ,ORM_REBAGT ,ORM_CMPCD ,ORM_SPC ,ORM_PART ,EPI_PINO ,ORM_CRYN ,ORM_CSTYN ,ORM_CSTRATE ,ORM_COMRATE ,USR_CD ,SYS_DT ,ORM_WMSSEC ,WMS_YN ,PLM_PTM ,PLM_EVT ,PLM_ITR ,FRM_NO ,ORM_PSTS ,ADDR_DTL ,BDONG ,ORM_ATTR ,DLV_KIND ,PLM_MERG_NO ,COM_BRD ,LDDR_YN ,CNT_CDT ,CNT_ATTR ,SHP_NO ,FST_USR ,FST_SYS_DT ,PAY_DUE_DT ,APT_SEQ ,PROMO_SERIAL ,LDDR_FREE ,ADDR_GUBUN ) SELECT ? /*new_orm_no*/ ,TOO.ORM_NM ,TOO.COM_ORD ,TOO.ORM_SSEC ,TOO.VND_CD ,TOO.AGT_CD ,TOO.CMP_CD ,TOO.ORM_ORDDT ,TOO.ORM_STAT ,TOO.ORM_RDT ,TOO.ORM_ADT ,? /*chg_orm_cdt*/ ,TOO.ORM_AGTCST ,TOO.ORM_PURCST ,TOO.ORM_VISIT ,TOO.ORM_PURRSN ,TOO.ORM_GGUBUN ,TOO.ORM_GOOD ,TOO.ORM_GPOST ,TOO.ORM_GADDR ,TOO.ORM_GEMP ,TOO.DET_CD ,TOO.ORM_GEMPHP ,TOO.ORM_HDPHONE ,TOO.ORM_GSPC ,TOO.ORM_DOWNST ,TOO.ORM_GRTTON ,TOO.ORM_DOWNNM ,TOO.ORM_DPOST ,TOO.ORM_DADDR ,TOO.ORM_CONSP ,TOO.ORM_SALEMP ,TOO.ORM_AGTEMP ,TOO.PRJ_CD ,TOO.ORM_REBAGT ,TOO.ORM_CMPCD ,TOO.ORM_SPC ,TOO.ORM_PART ,TOO.EPI_PINO ,TOO.ORM_CRYN ,TOO.ORM_CSTYN ,TOO.ORM_CSTRATE ,TOO.ORM_COMRATE ,TOO.USR_CD ,GETDATE() ,TOO.ORM_WMSSEC ,TOO.WMS_YN ,TOO.PLM_PTM ,TOO.PLM_EVT ,TOO.PLM_ITR ,TOO.FRM_NO ,TOO.ORM_PSTS ,TOO.ADDR_DTL ,TOO.BDONG ,TOO.ORM_ATTR ,TOO.DLV_KIND ,TOO.PLM_MERG_NO ,TOO.COM_BRD ,TOO.LDDR_YN ,TOO.CNT_CDT ,TOO.CNT_ATTR ,TOO.SHP_NO ,TOO.FST_USR ,GETDATE() ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I',? /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990')) END) ,TOO.APT_SEQ ,TOO.PROMO_SERIAL ,TOO.LDDR_FREE ,TOO.ADDR_GUBUN FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:40:43[http-nio-8082-exec-3] [insertNewOrdMaster:143] - ==> Parameters: I20210614224301(String), 20210628(String), 20210628(String), 20210628(String), I20210614224300(String)
DEBUG 21-06-23 09:40:44[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDMAS (
		  ORM_NO               
          ,ORM_NM
          ,COM_ORD
          ,ORM_SSEC
          ,VND_CD
          ,AGT_CD
          ,CMP_CD
          ,ORM_ORDDT   
          ,ORM_STAT                
          ,ORM_RDT
          ,ORM_ADT
          ,ORM_CDT             
          ,ORM_AGTCST
          ,ORM_PURCST
          ,ORM_VISIT   
          ,ORM_PURRSN
          ,ORM_GGUBUN
          ,ORM_GOOD
          ,ORM_GPOST
          ,ORM_GADDR
          ,ORM_GEMP
          ,DET_CD   
          ,ORM_GEMPHP
          ,ORM_HDPHONE
          ,ORM_GSPC
          ,ORM_DOWNST
          ,ORM_GRTTON
          ,ORM_DOWNNM
          ,ORM_DPOST   
          ,ORM_DADDR
          ,ORM_CONSP
          ,ORM_SALEMP
          ,ORM_AGTEMP
          ,PRJ_CD
          ,ORM_REBAGT
          ,ORM_CMPCD   
          ,ORM_SPC
          ,ORM_PART
          ,EPI_PINO
          ,ORM_CRYN
          ,ORM_CSTYN
          ,ORM_CSTRATE
          ,ORM_COMRATE
          ,USR_CD
          ,SYS_DT
          ,ORM_WMSSEC
          ,WMS_YN
          ,PLM_PTM
          ,PLM_EVT
          ,PLM_ITR
          ,FRM_NO
          ,ORM_PSTS
  		  ,ADDR_DTL
  		  ,BDONG
  		  ,ORM_ATTR
  		  ,DLV_KIND
  		  ,PLM_MERG_NO
  		  ,COM_BRD
  		  ,LDDR_YN
  		  ,CNT_CDT
  		  ,CNT_ATTR 
  		  ,SHP_NO 
  		 ,FST_USR       
		 ,FST_SYS_DT 
		 ,PAY_DUE_DT
		 ,APT_SEQ
		 ,PROMO_SERIAL
		 ,LDDR_FREE
		 ,ADDR_GUBUN
 	      )
	SELECT
		  'I20210614224301' /*new_orm_no*/            
          ,TOO.ORM_NM
          ,TOO.COM_ORD
          ,TOO.ORM_SSEC
          ,TOO.VND_CD
          ,TOO.AGT_CD
          ,TOO.CMP_CD
          ,TOO.ORM_ORDDT   
          ,TOO.ORM_STAT                
          ,TOO.ORM_RDT
          ,TOO.ORM_ADT
          ,'20210628' /*chg_orm_cdt*/          
          ,TOO.ORM_AGTCST
          ,TOO.ORM_PURCST
          ,TOO.ORM_VISIT   
          ,TOO.ORM_PURRSN
          ,TOO.ORM_GGUBUN
          ,TOO.ORM_GOOD
          ,TOO.ORM_GPOST
          ,TOO.ORM_GADDR
          ,TOO.ORM_GEMP
          ,TOO.DET_CD   
          ,TOO.ORM_GEMPHP
          ,TOO.ORM_HDPHONE
          ,TOO.ORM_GSPC
          ,TOO.ORM_DOWNST
          ,TOO.ORM_GRTTON
          ,TOO.ORM_DOWNNM
          ,TOO.ORM_DPOST   
          ,TOO.ORM_DADDR
          ,TOO.ORM_CONSP
          ,TOO.ORM_SALEMP
          ,TOO.ORM_AGTEMP
          ,TOO.PRJ_CD
          ,TOO.ORM_REBAGT
          ,TOO.ORM_CMPCD   
          ,TOO.ORM_SPC
          ,TOO.ORM_PART
          ,TOO.EPI_PINO
          ,TOO.ORM_CRYN
          ,TOO.ORM_CSTYN
          ,TOO.ORM_CSTRATE
          ,TOO.ORM_COMRATE
          ,TOO.USR_CD
          ,GETDATE()
          ,TOO.ORM_WMSSEC
          ,TOO.WMS_YN
          ,TOO.PLM_PTM
          ,TOO.PLM_EVT
          ,TOO.PLM_ITR
          ,TOO.FRM_NO
          ,TOO.ORM_PSTS
  		  ,TOO.ADDR_DTL
  		  ,TOO.BDONG
  		  ,TOO.ORM_ATTR
  		  ,TOO.DLV_KIND
  		  ,TOO.PLM_MERG_NO
  		  ,TOO.COM_BRD
  		  ,TOO.LDDR_YN
  		  ,TOO.CNT_CDT
  		  ,TOO.CNT_ATTR 
  		  ,TOO.SHP_NO 
  		  ,TOO.FST_USR       
		  ,GETDATE() 
		  ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL('20210628' /*chg_orm_cdt*/ ,'') != '' THEN 
		  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I','20210628' /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990'))   
		   END)
		  ,TOO.APT_SEQ
		  ,TOO.PROMO_SERIAL
		  ,TOO.LDDR_FREE
		  ,TOO.ADDR_GUBUN	
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224300' /*key_no*/
 {executed in 555 msec}
DEBUG 21-06-23 09:40:44[http-nio-8082-exec-3] [insertNewOrdMaster:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:44[http-nio-8082-exec-3] [insertNewOrdDetail:143] - ==>  Preparing: INSERT INTO TO_ORDDET ( ORM_NO ,ORD_SSEQ ,ORD_ISEQ ,SET_CD ,COL_SCD ,ITM_CD ,COL_CD ,ORD_QTY ,ORD_CST ,TAX_AMT ,STK_CD ,ORD_PURCD ,ORD_GOODSEC ,ORD_UPCD ,ORD_WHSCD ,ORD_TWHSCD ,ORD_CURCD ,ORD_FCST ,ORD_QSTAT ,ORD_RMK ,ORD_UNFOLDING ,ORD_ENDYN ,USR_CD ,SYS_DT ,ORD_PIDSEQ ,ORM_PLANDT ,COM_ARESEC ,CAR_NO ,PMS_NO ,COM_TONSEC ,DOK_NO ,ORM_PMSYN ,ORM_PMSND ,COM_SCD ,STI_CD ,COM_CTSEC ,COM_RFG ,WMS_YN ,PID_SEQ ,ORD_ITMCOL ,A.SET_QTY ,A.SDT_QTY ,A.BSET_CD ,A.BCOL_CD ,A.MNF_ADT ,A.WH_ADT ,FST_USR ,FST_SYS_DT ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST ) SELECT ? /*new_orm_no*/ ,TOD.ORD_SSEQ ,TOD.ORD_ISEQ ,TOD.SET_CD ,TOD.COL_SCD ,TOD.ITM_CD ,TOD.COL_CD ,TOD.ORD_QTY ,TOD.ORD_CST ,TOD.TAX_AMT ,TOD.STK_CD ,TOD.ORD_PURCD ,TOD.ORD_GOODSEC ,TOD.ORD_UPCD ,TOD.ORD_WHSCD ,TOD.ORD_TWHSCD ,TOD.ORD_CURCD ,TOD.ORD_FCST ,TOD.ORD_QSTAT ,TOD.ORD_RMK ,TOD.ORD_UNFOLDING ,TOD.ORD_ENDYN ,TOD.USR_CD ,GETDATE() ,TOD.ORD_PIDSEQ ,ORM_PLANDT ,TOD.COM_ARESEC ,TOD.CAR_NO ,TOD.PMS_NO ,TOD.COM_TONSEC ,TOD.DOK_NO ,TOD.ORM_PMSYN ,TOD.ORM_PMSND ,TOD.COM_SCD ,TOD.STI_CD ,TOD.COM_CTSEC ,TOD.COM_RFG ,TOD.WMS_YN ,TOD.PID_SEQ ,TOD.ORD_ITMCOL ,TOD.SET_QTY ,TOD.SDT_QTY ,TOD.BSET_CD ,TOD.BCOL_CD ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,FST_USR ,GETDATE() ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST FROM TO_ORDDET TOD WITH (NOLOCK) WHERE TOD.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:40:44[http-nio-8082-exec-3] [insertNewOrdDetail:143] - ==> Parameters: I20210614224301(String), T01I(String), 20210628(String), T01I(String), T01I(String), 20210628(String), T01I(String), I20210614224300(String)
DEBUG 21-06-23 09:40:48[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDDET (
		  ORM_NO
	      ,ORD_SSEQ
	      ,ORD_ISEQ
	      ,SET_CD
	      ,COL_SCD
	      ,ITM_CD
	      ,COL_CD
	      ,ORD_QTY
	      ,ORD_CST
	      ,TAX_AMT
	      ,STK_CD
	      ,ORD_PURCD
	      ,ORD_GOODSEC
	      ,ORD_UPCD
	      ,ORD_WHSCD
	      ,ORD_TWHSCD
	      ,ORD_CURCD
	      ,ORD_FCST
	      ,ORD_QSTAT
	      ,ORD_RMK
	      ,ORD_UNFOLDING
	      ,ORD_ENDYN
	      ,USR_CD
	      ,SYS_DT
	      ,ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,COM_ARESEC
	      ,CAR_NO
	      ,PMS_NO
	      ,COM_TONSEC
	      ,DOK_NO
	      ,ORM_PMSYN
	      ,ORM_PMSND
	      ,COM_SCD
	      ,STI_CD
	      ,COM_CTSEC
	      ,COM_RFG
	      ,WMS_YN
	      ,PID_SEQ
	      ,ORD_ITMCOL
	      ,A.SET_QTY
          ,A.SDT_QTY
          ,A.BSET_CD
          ,A.BCOL_CD
          ,A.MNF_ADT
          ,A.WH_ADT
		  ,FST_USR       
		  ,FST_SYS_DT
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
 	      )
	SELECT
		  'I20210614224301' /*new_orm_no*/ 
	      ,TOD.ORD_SSEQ
	      ,TOD.ORD_ISEQ
	      ,TOD.SET_CD
	      ,TOD.COL_SCD
	      ,TOD.ITM_CD
	      ,TOD.COL_CD
	      ,TOD.ORD_QTY
	      ,TOD.ORD_CST
	      ,TOD.TAX_AMT
	      ,TOD.STK_CD
	      ,TOD.ORD_PURCD
	      ,TOD.ORD_GOODSEC
	      ,TOD.ORD_UPCD
	      ,TOD.ORD_WHSCD
	      ,TOD.ORD_TWHSCD
	      ,TOD.ORD_CURCD
	      ,TOD.ORD_FCST
	      ,TOD.ORD_QSTAT
	      ,TOD.ORD_RMK
	      ,TOD.ORD_UNFOLDING
	      ,TOD.ORD_ENDYN
	      ,TOD.USR_CD
	      ,GETDATE()
	      ,TOD.ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,TOD.COM_ARESEC
	      ,TOD.CAR_NO
	      ,TOD.PMS_NO
	      ,TOD.COM_TONSEC
	      ,TOD.DOK_NO
	      ,TOD.ORM_PMSYN
	      ,TOD.ORM_PMSND
	      ,TOD.COM_SCD
	      ,TOD.STI_CD
	      ,TOD.COM_CTSEC
	      ,TOD.COM_RFG
	      ,TOD.WMS_YN
	      ,TOD.PID_SEQ
	      ,TOD.ORD_ITMCOL
	      ,TOD.SET_QTY
          ,TOD.SDT_QTY
          ,TOD.BSET_CD
          ,TOD.BCOL_CD
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210628' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) 
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210628' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0)
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
		  ,FST_USR       
		  ,GETDATE()
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
	  FROM TO_ORDDET TOD WITH (NOLOCK)
	 WHERE TOD.ORM_NO = 'I20210614224300' /*key_no*/
 {executed in 4523 msec}
DEBUG 21-06-23 09:40:48[http-nio-8082-exec-3] [insertNewOrdDetail:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:48[http-nio-8082-exec-3] [deleteRecdRenD:143] - ==>  Preparing: DELETE FROM TO_RECE_REN WHERE REC_NO = CAST(? /*key_no*/ AS VARCHAR) 
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [deleteRecdRenD:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM TO_RECE_REN
     WHERE REC_NO = CAST('I20210614224300' /*key_no*/  AS VARCHAR)
 {executed in 58 msec}
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [deleteRecdRenD:143] - <==    Updates: 20
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [insertRecdRenD:143] - ==>  Preparing: INSERT INTO TO_RECE_REN (REC_NO , ITM_CD ,COL_CD ,REC_QTY ,ORM_RDT ,ORM_RDT_2 ,ORM_RDT_2_YN ,REC_DT_1 ,REC_DT_2 ,COM_CMP ,IOP_FINEST ,COM_GOODCD ,VND_CD ,COM_STKSEC ,COM_STDSEC ,IOP_MNFCST ) SELECT D.ORM_NO ,D.ITM_CD ,D.COL_CD ,SUM(D.ORD_QTY) ,M.ORM_RDT ,NULL ,NULL ,NULL ,NULL ,CAST('T01I' AS VARCHAR) ,C.IOP_FINEST ,C.COM_GOODCD ,C.VND_CD ,S.COM_STKSEC ,S.COM_STDSEC ,C.IOP_MNFCST FROM TO_ORDMAS M WITH (NOLOCK) ,TO_ORDDET D WITH (NOLOCK) ,TT_ITMCOP C WITH (NOLOCK) ,TT_ITMMST S WITH (NOLOCK) WHERE M.ORM_NO = D.ORM_NO AND D.ITM_CD = C.ITM_CD AND D.COL_CD = C.COL_CD AND C.ITM_CD = S.ITM_CD AND C.COL_CD = S.COL_CD AND D.ORM_NO = CAST(? /*key_no*/ AS VARCHAR) AND C.COM_CMP = CAST('T01I' AS VARCHAR) GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST 
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [insertRecdRenD:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT 
	  INTO TO_RECE_REN 
	            (REC_NO
	             , ITM_CD
	             ,COL_CD
	             ,REC_QTY
	             ,ORM_RDT
	             ,ORM_RDT_2
	             ,ORM_RDT_2_YN
	             ,REC_DT_1
	             ,REC_DT_2
                ,COM_CMP
                ,IOP_FINEST
                ,COM_GOODCD
                ,VND_CD
                ,COM_STKSEC
                ,COM_STDSEC
                ,IOP_MNFCST
                )
	SELECT D.ORM_NO 
	           ,D.ITM_CD 
	           ,D.COL_CD 
	           ,SUM(D.ORD_QTY) 
	           ,M.ORM_RDT 
	           ,NULL
	           ,NULL 
	           ,NULL 
	           ,NULL 
			   ,CAST('T01I' AS VARCHAR) 
			   ,C.IOP_FINEST 
			   ,C.COM_GOODCD 
			   ,C.VND_CD 
			   ,S.COM_STKSEC 
			   ,S.COM_STDSEC 
			   ,C.IOP_MNFCST	   
	FROM TO_ORDMAS M WITH (NOLOCK)
	         ,TO_ORDDET D WITH (NOLOCK)
	         ,TT_ITMCOP C WITH (NOLOCK)
	         ,TT_ITMMST S WITH (NOLOCK)
	WHERE M.ORM_NO = D.ORM_NO
	AND D.ITM_CD = C.ITM_CD 
	AND D.COL_CD = C.COL_CD
	AND C.ITM_CD = S.ITM_CD 
	AND C.COL_CD = S.COL_CD
	AND D.ORM_NO = CAST('I20210614224300' /*key_no*/  AS VARCHAR)
	AND C.COM_CMP = CAST('T01I' AS VARCHAR) 
	GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, 
				    C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST
 {executed in 36 msec}
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [insertRecdRenD:143] - <==    Updates: 20
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224300' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 7 msec}
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [updateToOrdChgmasStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() ,EMC_YN = 'N' ,OUT_TYP = ' ' ,MULTI_CHGKND = '' ,NEW_ORMNO = ? /*new_orm_no*/ WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [updateToOrdChgmasStat:143] - ==> Parameters: I20210614224301(String), I20210614224300(String), 01(String)
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
            ,EMC_YN = 'N'
            ,OUT_TYP = '      ' 
            ,MULTI_CHGKND = ''
            ,NEW_ORMNO = 'I20210614224301' /*new_orm_no*/ 
       WHERE ORM_NO = 'I20210614224300' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 31 msec}
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [updateToOrdChgmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [updateToOrdmasStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_STAT = 'O08003' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [updateToOrdmasStat:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS              									
       SET ORM_STAT = 'O08003' 
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224300' /*key_no*/
 {executed in 756 msec}
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [updateToOrdmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectOrmCryn:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224300' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectSigongReserveYn:143] - ==>  Preparing: SELECT ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectSigongReserveYn:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224300' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectSigongReserveYn:143] - <==      Total: 1
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectRemdtRemseq:143] - ==>  Preparing: SELECT TCR.REM_DT AS DATA1, TCR.REM_SEQ AS DATA2, ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ AND TCR.REM_DT = ? /*rem_dt*/ 
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectRemdtRemseq:143] - ==> Parameters: I20210614224300(String), 20210622(String)
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TCR.REM_DT AS DATA1,
		TCR.REM_SEQ AS DATA2,
		ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224300' /*key_no*/ 
	   AND TCR.REM_DT = '20210622' /*rem_dt*/
 {executed in 9 msec}
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectRemdtRemseq:143] - <==      Total: 1
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectTcMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1 FROM TC_SEQNOINF WHERE COM_AGSEC = ? /*com_agsec*/ AND COM_NOSEC = 'C08CRS' AND SEQ_SETDT = ? /*req_dt*/ 
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectTcMaxSeqNo:143] - ==> Parameters: C02I(String), 20210628(String)
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1
		  FROM TC_SEQNOINF 
		 WHERE COM_AGSEC = 'C02I' /*com_agsec*/ 	
		   AND COM_NOSEC = 'C08CRS' 
		   AND SEQ_SETDT = '20210628' /*req_dt*/
 {executed in 33 msec}
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [selectTcMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [insertTcSeqnoinf:143] - ==>  Preparing: MERGE INTO TC_SEQNOINF SI USING (SELECT ? /*com_agsec*/ AS COM_AGSEC ,? /*req_dt*/ AS SEQ_SETDT) A ON SI.COM_AGSEC = A.COM_AGSEC AND SI.SEQ_SETDT = A.SEQ_SETDT AND SI.COM_NOSEC = 'C08CRS' WHEN MATCHED THEN UPDATE SET SEQ_NO = ? /*max_seq_no*/ WHEN NOT MATCHED THEN INSERT (COM_AGSEC ,COM_NOSEC ,SEQ_SETDT ,SEQ_NO ,USR_CD ,SYS_DT ) VALUES(? /*com_agsec*/ ,'C08CRS' ,? /*req_dt*/ ,? /*max_seq_no*/ ,'CHATBOT' ,GETDATE() ); 
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [insertTcSeqnoinf:143] - ==> Parameters: C02I(String), 20210628(String), 419(Integer), C02I(String), 20210628(String), 419(Integer)
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. MERGE INTO TC_SEQNOINF SI
    	 USING (SELECT 'C02I' /*com_agsec*/  AS COM_AGSEC
    	              ,'20210628' /*req_dt*/  AS SEQ_SETDT) A
       		ON SI.COM_AGSEC = A.COM_AGSEC
       	   AND SI.SEQ_SETDT = A.SEQ_SETDT
       	   AND SI.COM_NOSEC = 'C08CRS'
          WHEN MATCHED THEN
            UPDATE 
               SET SEQ_NO = 419 /*max_seq_no*/ 
          WHEN NOT MATCHED THEN
		    INSERT
		      	  (COM_AGSEC
		      	  ,COM_NOSEC
		      	  ,SEQ_SETDT
		      	  ,SEQ_NO
		      	  ,USR_CD
		      	  ,SYS_DT
		          )    
			VALUES('C02I' /*com_agsec*/ 
			      ,'C08CRS'
			      ,'20210628' /*req_dt*/ 
			      ,419 /*max_seq_no*/ 
			      ,'CHATBOT'
			      ,GETDATE()
			      );
 {executed in 11 msec}
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [insertTcSeqnoinf:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [updateTcresdtl:143] - ==>  Preparing: UPDATE TC_RESDTL SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 09:40:49[http-nio-8082-exec-3] [updateTcresdtl:143] - ==> Parameters: 20210628(String), IC0419(String), 20210622(String), IC0659(String)
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESDTL SET REM_DT = '20210628' /*req_dt*/ , REM_SEQ = 'IC0419' /*new_rem_seq*/ 
	 WHERE REM_DT = '20210622' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0659' /*rem_seq*/
 {executed in 67 msec}
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [updateTcresdtl:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [updateTcresmst:143] - ==>  Preparing: UPDATE TC_RESMST SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ , ORM_NO = ? /*new_ormno*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [updateTcresmst:143] - ==> Parameters: 20210628(String), IC0419(String), I20210614224301(String), 20210622(String), IC0659(String)
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST SET REM_DT = '20210628' /*req_dt*/ , REM_SEQ = 'IC0419' /*new_rem_seq*/ , ORM_NO = 'I20210614224301' /*new_ormno*/ 
	 WHERE REM_DT = '20210622' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0659' /*rem_seq*/
 {executed in 235 msec}
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [updateTcresmst:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [updateToOrdmasSigongStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_PSTS = 'E' /* 예약상태 */ ,ORM_CDT = ? /*req_dt*/ /* 확정납기일 */ ,USR_CD = 'CHATBOT' /* 최종변경자 */ ,SYS_DT = GETDATE() /* 최종변경일시 */ ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,? /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990')) END) WHERE ORM_NO = ? /*new_ormno*/ 
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [updateToOrdmasSigongStat:143] - ==> Parameters: 20210628(String), 20210628(String), 20210628(String), I20210614224301(String)
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS
       SET ORM_PSTS = 'E'    /* 예약상태 */		
          ,ORM_CDT  = '20210628' /*req_dt*/      /* 확정납기일 */		
          ,USR_CD   = 'CHATBOT'   /* 최종변경자 */
          ,SYS_DT   = GETDATE()     /* 최종변경일시 */
		  ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL('20210628' /*chg_orm_cdt*/ ,'') != '' THEN
							  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,'20210628' /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990'))
							   END)
     WHERE ORM_NO = 'I20210614224301' /*new_ormno*/
 {executed in 36 msec}
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [updateToOrdmasSigongStat:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [selectOnlineynCheck:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224300' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224300(String), I20210614224300(String), I20210614224300(String), 챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224300,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224300' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224300' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224300' /*key_no*/ ),
		        '챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224300,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 13 msec}
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [insertApicallHist:143] - ==> Parameters: erp_OrderArrivalDateChange(String), 챗봇 주문 도착일정 변경 Auto 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderArrivalDateChange' /*call_function*/ , '챗봇 주문 도착일정 변경 Auto 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 2 msec}
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [selectChginformData:143] - ==> Parameters: I20210614224300(String)
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224300' /*key_no*/
 {executed in 31 msec}
DEBUG 21-06-23 09:40:50[http-nio-8082-exec-3] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 09:43:09[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 09:43:10[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 09:43:10[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 09:43:10[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 09:43:20[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 25028 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 09:43:20[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 09:43:21[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 09:43:21[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 09:43:21[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 09:43:21[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 09:43:21[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 09:43:21[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 09:43:21[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 1266 ms
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 09:43:22[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3ce443f9, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d70638, org.springframework.security.web.header.HeaderWriterFilter@3481ff98, org.springframework.security.web.authentication.logout.LogoutFilter@462abec3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@727320fa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6fbc1bb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@341b13a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@57fbc06f, org.springframework.security.web.session.SessionManagementFilter@79518e00, org.springframework.security.web.access.ExceptionTranslationFilter@68a78f3c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@df921b1]
INFO  21-06-23 09:43:22[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 09:43:22[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 09:43:22[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 09:43:22[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 09:43:23[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 09:43:23[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 09:43:23[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 09:43:23[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 09:43:23[main] [ChatBotApplication:61] - Started ChatBotApplication in 3.058 seconds (JVM running for 5.493)
INFO  21-06-23 09:43:37[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 09:43:37[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 09:43:37[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 7 ms
INFO  21-06-23 09:44:04[http-nio-8082-exec-1] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 09:44:05[http-nio-8082-exec-1] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 09:44:05[http-nio-8082-exec-1] [selectSigongYn:143] - ==>  Preparing: SELECT ISNULL(ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:44:05[http-nio-8082-exec-1] [selectSigongYn:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:44:05[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(ORM_CRYN, 'N') AS DATA1,
		   TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224301' /*key_no*/
 {executed in 6 msec}
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [selectSigongYn:143] - <==      Total: 1
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [selectSchDivYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [selectSchDivYn:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224301' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [selectSchDivYn:143] - <==      Total: 1
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224301' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - <==      Total: 1
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [selectChgstatusYn:143] - ==>  Preparing: SELECT ( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = ? /*key_no*/ AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' ) 
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [selectChgstatusYn:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TO_CHGMAS TOC WITH (NOLOCK)
	 WHERE TOC.ORM_NO = 'I20210614224301' /*key_no*/ 
	   AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' )
 {executed in 2 msec}
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [selectChgstatusYn:143] - <==      Total: 1
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45002', NULL, 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, ? /*req_dt*/ , TOO.ORM_NM, NULL, TOO.ORM_GPOST, NULL, TOO.ORM_GADDR, NULL, NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, NULL, TOO.BDONG, NULL FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - ==> Parameters: 20210629(String), I20210614224301(String)
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45002',
		NULL,
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'20210629' /*req_dt*/ ,
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL,
		TOO.ORM_GADDR,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		NULL,
		TOO.BDONG,
		NULL
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224301' /*key_no*/
 {executed in 9 msec}
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - <==    Updates: 1
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeDtRequest(String), 챗봇 주문 도착일정 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeDtRequest' /*call_function*/ , '챗봇 주문 도착일정 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 3 msec}
DEBUG 21-06-23 09:44:06[http-nio-8082-exec-1] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 09:56:52[http-nio-8082-exec-4] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 09:56:52[http-nio-8082-exec-4] [executeProGetNo:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:56:52[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', 'I20210614224301' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 3 msec}
DEBUG 21-06-23 09:56:52[http-nio-8082-exec-4] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 09:56:52[http-nio-8082-exec-4] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 09:56:52[http-nio-8082-exec-4] [selectToChgmasChgdt:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:56:52[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224301' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 2 msec}
DEBUG 21-06-23 09:56:52[http-nio-8082-exec-4] [selectToChgmasChgdt:143] - <==      Total: 1
DEBUG 21-06-23 09:56:52[http-nio-8082-exec-4] [insertNewOrdMaster:143] - ==>  Preparing: INSERT INTO TO_ORDMAS ( ORM_NO ,ORM_NM ,COM_ORD ,ORM_SSEC ,VND_CD ,AGT_CD ,CMP_CD ,ORM_ORDDT ,ORM_STAT ,ORM_RDT ,ORM_ADT ,ORM_CDT ,ORM_AGTCST ,ORM_PURCST ,ORM_VISIT ,ORM_PURRSN ,ORM_GGUBUN ,ORM_GOOD ,ORM_GPOST ,ORM_GADDR ,ORM_GEMP ,DET_CD ,ORM_GEMPHP ,ORM_HDPHONE ,ORM_GSPC ,ORM_DOWNST ,ORM_GRTTON ,ORM_DOWNNM ,ORM_DPOST ,ORM_DADDR ,ORM_CONSP ,ORM_SALEMP ,ORM_AGTEMP ,PRJ_CD ,ORM_REBAGT ,ORM_CMPCD ,ORM_SPC ,ORM_PART ,EPI_PINO ,ORM_CRYN ,ORM_CSTYN ,ORM_CSTRATE ,ORM_COMRATE ,USR_CD ,SYS_DT ,ORM_WMSSEC ,WMS_YN ,PLM_PTM ,PLM_EVT ,PLM_ITR ,FRM_NO ,ORM_PSTS ,ADDR_DTL ,BDONG ,ORM_ATTR ,DLV_KIND ,PLM_MERG_NO ,COM_BRD ,LDDR_YN ,CNT_CDT ,CNT_ATTR ,SHP_NO ,FST_USR ,FST_SYS_DT ,PAY_DUE_DT ,APT_SEQ ,PROMO_SERIAL ,LDDR_FREE ,ADDR_GUBUN ) SELECT ? /*new_orm_no*/ ,TOO.ORM_NM ,TOO.COM_ORD ,TOO.ORM_SSEC ,TOO.VND_CD ,TOO.AGT_CD ,TOO.CMP_CD ,TOO.ORM_ORDDT ,TOO.ORM_STAT ,TOO.ORM_RDT ,TOO.ORM_ADT ,? /*chg_orm_cdt*/ ,TOO.ORM_AGTCST ,TOO.ORM_PURCST ,TOO.ORM_VISIT ,TOO.ORM_PURRSN ,TOO.ORM_GGUBUN ,TOO.ORM_GOOD ,TOO.ORM_GPOST ,TOO.ORM_GADDR ,TOO.ORM_GEMP ,TOO.DET_CD ,TOO.ORM_GEMPHP ,TOO.ORM_HDPHONE ,TOO.ORM_GSPC ,TOO.ORM_DOWNST ,TOO.ORM_GRTTON ,TOO.ORM_DOWNNM ,TOO.ORM_DPOST ,TOO.ORM_DADDR ,TOO.ORM_CONSP ,TOO.ORM_SALEMP ,TOO.ORM_AGTEMP ,TOO.PRJ_CD ,TOO.ORM_REBAGT ,TOO.ORM_CMPCD ,TOO.ORM_SPC ,TOO.ORM_PART ,TOO.EPI_PINO ,TOO.ORM_CRYN ,TOO.ORM_CSTYN ,TOO.ORM_CSTRATE ,TOO.ORM_COMRATE ,TOO.USR_CD ,GETDATE() ,TOO.ORM_WMSSEC ,TOO.WMS_YN ,TOO.PLM_PTM ,TOO.PLM_EVT ,TOO.PLM_ITR ,TOO.FRM_NO ,TOO.ORM_PSTS ,TOO.ADDR_DTL ,TOO.BDONG ,TOO.ORM_ATTR ,TOO.DLV_KIND ,TOO.PLM_MERG_NO ,TOO.COM_BRD ,TOO.LDDR_YN ,TOO.CNT_CDT ,TOO.CNT_ATTR ,TOO.SHP_NO ,TOO.FST_USR ,GETDATE() ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I',? /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990')) END) ,TOO.APT_SEQ ,TOO.PROMO_SERIAL ,TOO.LDDR_FREE ,TOO.ADDR_GUBUN FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:56:52[http-nio-8082-exec-4] [insertNewOrdMaster:143] - ==> Parameters: I20210614224302(String), 20210629(String), 20210629(String), 20210629(String), I20210614224301(String)
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDMAS (
		  ORM_NO               
          ,ORM_NM
          ,COM_ORD
          ,ORM_SSEC
          ,VND_CD
          ,AGT_CD
          ,CMP_CD
          ,ORM_ORDDT   
          ,ORM_STAT                
          ,ORM_RDT
          ,ORM_ADT
          ,ORM_CDT             
          ,ORM_AGTCST
          ,ORM_PURCST
          ,ORM_VISIT   
          ,ORM_PURRSN
          ,ORM_GGUBUN
          ,ORM_GOOD
          ,ORM_GPOST
          ,ORM_GADDR
          ,ORM_GEMP
          ,DET_CD   
          ,ORM_GEMPHP
          ,ORM_HDPHONE
          ,ORM_GSPC
          ,ORM_DOWNST
          ,ORM_GRTTON
          ,ORM_DOWNNM
          ,ORM_DPOST   
          ,ORM_DADDR
          ,ORM_CONSP
          ,ORM_SALEMP
          ,ORM_AGTEMP
          ,PRJ_CD
          ,ORM_REBAGT
          ,ORM_CMPCD   
          ,ORM_SPC
          ,ORM_PART
          ,EPI_PINO
          ,ORM_CRYN
          ,ORM_CSTYN
          ,ORM_CSTRATE
          ,ORM_COMRATE
          ,USR_CD
          ,SYS_DT
          ,ORM_WMSSEC
          ,WMS_YN
          ,PLM_PTM
          ,PLM_EVT
          ,PLM_ITR
          ,FRM_NO
          ,ORM_PSTS
  		  ,ADDR_DTL
  		  ,BDONG
  		  ,ORM_ATTR
  		  ,DLV_KIND
  		  ,PLM_MERG_NO
  		  ,COM_BRD
  		  ,LDDR_YN
  		  ,CNT_CDT
  		  ,CNT_ATTR 
  		  ,SHP_NO 
  		 ,FST_USR       
		 ,FST_SYS_DT 
		 ,PAY_DUE_DT
		 ,APT_SEQ
		 ,PROMO_SERIAL
		 ,LDDR_FREE
		 ,ADDR_GUBUN
 	      )
	SELECT
		  'I20210614224302' /*new_orm_no*/            
          ,TOO.ORM_NM
          ,TOO.COM_ORD
          ,TOO.ORM_SSEC
          ,TOO.VND_CD
          ,TOO.AGT_CD
          ,TOO.CMP_CD
          ,TOO.ORM_ORDDT   
          ,TOO.ORM_STAT                
          ,TOO.ORM_RDT
          ,TOO.ORM_ADT
          ,'20210629' /*chg_orm_cdt*/          
          ,TOO.ORM_AGTCST
          ,TOO.ORM_PURCST
          ,TOO.ORM_VISIT   
          ,TOO.ORM_PURRSN
          ,TOO.ORM_GGUBUN
          ,TOO.ORM_GOOD
          ,TOO.ORM_GPOST
          ,TOO.ORM_GADDR
          ,TOO.ORM_GEMP
          ,TOO.DET_CD   
          ,TOO.ORM_GEMPHP
          ,TOO.ORM_HDPHONE
          ,TOO.ORM_GSPC
          ,TOO.ORM_DOWNST
          ,TOO.ORM_GRTTON
          ,TOO.ORM_DOWNNM
          ,TOO.ORM_DPOST   
          ,TOO.ORM_DADDR
          ,TOO.ORM_CONSP
          ,TOO.ORM_SALEMP
          ,TOO.ORM_AGTEMP
          ,TOO.PRJ_CD
          ,TOO.ORM_REBAGT
          ,TOO.ORM_CMPCD   
          ,TOO.ORM_SPC
          ,TOO.ORM_PART
          ,TOO.EPI_PINO
          ,TOO.ORM_CRYN
          ,TOO.ORM_CSTYN
          ,TOO.ORM_CSTRATE
          ,TOO.ORM_COMRATE
          ,TOO.USR_CD
          ,GETDATE()
          ,TOO.ORM_WMSSEC
          ,TOO.WMS_YN
          ,TOO.PLM_PTM
          ,TOO.PLM_EVT
          ,TOO.PLM_ITR
          ,TOO.FRM_NO
          ,TOO.ORM_PSTS
  		  ,TOO.ADDR_DTL
  		  ,TOO.BDONG
  		  ,TOO.ORM_ATTR
  		  ,TOO.DLV_KIND
  		  ,TOO.PLM_MERG_NO
  		  ,TOO.COM_BRD
  		  ,TOO.LDDR_YN
  		  ,TOO.CNT_CDT
  		  ,TOO.CNT_ATTR 
  		  ,TOO.SHP_NO 
  		  ,TOO.FST_USR       
		  ,GETDATE() 
		  ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL('20210629' /*chg_orm_cdt*/ ,'') != '' THEN 
		  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I','20210629' /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990'))   
		   END)
		  ,TOO.APT_SEQ
		  ,TOO.PROMO_SERIAL
		  ,TOO.LDDR_FREE
		  ,TOO.ADDR_GUBUN	
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224301' /*key_no*/
 {executed in 50 msec}
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [insertNewOrdMaster:143] - <==    Updates: 1
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [insertNewOrdDetail:143] - ==>  Preparing: INSERT INTO TO_ORDDET ( ORM_NO ,ORD_SSEQ ,ORD_ISEQ ,SET_CD ,COL_SCD ,ITM_CD ,COL_CD ,ORD_QTY ,ORD_CST ,TAX_AMT ,STK_CD ,ORD_PURCD ,ORD_GOODSEC ,ORD_UPCD ,ORD_WHSCD ,ORD_TWHSCD ,ORD_CURCD ,ORD_FCST ,ORD_QSTAT ,ORD_RMK ,ORD_UNFOLDING ,ORD_ENDYN ,USR_CD ,SYS_DT ,ORD_PIDSEQ ,ORM_PLANDT ,COM_ARESEC ,CAR_NO ,PMS_NO ,COM_TONSEC ,DOK_NO ,ORM_PMSYN ,ORM_PMSND ,COM_SCD ,STI_CD ,COM_CTSEC ,COM_RFG ,WMS_YN ,PID_SEQ ,ORD_ITMCOL ,A.SET_QTY ,A.SDT_QTY ,A.BSET_CD ,A.BCOL_CD ,A.MNF_ADT ,A.WH_ADT ,FST_USR ,FST_SYS_DT ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST ) SELECT ? /*new_orm_no*/ ,TOD.ORD_SSEQ ,TOD.ORD_ISEQ ,TOD.SET_CD ,TOD.COL_SCD ,TOD.ITM_CD ,TOD.COL_CD ,TOD.ORD_QTY ,TOD.ORD_CST ,TOD.TAX_AMT ,TOD.STK_CD ,TOD.ORD_PURCD ,TOD.ORD_GOODSEC ,TOD.ORD_UPCD ,TOD.ORD_WHSCD ,TOD.ORD_TWHSCD ,TOD.ORD_CURCD ,TOD.ORD_FCST ,TOD.ORD_QSTAT ,TOD.ORD_RMK ,TOD.ORD_UNFOLDING ,TOD.ORD_ENDYN ,TOD.USR_CD ,GETDATE() ,TOD.ORD_PIDSEQ ,ORM_PLANDT ,TOD.COM_ARESEC ,TOD.CAR_NO ,TOD.PMS_NO ,TOD.COM_TONSEC ,TOD.DOK_NO ,TOD.ORM_PMSYN ,TOD.ORM_PMSND ,TOD.COM_SCD ,TOD.STI_CD ,TOD.COM_CTSEC ,TOD.COM_RFG ,TOD.WMS_YN ,TOD.PID_SEQ ,TOD.ORD_ITMCOL ,TOD.SET_QTY ,TOD.SDT_QTY ,TOD.BSET_CD ,TOD.BCOL_CD ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,FST_USR ,GETDATE() ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST FROM TO_ORDDET TOD WITH (NOLOCK) WHERE TOD.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [insertNewOrdDetail:143] - ==> Parameters: I20210614224302(String), T01I(String), 20210629(String), T01I(String), T01I(String), 20210629(String), T01I(String), I20210614224301(String)
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDDET (
		  ORM_NO
	      ,ORD_SSEQ
	      ,ORD_ISEQ
	      ,SET_CD
	      ,COL_SCD
	      ,ITM_CD
	      ,COL_CD
	      ,ORD_QTY
	      ,ORD_CST
	      ,TAX_AMT
	      ,STK_CD
	      ,ORD_PURCD
	      ,ORD_GOODSEC
	      ,ORD_UPCD
	      ,ORD_WHSCD
	      ,ORD_TWHSCD
	      ,ORD_CURCD
	      ,ORD_FCST
	      ,ORD_QSTAT
	      ,ORD_RMK
	      ,ORD_UNFOLDING
	      ,ORD_ENDYN
	      ,USR_CD
	      ,SYS_DT
	      ,ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,COM_ARESEC
	      ,CAR_NO
	      ,PMS_NO
	      ,COM_TONSEC
	      ,DOK_NO
	      ,ORM_PMSYN
	      ,ORM_PMSND
	      ,COM_SCD
	      ,STI_CD
	      ,COM_CTSEC
	      ,COM_RFG
	      ,WMS_YN
	      ,PID_SEQ
	      ,ORD_ITMCOL
	      ,A.SET_QTY
          ,A.SDT_QTY
          ,A.BSET_CD
          ,A.BCOL_CD
          ,A.MNF_ADT
          ,A.WH_ADT
		  ,FST_USR       
		  ,FST_SYS_DT
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
 	      )
	SELECT
		  'I20210614224302' /*new_orm_no*/ 
	      ,TOD.ORD_SSEQ
	      ,TOD.ORD_ISEQ
	      ,TOD.SET_CD
	      ,TOD.COL_SCD
	      ,TOD.ITM_CD
	      ,TOD.COL_CD
	      ,TOD.ORD_QTY
	      ,TOD.ORD_CST
	      ,TOD.TAX_AMT
	      ,TOD.STK_CD
	      ,TOD.ORD_PURCD
	      ,TOD.ORD_GOODSEC
	      ,TOD.ORD_UPCD
	      ,TOD.ORD_WHSCD
	      ,TOD.ORD_TWHSCD
	      ,TOD.ORD_CURCD
	      ,TOD.ORD_FCST
	      ,TOD.ORD_QSTAT
	      ,TOD.ORD_RMK
	      ,TOD.ORD_UNFOLDING
	      ,TOD.ORD_ENDYN
	      ,TOD.USR_CD
	      ,GETDATE()
	      ,TOD.ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,TOD.COM_ARESEC
	      ,TOD.CAR_NO
	      ,TOD.PMS_NO
	      ,TOD.COM_TONSEC
	      ,TOD.DOK_NO
	      ,TOD.ORM_PMSYN
	      ,TOD.ORM_PMSND
	      ,TOD.COM_SCD
	      ,TOD.STI_CD
	      ,TOD.COM_CTSEC
	      ,TOD.COM_RFG
	      ,TOD.WMS_YN
	      ,TOD.PID_SEQ
	      ,TOD.ORD_ITMCOL
	      ,TOD.SET_QTY
          ,TOD.SDT_QTY
          ,TOD.BSET_CD
          ,TOD.BCOL_CD
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210629' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) 
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210629' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0)
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
		  ,FST_USR       
		  ,GETDATE()
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
	  FROM TO_ORDDET TOD WITH (NOLOCK)
	 WHERE TOD.ORM_NO = 'I20210614224301' /*key_no*/
 {executed in 776 msec}
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [insertNewOrdDetail:143] - <==    Updates: 1
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [deleteRecdRenD:143] - ==>  Preparing: DELETE FROM TO_RECE_REN WHERE REC_NO = CAST(? /*key_no*/ AS VARCHAR) 
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [deleteRecdRenD:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM TO_RECE_REN
     WHERE REC_NO = CAST('I20210614224301' /*key_no*/  AS VARCHAR)
 {executed in 30 msec}
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [deleteRecdRenD:143] - <==    Updates: 0
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [insertRecdRenD:143] - ==>  Preparing: INSERT INTO TO_RECE_REN (REC_NO , ITM_CD ,COL_CD ,REC_QTY ,ORM_RDT ,ORM_RDT_2 ,ORM_RDT_2_YN ,REC_DT_1 ,REC_DT_2 ,COM_CMP ,IOP_FINEST ,COM_GOODCD ,VND_CD ,COM_STKSEC ,COM_STDSEC ,IOP_MNFCST ) SELECT D.ORM_NO ,D.ITM_CD ,D.COL_CD ,SUM(D.ORD_QTY) ,M.ORM_RDT ,NULL ,NULL ,NULL ,NULL ,CAST('T01I' AS VARCHAR) ,C.IOP_FINEST ,C.COM_GOODCD ,C.VND_CD ,S.COM_STKSEC ,S.COM_STDSEC ,C.IOP_MNFCST FROM TO_ORDMAS M WITH (NOLOCK) ,TO_ORDDET D WITH (NOLOCK) ,TT_ITMCOP C WITH (NOLOCK) ,TT_ITMMST S WITH (NOLOCK) WHERE M.ORM_NO = D.ORM_NO AND D.ITM_CD = C.ITM_CD AND D.COL_CD = C.COL_CD AND C.ITM_CD = S.ITM_CD AND C.COL_CD = S.COL_CD AND D.ORM_NO = CAST(? /*key_no*/ AS VARCHAR) AND C.COM_CMP = CAST('T01I' AS VARCHAR) GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST 
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [insertRecdRenD:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT 
	  INTO TO_RECE_REN 
	            (REC_NO
	             , ITM_CD
	             ,COL_CD
	             ,REC_QTY
	             ,ORM_RDT
	             ,ORM_RDT_2
	             ,ORM_RDT_2_YN
	             ,REC_DT_1
	             ,REC_DT_2
                ,COM_CMP
                ,IOP_FINEST
                ,COM_GOODCD
                ,VND_CD
                ,COM_STKSEC
                ,COM_STDSEC
                ,IOP_MNFCST
                )
	SELECT D.ORM_NO 
	           ,D.ITM_CD 
	           ,D.COL_CD 
	           ,SUM(D.ORD_QTY) 
	           ,M.ORM_RDT 
	           ,NULL
	           ,NULL 
	           ,NULL 
	           ,NULL 
			   ,CAST('T01I' AS VARCHAR) 
			   ,C.IOP_FINEST 
			   ,C.COM_GOODCD 
			   ,C.VND_CD 
			   ,S.COM_STKSEC 
			   ,S.COM_STDSEC 
			   ,C.IOP_MNFCST	   
	FROM TO_ORDMAS M WITH (NOLOCK)
	         ,TO_ORDDET D WITH (NOLOCK)
	         ,TT_ITMCOP C WITH (NOLOCK)
	         ,TT_ITMMST S WITH (NOLOCK)
	WHERE M.ORM_NO = D.ORM_NO
	AND D.ITM_CD = C.ITM_CD 
	AND D.COL_CD = C.COL_CD
	AND C.ITM_CD = S.ITM_CD 
	AND C.COL_CD = S.COL_CD
	AND D.ORM_NO = CAST('I20210614224301' /*key_no*/  AS VARCHAR)
	AND C.COM_CMP = CAST('T01I' AS VARCHAR) 
	GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, 
				    C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST
 {executed in 5 msec}
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [insertRecdRenD:143] - <==    Updates: 20
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224301' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 5 msec}
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [updateToOrdChgmasStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() ,EMC_YN = 'N' ,OUT_TYP = ' ' ,MULTI_CHGKND = '' ,NEW_ORMNO = ? /*new_orm_no*/ WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [updateToOrdChgmasStat:143] - ==> Parameters: I20210614224302(String), I20210614224301(String), 01(String)
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
            ,EMC_YN = 'N'
            ,OUT_TYP = '      ' 
            ,MULTI_CHGKND = ''
            ,NEW_ORMNO = 'I20210614224302' /*new_orm_no*/ 
       WHERE ORM_NO = 'I20210614224301' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 6 msec}
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [updateToOrdChgmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [updateToOrdmasStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_STAT = 'O08003' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:56:53[http-nio-8082-exec-4] [updateToOrdmasStat:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS              									
       SET ORM_STAT = 'O08003' 
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224301' /*key_no*/
 {executed in 247 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [updateToOrdmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectOrmCryn:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224301' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectSigongReserveYn:143] - ==>  Preparing: SELECT ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectSigongReserveYn:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224301' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectSigongReserveYn:143] - <==      Total: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectRemdtRemseq:143] - ==>  Preparing: SELECT TCR.REM_DT AS DATA1, TCR.REM_SEQ AS DATA2, ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ AND TCR.REM_DT = ? /*rem_dt*/ 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectRemdtRemseq:143] - ==> Parameters: I20210614224301(String), 20210628(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TCR.REM_DT AS DATA1,
		TCR.REM_SEQ AS DATA2,
		ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224301' /*key_no*/ 
	   AND TCR.REM_DT = '20210628' /*rem_dt*/
 {executed in 3 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectRemdtRemseq:143] - <==      Total: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectTcMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1 FROM TC_SEQNOINF WHERE COM_AGSEC = ? /*com_agsec*/ AND COM_NOSEC = 'C08CRS' AND SEQ_SETDT = ? /*req_dt*/ 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectTcMaxSeqNo:143] - ==> Parameters: C02I(String), 20210629(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1
		  FROM TC_SEQNOINF 
		 WHERE COM_AGSEC = 'C02I' /*com_agsec*/ 	
		   AND COM_NOSEC = 'C08CRS' 
		   AND SEQ_SETDT = '20210629' /*req_dt*/
 {executed in 3 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectTcMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [insertTcSeqnoinf:143] - ==>  Preparing: MERGE INTO TC_SEQNOINF SI USING (SELECT ? /*com_agsec*/ AS COM_AGSEC ,? /*req_dt*/ AS SEQ_SETDT) A ON SI.COM_AGSEC = A.COM_AGSEC AND SI.SEQ_SETDT = A.SEQ_SETDT AND SI.COM_NOSEC = 'C08CRS' WHEN MATCHED THEN UPDATE SET SEQ_NO = ? /*max_seq_no*/ WHEN NOT MATCHED THEN INSERT (COM_AGSEC ,COM_NOSEC ,SEQ_SETDT ,SEQ_NO ,USR_CD ,SYS_DT ) VALUES(? /*com_agsec*/ ,'C08CRS' ,? /*req_dt*/ ,? /*max_seq_no*/ ,'CHATBOT' ,GETDATE() ); 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [insertTcSeqnoinf:143] - ==> Parameters: C02I(String), 20210629(String), 431(Integer), C02I(String), 20210629(String), 431(Integer)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. MERGE INTO TC_SEQNOINF SI
    	 USING (SELECT 'C02I' /*com_agsec*/  AS COM_AGSEC
    	              ,'20210629' /*req_dt*/  AS SEQ_SETDT) A
       		ON SI.COM_AGSEC = A.COM_AGSEC
       	   AND SI.SEQ_SETDT = A.SEQ_SETDT
       	   AND SI.COM_NOSEC = 'C08CRS'
          WHEN MATCHED THEN
            UPDATE 
               SET SEQ_NO = 431 /*max_seq_no*/ 
          WHEN NOT MATCHED THEN
		    INSERT
		      	  (COM_AGSEC
		      	  ,COM_NOSEC
		      	  ,SEQ_SETDT
		      	  ,SEQ_NO
		      	  ,USR_CD
		      	  ,SYS_DT
		          )    
			VALUES('C02I' /*com_agsec*/ 
			      ,'C08CRS'
			      ,'20210629' /*req_dt*/ 
			      ,431 /*max_seq_no*/ 
			      ,'CHATBOT'
			      ,GETDATE()
			      );
 {executed in 2 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [insertTcSeqnoinf:143] - <==    Updates: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [updateTcresdtl:143] - ==>  Preparing: UPDATE TC_RESDTL SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [updateTcresdtl:143] - ==> Parameters: 20210629(String), IC0431(String), 20210628(String), IC0419(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESDTL SET REM_DT = '20210629' /*req_dt*/ , REM_SEQ = 'IC0431' /*new_rem_seq*/ 
	 WHERE REM_DT = '20210628' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0419' /*rem_seq*/
 {executed in 11 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [updateTcresdtl:143] - <==    Updates: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [updateTcresmst:143] - ==>  Preparing: UPDATE TC_RESMST SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ , ORM_NO = ? /*new_ormno*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [updateTcresmst:143] - ==> Parameters: 20210629(String), IC0431(String), I20210614224302(String), 20210628(String), IC0419(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST SET REM_DT = '20210629' /*req_dt*/ , REM_SEQ = 'IC0431' /*new_rem_seq*/ , ORM_NO = 'I20210614224302' /*new_ormno*/ 
	 WHERE REM_DT = '20210628' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0419' /*rem_seq*/
 {executed in 71 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [updateTcresmst:143] - <==    Updates: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [updateToOrdmasSigongStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_PSTS = 'E' /* 예약상태 */ ,ORM_CDT = ? /*req_dt*/ /* 확정납기일 */ ,USR_CD = 'CHATBOT' /* 최종변경자 */ ,SYS_DT = GETDATE() /* 최종변경일시 */ ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,? /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990')) END) WHERE ORM_NO = ? /*new_ormno*/ 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [updateToOrdmasSigongStat:143] - ==> Parameters: 20210629(String), 20210629(String), 20210629(String), I20210614224302(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS
       SET ORM_PSTS = 'E'    /* 예약상태 */		
          ,ORM_CDT  = '20210629' /*req_dt*/      /* 확정납기일 */		
          ,USR_CD   = 'CHATBOT'   /* 최종변경자 */
          ,SYS_DT   = GETDATE()     /* 최종변경일시 */
		  ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL('20210629' /*chg_orm_cdt*/ ,'') != '' THEN
							  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,'20210629' /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990'))
							   END)
     WHERE ORM_NO = 'I20210614224302' /*new_ormno*/
 {executed in 28 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [updateToOrdmasSigongStat:143] - <==    Updates: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectOnlineynCheck:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224301' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224301(String), I20210614224301(String), I20210614224301(String), 챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224301,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224301' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224301' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224301' /*key_no*/ ),
		        '챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224301,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 2 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [insertApicallHist:143] - ==> Parameters: erp_OrderArrivalDateChange(String), 챗봇 주문 도착일정 변경 Auto 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderArrivalDateChange' /*call_function*/ , '챗봇 주문 도착일정 변경 Auto 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 3 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectChginformData:143] - ==> Parameters: I20210614224301(String)
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224301' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 09:56:54[http-nio-8082-exec-4] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 09:59:45[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 09:59:46[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 09:59:46[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 09:59:46[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 09:59:52[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 15904 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 09:59:52[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 09:59:53[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 09:59:53[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 09:59:53[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 09:59:53[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 09:59:53[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 09:59:53[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 09:59:53[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 1046 ms
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 09:59:54[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5562c2c9, org.springframework.security.web.context.SecurityContextPersistenceFilter@50448409, org.springframework.security.web.header.HeaderWriterFilter@4ed4a7e4, org.springframework.security.web.authentication.logout.LogoutFilter@7c781c42, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@9b76b60, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b0dc227, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3e7b65d7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@673c4f6e, org.springframework.security.web.session.SessionManagementFilter@55651434, org.springframework.security.web.access.ExceptionTranslationFilter@119b0892, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b2df3aa]
INFO  21-06-23 09:59:54[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 09:59:54[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 09:59:54[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 09:59:54[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 09:59:54[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 09:59:54[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 09:59:54[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 09:59:54[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 09:59:54[main] [ChatBotApplication:61] - Started ChatBotApplication in 2.543 seconds (JVM running for 4.247)
INFO  21-06-23 10:00:02[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 10:00:02[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 10:00:02[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 6 ms
INFO  21-06-23 10:02:11[http-nio-8082-exec-2] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 10:02:13[http-nio-8082-exec-2] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [insertChgAddrReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45005', 'O47002', 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, '', TOO.ORM_NM, NULL, TOO.ORM_GPOST, ? /*chg_orm_gpost*/ , TOO.ORM_GADDR, ? /*chg_addr*/ , NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, ? /*chg_addr_dtl*/ , TOO.BDONG, ? /*chg_bdongcd*/ FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [insertChgAddrReq:143] - ==> Parameters: null, 서울시 송파구 오금로 311(String), 퍼시스본사 10층(String), 1171011200(String), I20210614224303(String)
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45005',
		'O47002',
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'',
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL /*chg_orm_gpost*/ ,
		TOO.ORM_GADDR,
		'서울시 송파구 오금로 311' /*chg_addr*/ ,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		'퍼시스본사 10층' /*chg_addr_dtl*/ ,
		TOO.BDONG,
		'1171011200' /*chg_bdongcd*/ 
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 23 msec}
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [insertChgAddrReq:143] - <==    Updates: 0
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [updateToOrdmasAddr:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_GPOST = ? /*orm_gpost*/ , ORM_GADDR = ? /*chg_addr*/ , ADDR_DTL = ISNULL(? /*chg_addr_dtl*/ , ''), BDONG = ? /*bdongcd*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [updateToOrdmasAddr:143] - ==> Parameters: 05661(String), 서울시 송파구 오금로 311(String), 퍼시스본사 10층(String), null, I20210614224303(String)
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_GPOST = '05661' /*orm_gpost*/ , ORM_GADDR = '서울시 송파구 오금로 311' /*chg_addr*/ , ADDR_DTL = ISNULL('퍼시스본사 10층' /*chg_addr_dtl*/ , ''), BDONG = NULL /*bdongcd*/ 
	WHERE ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 174 msec}
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [updateToOrdmasAddr:143] - <==    Updates: 0
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224303' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 2 msec}
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [selectOrmCryn:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 10:02:13[http-nio-8082-exec-2] [selectOrmCryn:143] - <==      Total: 0
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [insertChgAddrReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45005', 'O47002', 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, '', TOO.ORM_NM, NULL, TOO.ORM_GPOST, ? /*chg_orm_gpost*/ , TOO.ORM_GADDR, ? /*chg_addr*/ , NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, ? /*chg_addr_dtl*/ , TOO.BDONG, ? /*chg_bdongcd*/ FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [insertChgAddrReq:143] - ==> Parameters: null, 서울시 송파구 오금로 311(String), 퍼시스본사 10층(String), 1171011200(String), I20210614224302(String)
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45005',
		'O47002',
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'',
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL /*chg_orm_gpost*/ ,
		TOO.ORM_GADDR,
		'서울시 송파구 오금로 311' /*chg_addr*/ ,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		'퍼시스본사 10층' /*chg_addr_dtl*/ ,
		TOO.BDONG,
		'1171011200' /*chg_bdongcd*/ 
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 12 msec}
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [insertChgAddrReq:143] - <==    Updates: 1
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [updateToOrdmasAddr:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_GPOST = ? /*orm_gpost*/ , ORM_GADDR = ? /*chg_addr*/ , ADDR_DTL = ISNULL(? /*chg_addr_dtl*/ , ''), BDONG = ? /*bdongcd*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [updateToOrdmasAddr:143] - ==> Parameters: 05661(String), 서울시 송파구 오금로 311(String), 퍼시스본사 10층(String), null, I20210614224302(String)
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_GPOST = '05661' /*orm_gpost*/ , ORM_GADDR = '서울시 송파구 오금로 311' /*chg_addr*/ , ADDR_DTL = ISNULL('퍼시스본사 10층' /*chg_addr_dtl*/ , ''), BDONG = NULL /*bdongcd*/ 
	WHERE ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 28 msec}
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [updateToOrdmasAddr:143] - <==    Updates: 1
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224302' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 3 msec}
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectOrmCryn:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [updateTcResmstAddr:143] - ==>  Preparing: UPDATE TC_RESMST SET TOWN_CD = ? /*chg_bdongcd*/ , USR_CD = 'CHATBOT', SYS_DT = GETDATE() WHERE COM_SSEC = 'C18C' AND ORM_NO = ? /*key_no*/ AND REM_DT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ) 
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [updateTcResmstAddr:143] - ==> Parameters: 1171011200(String), I20210614224302(String), I20210614224302(String)
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST 
	   SET TOWN_CD = '1171011200' /*chg_bdongcd*/ , USR_CD = 'CHATBOT', SYS_DT = GETDATE()
	 WHERE COM_SSEC = 'C18C'
	   AND ORM_NO = 'I20210614224302' /*key_no*/ 
	   AND REM_DT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/  )
 {executed in 21 msec}
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [updateTcResmstAddr:143] - <==    Updates: 1
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectTcplanmstYn:143] - ==>  Preparing: SELECT (CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TC_PLANMST TCP WITH (NOLOCK) WHERE TCP.ORM_NO = ? /*key_no*/ AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ) 
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectTcplanmstYn:143] - ==> Parameters: I20210614224302(String), I20210614224302(String)
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		(CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TC_PLANMST TCP WITH (NOLOCK)
	 WHERE TCP.ORM_NO = 'I20210614224302' /*key_no*/ 
	   AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/  )
 {executed in 37 msec}
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectTcplanmstYn:143] - <==      Total: 1
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [updateToChgmasChgAddrStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [updateToChgmasChgAddrStat:143] - ==> Parameters: I20210614224302(String), 01(String)
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224302' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 7 msec}
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [updateToChgmasChgAddrStat:143] - <==    Updates: 1
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectOnlineynCheck:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224302(String), I20210614224302(String), I20210614224302(String), 챗봇을 통해 주소변경처리 되었습니다. (주문번호 : I20210614224302,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/ ),
		        '챗봇을 통해 주소변경처리 되었습니다. (주문번호 : I20210614224302,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 2 msec}
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeAddressRequestProc(String), 챗봇 주문 주소변경요청 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeAddressRequestProc' /*call_function*/ , '챗봇 주문 주소변경요청 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 2 msec}
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectChginformData:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 10:02:42[http-nio-8082-exec-4] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 10:02:59[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 10:03:00[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 10:03:00[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 10:03:00[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 12:16:07[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 23252 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 12:16:07[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 12:16:08[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 12:16:09[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 12:16:09[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 12:16:09[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 12:16:09[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 12:16:09[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 12:16:09[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 2373 ms
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 12:16:10[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ea52184, org.springframework.security.web.context.SecurityContextPersistenceFilter@6abdec0e, org.springframework.security.web.header.HeaderWriterFilter@6aa3bfc, org.springframework.security.web.authentication.logout.LogoutFilter@6a12c7a8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2a334bac, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b5c4f17, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d61a348, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e7b65d7, org.springframework.security.web.session.SessionManagementFilter@7dffda8b, org.springframework.security.web.access.ExceptionTranslationFilter@2596d7f4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3bc4ef12]
INFO  21-06-23 12:16:10[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 12:16:10[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 12:16:11[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 12:16:11[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 12:16:11[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 12:16:11[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 12:16:11[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 12:16:11[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 12:16:11[main] [ChatBotApplication:61] - Started ChatBotApplication in 4.86 seconds (JVM running for 7.566)
INFO  21-06-23 12:16:34[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 12:16:34[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 12:16:34[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 13 ms
INFO  21-06-23 12:17:16[http-nio-8082-exec-9] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 12:17:18[http-nio-8082-exec-9] [HikariDataSource:123] - HikariPool-1 - Start completed.
INFO  21-06-23 12:21:30[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 12:21:33[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 12:21:33[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 12:21:33[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 12:21:45[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 26228 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 12:21:45[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 12:21:46[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 12:21:47[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 12:21:47[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 12:21:47[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 12:21:47[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 12:21:47[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 12:21:47[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 2203 ms
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 12:21:48[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a8c93, org.springframework.security.web.context.SecurityContextPersistenceFilter@54755dd9, org.springframework.security.web.header.HeaderWriterFilter@7da31a40, org.springframework.security.web.authentication.logout.LogoutFilter@2f7efd0b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1115433e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4462efe1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2629d5dc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3bed3315, org.springframework.security.web.session.SessionManagementFilter@1b5a1d85, org.springframework.security.web.access.ExceptionTranslationFilter@28237492, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4d1ff6b1]
INFO  21-06-23 12:21:48[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 12:21:48[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 12:21:49[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 12:21:49[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 12:21:49[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 12:21:49[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 12:21:49[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 12:21:49[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 12:21:49[main] [ChatBotApplication:61] - Started ChatBotApplication in 4.582 seconds (JVM running for 7.3)
INFO  21-06-23 12:22:12[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 12:22:12[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 12:22:12[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 9 ms
INFO  21-06-23 12:24:24[http-nio-8082-exec-2] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 12:24:26[http-nio-8082-exec-2] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectSigongYn:143] - ==>  Preparing: SELECT ISNULL(ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectSigongYn:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(ORM_CRYN, 'N') AS DATA1,
		   TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 8 msec}
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectSigongYn:143] - <==      Total: 1
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectSchDivYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectSchDivYn:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectSchDivYn:143] - <==      Total: 1
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectSigongConfirmYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectSigongConfirmYn:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectSigongConfirmYn:143] - <==      Total: 1
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectChgstatusYn:143] - ==>  Preparing: SELECT ( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = ? /*key_no*/ AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' ) 
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectChgstatusYn:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TO_CHGMAS TOC WITH (NOLOCK)
	 WHERE TOC.ORM_NO = 'I20210614224302' /*key_no*/ 
	   AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' )
 {executed in 2 msec}
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [selectChgstatusYn:143] - <==      Total: 1
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [insertOrmCdtChangeReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45002', NULL, 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, ? /*req_dt*/ , TOO.ORM_NM, NULL, TOO.ORM_GPOST, NULL, TOO.ORM_GADDR, NULL, NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, NULL, TOO.BDONG, NULL FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [insertOrmCdtChangeReq:143] - ==> Parameters: 20210630(String), I20210614224302(String)
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45002',
		NULL,
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'20210630' /*req_dt*/ ,
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL,
		TOO.ORM_GADDR,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		NULL,
		TOO.BDONG,
		NULL
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 18 msec}
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [insertOrmCdtChangeReq:143] - <==    Updates: 1
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeDtRequest(String), 챗봇 주문 도착일정 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeDtRequest' /*call_function*/ , '챗봇 주문 도착일정 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 5 msec}
DEBUG 21-06-23 12:24:26[http-nio-8082-exec-2] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [executeProGetNo:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', 'I20210614224302' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 3 msec}
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [selectToChgmasChgdt:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224302' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 4 msec}
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [selectToChgmasChgdt:143] - <==      Total: 1
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [insertNewOrdMaster:143] - ==>  Preparing: INSERT INTO TO_ORDMAS ( ORM_NO ,ORM_NM ,COM_ORD ,ORM_SSEC ,VND_CD ,AGT_CD ,CMP_CD ,ORM_ORDDT ,ORM_STAT ,ORM_RDT ,ORM_ADT ,ORM_CDT ,ORM_AGTCST ,ORM_PURCST ,ORM_VISIT ,ORM_PURRSN ,ORM_GGUBUN ,ORM_GOOD ,ORM_GPOST ,ORM_GADDR ,ORM_GEMP ,DET_CD ,ORM_GEMPHP ,ORM_HDPHONE ,ORM_GSPC ,ORM_DOWNST ,ORM_GRTTON ,ORM_DOWNNM ,ORM_DPOST ,ORM_DADDR ,ORM_CONSP ,ORM_SALEMP ,ORM_AGTEMP ,PRJ_CD ,ORM_REBAGT ,ORM_CMPCD ,ORM_SPC ,ORM_PART ,EPI_PINO ,ORM_CRYN ,ORM_CSTYN ,ORM_CSTRATE ,ORM_COMRATE ,USR_CD ,SYS_DT ,ORM_WMSSEC ,WMS_YN ,PLM_PTM ,PLM_EVT ,PLM_ITR ,FRM_NO ,ORM_PSTS ,ADDR_DTL ,BDONG ,ORM_ATTR ,DLV_KIND ,PLM_MERG_NO ,COM_BRD ,LDDR_YN ,CNT_CDT ,CNT_ATTR ,SHP_NO ,FST_USR ,FST_SYS_DT ,PAY_DUE_DT ,APT_SEQ ,PROMO_SERIAL ,LDDR_FREE ,ADDR_GUBUN ) SELECT ? /*new_orm_no*/ ,TOO.ORM_NM ,TOO.COM_ORD ,TOO.ORM_SSEC ,TOO.VND_CD ,TOO.AGT_CD ,TOO.CMP_CD ,TOO.ORM_ORDDT ,TOO.ORM_STAT ,TOO.ORM_RDT ,TOO.ORM_ADT ,? /*chg_orm_cdt*/ ,TOO.ORM_AGTCST ,TOO.ORM_PURCST ,TOO.ORM_VISIT ,TOO.ORM_PURRSN ,TOO.ORM_GGUBUN ,TOO.ORM_GOOD ,TOO.ORM_GPOST ,TOO.ORM_GADDR ,TOO.ORM_GEMP ,TOO.DET_CD ,TOO.ORM_GEMPHP ,TOO.ORM_HDPHONE ,TOO.ORM_GSPC ,TOO.ORM_DOWNST ,TOO.ORM_GRTTON ,TOO.ORM_DOWNNM ,TOO.ORM_DPOST ,TOO.ORM_DADDR ,TOO.ORM_CONSP ,TOO.ORM_SALEMP ,TOO.ORM_AGTEMP ,TOO.PRJ_CD ,TOO.ORM_REBAGT ,TOO.ORM_CMPCD ,TOO.ORM_SPC ,TOO.ORM_PART ,TOO.EPI_PINO ,TOO.ORM_CRYN ,TOO.ORM_CSTYN ,TOO.ORM_CSTRATE ,TOO.ORM_COMRATE ,TOO.USR_CD ,GETDATE() ,TOO.ORM_WMSSEC ,TOO.WMS_YN ,TOO.PLM_PTM ,TOO.PLM_EVT ,TOO.PLM_ITR ,TOO.FRM_NO ,TOO.ORM_PSTS ,TOO.ADDR_DTL ,TOO.BDONG ,TOO.ORM_ATTR ,TOO.DLV_KIND ,TOO.PLM_MERG_NO ,TOO.COM_BRD ,TOO.LDDR_YN ,TOO.CNT_CDT ,TOO.CNT_ATTR ,TOO.SHP_NO ,TOO.FST_USR ,GETDATE() ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I',? /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990')) END) ,TOO.APT_SEQ ,TOO.PROMO_SERIAL ,TOO.LDDR_FREE ,TOO.ADDR_GUBUN FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [insertNewOrdMaster:143] - ==> Parameters: I20210614224303(String), 20210630(String), 20210630(String), 20210630(String), I20210614224302(String)
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDMAS (
		  ORM_NO               
          ,ORM_NM
          ,COM_ORD
          ,ORM_SSEC
          ,VND_CD
          ,AGT_CD
          ,CMP_CD
          ,ORM_ORDDT   
          ,ORM_STAT                
          ,ORM_RDT
          ,ORM_ADT
          ,ORM_CDT             
          ,ORM_AGTCST
          ,ORM_PURCST
          ,ORM_VISIT   
          ,ORM_PURRSN
          ,ORM_GGUBUN
          ,ORM_GOOD
          ,ORM_GPOST
          ,ORM_GADDR
          ,ORM_GEMP
          ,DET_CD   
          ,ORM_GEMPHP
          ,ORM_HDPHONE
          ,ORM_GSPC
          ,ORM_DOWNST
          ,ORM_GRTTON
          ,ORM_DOWNNM
          ,ORM_DPOST   
          ,ORM_DADDR
          ,ORM_CONSP
          ,ORM_SALEMP
          ,ORM_AGTEMP
          ,PRJ_CD
          ,ORM_REBAGT
          ,ORM_CMPCD   
          ,ORM_SPC
          ,ORM_PART
          ,EPI_PINO
          ,ORM_CRYN
          ,ORM_CSTYN
          ,ORM_CSTRATE
          ,ORM_COMRATE
          ,USR_CD
          ,SYS_DT
          ,ORM_WMSSEC
          ,WMS_YN
          ,PLM_PTM
          ,PLM_EVT
          ,PLM_ITR
          ,FRM_NO
          ,ORM_PSTS
  		  ,ADDR_DTL
  		  ,BDONG
  		  ,ORM_ATTR
  		  ,DLV_KIND
  		  ,PLM_MERG_NO
  		  ,COM_BRD
  		  ,LDDR_YN
  		  ,CNT_CDT
  		  ,CNT_ATTR 
  		  ,SHP_NO 
  		 ,FST_USR       
		 ,FST_SYS_DT 
		 ,PAY_DUE_DT
		 ,APT_SEQ
		 ,PROMO_SERIAL
		 ,LDDR_FREE
		 ,ADDR_GUBUN
 	      )
	SELECT
		  'I20210614224303' /*new_orm_no*/            
          ,TOO.ORM_NM
          ,TOO.COM_ORD
          ,TOO.ORM_SSEC
          ,TOO.VND_CD
          ,TOO.AGT_CD
          ,TOO.CMP_CD
          ,TOO.ORM_ORDDT   
          ,TOO.ORM_STAT                
          ,TOO.ORM_RDT
          ,TOO.ORM_ADT
          ,'20210630' /*chg_orm_cdt*/          
          ,TOO.ORM_AGTCST
          ,TOO.ORM_PURCST
          ,TOO.ORM_VISIT   
          ,TOO.ORM_PURRSN
          ,TOO.ORM_GGUBUN
          ,TOO.ORM_GOOD
          ,TOO.ORM_GPOST
          ,TOO.ORM_GADDR
          ,TOO.ORM_GEMP
          ,TOO.DET_CD   
          ,TOO.ORM_GEMPHP
          ,TOO.ORM_HDPHONE
          ,TOO.ORM_GSPC
          ,TOO.ORM_DOWNST
          ,TOO.ORM_GRTTON
          ,TOO.ORM_DOWNNM
          ,TOO.ORM_DPOST   
          ,TOO.ORM_DADDR
          ,TOO.ORM_CONSP
          ,TOO.ORM_SALEMP
          ,TOO.ORM_AGTEMP
          ,TOO.PRJ_CD
          ,TOO.ORM_REBAGT
          ,TOO.ORM_CMPCD   
          ,TOO.ORM_SPC
          ,TOO.ORM_PART
          ,TOO.EPI_PINO
          ,TOO.ORM_CRYN
          ,TOO.ORM_CSTYN
          ,TOO.ORM_CSTRATE
          ,TOO.ORM_COMRATE
          ,TOO.USR_CD
          ,GETDATE()
          ,TOO.ORM_WMSSEC
          ,TOO.WMS_YN
          ,TOO.PLM_PTM
          ,TOO.PLM_EVT
          ,TOO.PLM_ITR
          ,TOO.FRM_NO
          ,TOO.ORM_PSTS
  		  ,TOO.ADDR_DTL
  		  ,TOO.BDONG
  		  ,TOO.ORM_ATTR
  		  ,TOO.DLV_KIND
  		  ,TOO.PLM_MERG_NO
  		  ,TOO.COM_BRD
  		  ,TOO.LDDR_YN
  		  ,TOO.CNT_CDT
  		  ,TOO.CNT_ATTR 
  		  ,TOO.SHP_NO 
  		  ,TOO.FST_USR       
		  ,GETDATE() 
		  ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL('20210630' /*chg_orm_cdt*/ ,'') != '' THEN 
		  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I','20210630' /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990'))   
		   END)
		  ,TOO.APT_SEQ
		  ,TOO.PROMO_SERIAL
		  ,TOO.LDDR_FREE
		  ,TOO.ADDR_GUBUN	
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 47 msec}
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [insertNewOrdMaster:143] - <==    Updates: 1
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [insertNewOrdDetail:143] - ==>  Preparing: INSERT INTO TO_ORDDET ( ORM_NO ,ORD_SSEQ ,ORD_ISEQ ,SET_CD ,COL_SCD ,ITM_CD ,COL_CD ,ORD_QTY ,ORD_CST ,TAX_AMT ,STK_CD ,ORD_PURCD ,ORD_GOODSEC ,ORD_UPCD ,ORD_WHSCD ,ORD_TWHSCD ,ORD_CURCD ,ORD_FCST ,ORD_QSTAT ,ORD_RMK ,ORD_UNFOLDING ,ORD_ENDYN ,USR_CD ,SYS_DT ,ORD_PIDSEQ ,ORM_PLANDT ,COM_ARESEC ,CAR_NO ,PMS_NO ,COM_TONSEC ,DOK_NO ,ORM_PMSYN ,ORM_PMSND ,COM_SCD ,STI_CD ,COM_CTSEC ,COM_RFG ,WMS_YN ,PID_SEQ ,ORD_ITMCOL ,A.SET_QTY ,A.SDT_QTY ,A.BSET_CD ,A.BCOL_CD ,A.MNF_ADT ,A.WH_ADT ,FST_USR ,FST_SYS_DT ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST ) SELECT ? /*new_orm_no*/ ,TOD.ORD_SSEQ ,TOD.ORD_ISEQ ,TOD.SET_CD ,TOD.COL_SCD ,TOD.ITM_CD ,TOD.COL_CD ,TOD.ORD_QTY ,TOD.ORD_CST ,TOD.TAX_AMT ,TOD.STK_CD ,TOD.ORD_PURCD ,TOD.ORD_GOODSEC ,TOD.ORD_UPCD ,TOD.ORD_WHSCD ,TOD.ORD_TWHSCD ,TOD.ORD_CURCD ,TOD.ORD_FCST ,TOD.ORD_QSTAT ,TOD.ORD_RMK ,TOD.ORD_UNFOLDING ,TOD.ORD_ENDYN ,TOD.USR_CD ,GETDATE() ,TOD.ORD_PIDSEQ ,ORM_PLANDT ,TOD.COM_ARESEC ,TOD.CAR_NO ,TOD.PMS_NO ,TOD.COM_TONSEC ,TOD.DOK_NO ,TOD.ORM_PMSYN ,TOD.ORM_PMSND ,TOD.COM_SCD ,TOD.STI_CD ,TOD.COM_CTSEC ,TOD.COM_RFG ,TOD.WMS_YN ,TOD.PID_SEQ ,TOD.ORD_ITMCOL ,TOD.SET_QTY ,TOD.SDT_QTY ,TOD.BSET_CD ,TOD.BCOL_CD ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,FST_USR ,GETDATE() ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST FROM TO_ORDDET TOD WITH (NOLOCK) WHERE TOD.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:25:01[http-nio-8082-exec-4] [insertNewOrdDetail:143] - ==> Parameters: I20210614224303(String), T01I(String), 20210630(String), T01I(String), T01I(String), 20210630(String), T01I(String), I20210614224302(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDDET (
		  ORM_NO
	      ,ORD_SSEQ
	      ,ORD_ISEQ
	      ,SET_CD
	      ,COL_SCD
	      ,ITM_CD
	      ,COL_CD
	      ,ORD_QTY
	      ,ORD_CST
	      ,TAX_AMT
	      ,STK_CD
	      ,ORD_PURCD
	      ,ORD_GOODSEC
	      ,ORD_UPCD
	      ,ORD_WHSCD
	      ,ORD_TWHSCD
	      ,ORD_CURCD
	      ,ORD_FCST
	      ,ORD_QSTAT
	      ,ORD_RMK
	      ,ORD_UNFOLDING
	      ,ORD_ENDYN
	      ,USR_CD
	      ,SYS_DT
	      ,ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,COM_ARESEC
	      ,CAR_NO
	      ,PMS_NO
	      ,COM_TONSEC
	      ,DOK_NO
	      ,ORM_PMSYN
	      ,ORM_PMSND
	      ,COM_SCD
	      ,STI_CD
	      ,COM_CTSEC
	      ,COM_RFG
	      ,WMS_YN
	      ,PID_SEQ
	      ,ORD_ITMCOL
	      ,A.SET_QTY
          ,A.SDT_QTY
          ,A.BSET_CD
          ,A.BCOL_CD
          ,A.MNF_ADT
          ,A.WH_ADT
		  ,FST_USR       
		  ,FST_SYS_DT
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
 	      )
	SELECT
		  'I20210614224303' /*new_orm_no*/ 
	      ,TOD.ORD_SSEQ
	      ,TOD.ORD_ISEQ
	      ,TOD.SET_CD
	      ,TOD.COL_SCD
	      ,TOD.ITM_CD
	      ,TOD.COL_CD
	      ,TOD.ORD_QTY
	      ,TOD.ORD_CST
	      ,TOD.TAX_AMT
	      ,TOD.STK_CD
	      ,TOD.ORD_PURCD
	      ,TOD.ORD_GOODSEC
	      ,TOD.ORD_UPCD
	      ,TOD.ORD_WHSCD
	      ,TOD.ORD_TWHSCD
	      ,TOD.ORD_CURCD
	      ,TOD.ORD_FCST
	      ,TOD.ORD_QSTAT
	      ,TOD.ORD_RMK
	      ,TOD.ORD_UNFOLDING
	      ,TOD.ORD_ENDYN
	      ,TOD.USR_CD
	      ,GETDATE()
	      ,TOD.ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,TOD.COM_ARESEC
	      ,TOD.CAR_NO
	      ,TOD.PMS_NO
	      ,TOD.COM_TONSEC
	      ,TOD.DOK_NO
	      ,TOD.ORM_PMSYN
	      ,TOD.ORM_PMSND
	      ,TOD.COM_SCD
	      ,TOD.STI_CD
	      ,TOD.COM_CTSEC
	      ,TOD.COM_RFG
	      ,TOD.WMS_YN
	      ,TOD.PID_SEQ
	      ,TOD.ORD_ITMCOL
	      ,TOD.SET_QTY
          ,TOD.SDT_QTY
          ,TOD.BSET_CD
          ,TOD.BCOL_CD
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210630' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) 
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210630' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0)
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
		  ,FST_USR       
		  ,GETDATE()
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
	  FROM TO_ORDDET TOD WITH (NOLOCK)
	 WHERE TOD.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 864 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertNewOrdDetail:143] - <==    Updates: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [deleteRecdRenD:143] - ==>  Preparing: DELETE FROM TO_RECE_REN WHERE REC_NO = CAST(? /*key_no*/ AS VARCHAR) 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [deleteRecdRenD:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM TO_RECE_REN
     WHERE REC_NO = CAST('I20210614224302' /*key_no*/  AS VARCHAR)
 {executed in 3 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [deleteRecdRenD:143] - <==    Updates: 0
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertRecdRenD:143] - ==>  Preparing: INSERT INTO TO_RECE_REN (REC_NO , ITM_CD ,COL_CD ,REC_QTY ,ORM_RDT ,ORM_RDT_2 ,ORM_RDT_2_YN ,REC_DT_1 ,REC_DT_2 ,COM_CMP ,IOP_FINEST ,COM_GOODCD ,VND_CD ,COM_STKSEC ,COM_STDSEC ,IOP_MNFCST ) SELECT D.ORM_NO ,D.ITM_CD ,D.COL_CD ,SUM(D.ORD_QTY) ,M.ORM_RDT ,NULL ,NULL ,NULL ,NULL ,CAST('T01I' AS VARCHAR) ,C.IOP_FINEST ,C.COM_GOODCD ,C.VND_CD ,S.COM_STKSEC ,S.COM_STDSEC ,C.IOP_MNFCST FROM TO_ORDMAS M WITH (NOLOCK) ,TO_ORDDET D WITH (NOLOCK) ,TT_ITMCOP C WITH (NOLOCK) ,TT_ITMMST S WITH (NOLOCK) WHERE M.ORM_NO = D.ORM_NO AND D.ITM_CD = C.ITM_CD AND D.COL_CD = C.COL_CD AND C.ITM_CD = S.ITM_CD AND C.COL_CD = S.COL_CD AND D.ORM_NO = CAST(? /*key_no*/ AS VARCHAR) AND C.COM_CMP = CAST('T01I' AS VARCHAR) GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertRecdRenD:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT 
	  INTO TO_RECE_REN 
	            (REC_NO
	             , ITM_CD
	             ,COL_CD
	             ,REC_QTY
	             ,ORM_RDT
	             ,ORM_RDT_2
	             ,ORM_RDT_2_YN
	             ,REC_DT_1
	             ,REC_DT_2
                ,COM_CMP
                ,IOP_FINEST
                ,COM_GOODCD
                ,VND_CD
                ,COM_STKSEC
                ,COM_STDSEC
                ,IOP_MNFCST
                )
	SELECT D.ORM_NO 
	           ,D.ITM_CD 
	           ,D.COL_CD 
	           ,SUM(D.ORD_QTY) 
	           ,M.ORM_RDT 
	           ,NULL
	           ,NULL 
	           ,NULL 
	           ,NULL 
			   ,CAST('T01I' AS VARCHAR) 
			   ,C.IOP_FINEST 
			   ,C.COM_GOODCD 
			   ,C.VND_CD 
			   ,S.COM_STKSEC 
			   ,S.COM_STDSEC 
			   ,C.IOP_MNFCST	   
	FROM TO_ORDMAS M WITH (NOLOCK)
	         ,TO_ORDDET D WITH (NOLOCK)
	         ,TT_ITMCOP C WITH (NOLOCK)
	         ,TT_ITMMST S WITH (NOLOCK)
	WHERE M.ORM_NO = D.ORM_NO
	AND D.ITM_CD = C.ITM_CD 
	AND D.COL_CD = C.COL_CD
	AND C.ITM_CD = S.ITM_CD 
	AND C.COL_CD = S.COL_CD
	AND D.ORM_NO = CAST('I20210614224302' /*key_no*/  AS VARCHAR)
	AND C.COM_CMP = CAST('T01I' AS VARCHAR) 
	GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, 
				    C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST
 {executed in 3 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertRecdRenD:143] - <==    Updates: 20
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224302' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 3 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateToOrdChgmasStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() ,EMC_YN = 'N' ,OUT_TYP = ' ' ,MULTI_CHGKND = '' ,NEW_ORMNO = ? /*new_orm_no*/ WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateToOrdChgmasStat:143] - ==> Parameters: I20210614224303(String), I20210614224302(String), 02(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
            ,EMC_YN = 'N'
            ,OUT_TYP = '      ' 
            ,MULTI_CHGKND = ''
            ,NEW_ORMNO = 'I20210614224303' /*new_orm_no*/ 
       WHERE ORM_NO = 'I20210614224302' /*key_no*/ 
       AND RQT_SEQ = '02' /*req_seq*/
 {executed in 2 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateToOrdChgmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateToOrdmasStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_STAT = 'O08003' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateToOrdmasStat:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS              									
       SET ORM_STAT = 'O08003' 
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 70 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateToOrdmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectOrmCryn:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectSigongReserveYn:143] - ==>  Preparing: SELECT ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectSigongReserveYn:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 1 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectSigongReserveYn:143] - <==      Total: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectRemdtRemseq:143] - ==>  Preparing: SELECT TCR.REM_DT AS DATA1, TCR.REM_SEQ AS DATA2, ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ AND TCR.REM_DT = ? /*rem_dt*/ 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectRemdtRemseq:143] - ==> Parameters: I20210614224302(String), 20210629(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TCR.REM_DT AS DATA1,
		TCR.REM_SEQ AS DATA2,
		ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224302' /*key_no*/ 
	   AND TCR.REM_DT = '20210629' /*rem_dt*/
 {executed in 2 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectRemdtRemseq:143] - <==      Total: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectTcMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1 FROM TC_SEQNOINF WHERE COM_AGSEC = ? /*com_agsec*/ AND COM_NOSEC = 'C08CRS' AND SEQ_SETDT = ? /*req_dt*/ 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectTcMaxSeqNo:143] - ==> Parameters: C02I(String), 20210630(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1
		  FROM TC_SEQNOINF 
		 WHERE COM_AGSEC = 'C02I' /*com_agsec*/ 	
		   AND COM_NOSEC = 'C08CRS' 
		   AND SEQ_SETDT = '20210630' /*req_dt*/
 {executed in 2 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectTcMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertTcSeqnoinf:143] - ==>  Preparing: MERGE INTO TC_SEQNOINF SI USING (SELECT ? /*com_agsec*/ AS COM_AGSEC ,? /*req_dt*/ AS SEQ_SETDT) A ON SI.COM_AGSEC = A.COM_AGSEC AND SI.SEQ_SETDT = A.SEQ_SETDT AND SI.COM_NOSEC = 'C08CRS' WHEN MATCHED THEN UPDATE SET SEQ_NO = ? /*max_seq_no*/ WHEN NOT MATCHED THEN INSERT (COM_AGSEC ,COM_NOSEC ,SEQ_SETDT ,SEQ_NO ,USR_CD ,SYS_DT ) VALUES(? /*com_agsec*/ ,'C08CRS' ,? /*req_dt*/ ,? /*max_seq_no*/ ,'CHATBOT' ,GETDATE() ); 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertTcSeqnoinf:143] - ==> Parameters: C02I(String), 20210630(String), 795(Integer), C02I(String), 20210630(String), 795(Integer)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. MERGE INTO TC_SEQNOINF SI
    	 USING (SELECT 'C02I' /*com_agsec*/  AS COM_AGSEC
    	              ,'20210630' /*req_dt*/  AS SEQ_SETDT) A
       		ON SI.COM_AGSEC = A.COM_AGSEC
       	   AND SI.SEQ_SETDT = A.SEQ_SETDT
       	   AND SI.COM_NOSEC = 'C08CRS'
          WHEN MATCHED THEN
            UPDATE 
               SET SEQ_NO = 795 /*max_seq_no*/ 
          WHEN NOT MATCHED THEN
		    INSERT
		      	  (COM_AGSEC
		      	  ,COM_NOSEC
		      	  ,SEQ_SETDT
		      	  ,SEQ_NO
		      	  ,USR_CD
		      	  ,SYS_DT
		          )    
			VALUES('C02I' /*com_agsec*/ 
			      ,'C08CRS'
			      ,'20210630' /*req_dt*/ 
			      ,795 /*max_seq_no*/ 
			      ,'CHATBOT'
			      ,GETDATE()
			      );
 {executed in 4 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertTcSeqnoinf:143] - <==    Updates: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateTcresdtl:143] - ==>  Preparing: UPDATE TC_RESDTL SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateTcresdtl:143] - ==> Parameters: 20210630(String), IC0795(String), 20210629(String), IC0431(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESDTL SET REM_DT = '20210630' /*req_dt*/ , REM_SEQ = 'IC0795' /*new_rem_seq*/ 
	 WHERE REM_DT = '20210629' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0431' /*rem_seq*/
 {executed in 17 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateTcresdtl:143] - <==    Updates: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateTcresmst:143] - ==>  Preparing: UPDATE TC_RESMST SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ , ORM_NO = ? /*new_ormno*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateTcresmst:143] - ==> Parameters: 20210630(String), IC0795(String), I20210614224303(String), 20210629(String), IC0431(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST SET REM_DT = '20210630' /*req_dt*/ , REM_SEQ = 'IC0795' /*new_rem_seq*/ , ORM_NO = 'I20210614224303' /*new_ormno*/ 
	 WHERE REM_DT = '20210629' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0431' /*rem_seq*/
 {executed in 33 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateTcresmst:143] - <==    Updates: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateToOrdmasSigongStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_PSTS = 'E' /* 예약상태 */ ,ORM_CDT = ? /*req_dt*/ /* 확정납기일 */ ,USR_CD = 'CHATBOT' /* 최종변경자 */ ,SYS_DT = GETDATE() /* 최종변경일시 */ ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,? /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990')) END) WHERE ORM_NO = ? /*new_ormno*/ 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateToOrdmasSigongStat:143] - ==> Parameters: 20210630(String), 20210630(String), 20210630(String), I20210614224303(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS
       SET ORM_PSTS = 'E'    /* 예약상태 */		
          ,ORM_CDT  = '20210630' /*req_dt*/      /* 확정납기일 */		
          ,USR_CD   = 'CHATBOT'   /* 최종변경자 */
          ,SYS_DT   = GETDATE()     /* 최종변경일시 */
		  ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL('20210630' /*chg_orm_cdt*/ ,'') != '' THEN
							  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,'20210630' /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990'))
							   END)
     WHERE ORM_NO = 'I20210614224303' /*new_ormno*/
 {executed in 28 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [updateToOrdmasSigongStat:143] - <==    Updates: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectOnlineynCheck:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224302(String), I20210614224302(String), I20210614224302(String), 챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224302,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/ ),
		        '챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224302,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 2 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertApicallHist:143] - ==> Parameters: erp_OrderArrivalDateChange(String), 챗봇 주문 도착일정 변경 Auto 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderArrivalDateChange' /*call_function*/ , '챗봇 주문 도착일정 변경 Auto 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 2 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ) AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectChginformData:143] - ==> Parameters: I20210614224302(String)
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ) AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224302' /*key_no*/
 {executed in 39 msec}
DEBUG 21-06-23 12:25:02[http-nio-8082-exec-4] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 12:26:24[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 12:26:25[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 12:26:25[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 12:26:25[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 12:26:35[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 16200 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 12:26:35[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 12:26:36[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 12:26:36[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 12:26:36[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 12:26:37[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 12:26:37[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 12:26:37[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 12:26:37[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 1387 ms
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 12:26:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@51a18b21, org.springframework.security.web.context.SecurityContextPersistenceFilter@6fbc1bb, org.springframework.security.web.header.HeaderWriterFilter@79518e00, org.springframework.security.web.authentication.logout.LogoutFilter@7a4d582c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3f018494, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@f1dd5b4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@71f1cc02, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@62b790a5, org.springframework.security.web.session.SessionManagementFilter@7d70638, org.springframework.security.web.access.ExceptionTranslationFilter@3481ff98, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2152ab30]
INFO  21-06-23 12:26:38[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 12:26:38[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 12:26:38[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 12:26:38[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 12:26:38[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 12:26:38[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 12:26:38[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 12:26:38[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 12:26:38[main] [ChatBotApplication:61] - Started ChatBotApplication in 3.337 seconds (JVM running for 4.807)
INFO  21-06-23 12:26:42[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 12:26:42[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 12:26:42[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 5 ms
INFO  21-06-23 12:27:20[http-nio-8082-exec-1] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 12:27:21[http-nio-8082-exec-1] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectSigongYn:143] - ==>  Preparing: SELECT ISNULL(ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectSigongYn:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(ORM_CRYN, 'N') AS DATA1,
		   TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 22 msec}
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectSigongYn:143] - <==      Total: 1
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectSchDivYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectSchDivYn:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectSchDivYn:143] - <==      Total: 1
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - <==      Total: 1
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectChgstatusYn:143] - ==>  Preparing: SELECT ( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = ? /*key_no*/ AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' ) 
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectChgstatusYn:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TO_CHGMAS TOC WITH (NOLOCK)
	 WHERE TOC.ORM_NO = 'I20210614224303' /*key_no*/ 
	   AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' )
 {executed in 3 msec}
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [selectChgstatusYn:143] - <==      Total: 1
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45002', NULL, 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, ? /*req_dt*/ , TOO.ORM_NM, NULL, TOO.ORM_GPOST, NULL, TOO.ORM_GADDR, NULL, NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, NULL, TOO.BDONG, NULL FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - ==> Parameters: 20210629(String), I20210614224303(String)
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45002',
		NULL,
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'20210629' /*req_dt*/ ,
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL,
		TOO.ORM_GADDR,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		NULL,
		TOO.BDONG,
		NULL
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 13 msec}
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeDtRequest(String), 챗봇 주문 도착일정 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeDtRequest' /*call_function*/ , '챗봇 주문 도착일정 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 2 msec}
DEBUG 21-06-23 12:27:21[http-nio-8082-exec-1] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [executeProGetNo:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', 'I20210614224303' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 3 msec}
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [selectToChgmasChgdt:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224303' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 3 msec}
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [selectToChgmasChgdt:143] - <==      Total: 1
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [insertNewOrdMaster:143] - ==>  Preparing: INSERT INTO TO_ORDMAS ( ORM_NO ,ORM_NM ,COM_ORD ,ORM_SSEC ,VND_CD ,AGT_CD ,CMP_CD ,ORM_ORDDT ,ORM_STAT ,ORM_RDT ,ORM_ADT ,ORM_CDT ,ORM_AGTCST ,ORM_PURCST ,ORM_VISIT ,ORM_PURRSN ,ORM_GGUBUN ,ORM_GOOD ,ORM_GPOST ,ORM_GADDR ,ORM_GEMP ,DET_CD ,ORM_GEMPHP ,ORM_HDPHONE ,ORM_GSPC ,ORM_DOWNST ,ORM_GRTTON ,ORM_DOWNNM ,ORM_DPOST ,ORM_DADDR ,ORM_CONSP ,ORM_SALEMP ,ORM_AGTEMP ,PRJ_CD ,ORM_REBAGT ,ORM_CMPCD ,ORM_SPC ,ORM_PART ,EPI_PINO ,ORM_CRYN ,ORM_CSTYN ,ORM_CSTRATE ,ORM_COMRATE ,USR_CD ,SYS_DT ,ORM_WMSSEC ,WMS_YN ,PLM_PTM ,PLM_EVT ,PLM_ITR ,FRM_NO ,ORM_PSTS ,ADDR_DTL ,BDONG ,ORM_ATTR ,DLV_KIND ,PLM_MERG_NO ,COM_BRD ,LDDR_YN ,CNT_CDT ,CNT_ATTR ,SHP_NO ,FST_USR ,FST_SYS_DT ,PAY_DUE_DT ,APT_SEQ ,PROMO_SERIAL ,LDDR_FREE ,ADDR_GUBUN ) SELECT ? /*new_orm_no*/ ,TOO.ORM_NM ,TOO.COM_ORD ,TOO.ORM_SSEC ,TOO.VND_CD ,TOO.AGT_CD ,TOO.CMP_CD ,TOO.ORM_ORDDT ,TOO.ORM_STAT ,TOO.ORM_RDT ,TOO.ORM_ADT ,? /*chg_orm_cdt*/ ,TOO.ORM_AGTCST ,TOO.ORM_PURCST ,TOO.ORM_VISIT ,TOO.ORM_PURRSN ,TOO.ORM_GGUBUN ,TOO.ORM_GOOD ,TOO.ORM_GPOST ,TOO.ORM_GADDR ,TOO.ORM_GEMP ,TOO.DET_CD ,TOO.ORM_GEMPHP ,TOO.ORM_HDPHONE ,TOO.ORM_GSPC ,TOO.ORM_DOWNST ,TOO.ORM_GRTTON ,TOO.ORM_DOWNNM ,TOO.ORM_DPOST ,TOO.ORM_DADDR ,TOO.ORM_CONSP ,TOO.ORM_SALEMP ,TOO.ORM_AGTEMP ,TOO.PRJ_CD ,TOO.ORM_REBAGT ,TOO.ORM_CMPCD ,TOO.ORM_SPC ,TOO.ORM_PART ,TOO.EPI_PINO ,TOO.ORM_CRYN ,TOO.ORM_CSTYN ,TOO.ORM_CSTRATE ,TOO.ORM_COMRATE ,TOO.USR_CD ,GETDATE() ,TOO.ORM_WMSSEC ,TOO.WMS_YN ,TOO.PLM_PTM ,TOO.PLM_EVT ,TOO.PLM_ITR ,TOO.FRM_NO ,TOO.ORM_PSTS ,TOO.ADDR_DTL ,TOO.BDONG ,TOO.ORM_ATTR ,TOO.DLV_KIND ,TOO.PLM_MERG_NO ,TOO.COM_BRD ,TOO.LDDR_YN ,TOO.CNT_CDT ,TOO.CNT_ATTR ,TOO.SHP_NO ,TOO.FST_USR ,GETDATE() ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I',? /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990')) END) ,TOO.APT_SEQ ,TOO.PROMO_SERIAL ,TOO.LDDR_FREE ,TOO.ADDR_GUBUN FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [insertNewOrdMaster:143] - ==> Parameters: I20210614224304(String), 20210629(String), 20210629(String), 20210629(String), I20210614224303(String)
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDMAS (
		  ORM_NO               
          ,ORM_NM
          ,COM_ORD
          ,ORM_SSEC
          ,VND_CD
          ,AGT_CD
          ,CMP_CD
          ,ORM_ORDDT   
          ,ORM_STAT                
          ,ORM_RDT
          ,ORM_ADT
          ,ORM_CDT             
          ,ORM_AGTCST
          ,ORM_PURCST
          ,ORM_VISIT   
          ,ORM_PURRSN
          ,ORM_GGUBUN
          ,ORM_GOOD
          ,ORM_GPOST
          ,ORM_GADDR
          ,ORM_GEMP
          ,DET_CD   
          ,ORM_GEMPHP
          ,ORM_HDPHONE
          ,ORM_GSPC
          ,ORM_DOWNST
          ,ORM_GRTTON
          ,ORM_DOWNNM
          ,ORM_DPOST   
          ,ORM_DADDR
          ,ORM_CONSP
          ,ORM_SALEMP
          ,ORM_AGTEMP
          ,PRJ_CD
          ,ORM_REBAGT
          ,ORM_CMPCD   
          ,ORM_SPC
          ,ORM_PART
          ,EPI_PINO
          ,ORM_CRYN
          ,ORM_CSTYN
          ,ORM_CSTRATE
          ,ORM_COMRATE
          ,USR_CD
          ,SYS_DT
          ,ORM_WMSSEC
          ,WMS_YN
          ,PLM_PTM
          ,PLM_EVT
          ,PLM_ITR
          ,FRM_NO
          ,ORM_PSTS
  		  ,ADDR_DTL
  		  ,BDONG
  		  ,ORM_ATTR
  		  ,DLV_KIND
  		  ,PLM_MERG_NO
  		  ,COM_BRD
  		  ,LDDR_YN
  		  ,CNT_CDT
  		  ,CNT_ATTR 
  		  ,SHP_NO 
  		 ,FST_USR       
		 ,FST_SYS_DT 
		 ,PAY_DUE_DT
		 ,APT_SEQ
		 ,PROMO_SERIAL
		 ,LDDR_FREE
		 ,ADDR_GUBUN
 	      )
	SELECT
		  'I20210614224304' /*new_orm_no*/            
          ,TOO.ORM_NM
          ,TOO.COM_ORD
          ,TOO.ORM_SSEC
          ,TOO.VND_CD
          ,TOO.AGT_CD
          ,TOO.CMP_CD
          ,TOO.ORM_ORDDT   
          ,TOO.ORM_STAT                
          ,TOO.ORM_RDT
          ,TOO.ORM_ADT
          ,'20210629' /*chg_orm_cdt*/          
          ,TOO.ORM_AGTCST
          ,TOO.ORM_PURCST
          ,TOO.ORM_VISIT   
          ,TOO.ORM_PURRSN
          ,TOO.ORM_GGUBUN
          ,TOO.ORM_GOOD
          ,TOO.ORM_GPOST
          ,TOO.ORM_GADDR
          ,TOO.ORM_GEMP
          ,TOO.DET_CD   
          ,TOO.ORM_GEMPHP
          ,TOO.ORM_HDPHONE
          ,TOO.ORM_GSPC
          ,TOO.ORM_DOWNST
          ,TOO.ORM_GRTTON
          ,TOO.ORM_DOWNNM
          ,TOO.ORM_DPOST   
          ,TOO.ORM_DADDR
          ,TOO.ORM_CONSP
          ,TOO.ORM_SALEMP
          ,TOO.ORM_AGTEMP
          ,TOO.PRJ_CD
          ,TOO.ORM_REBAGT
          ,TOO.ORM_CMPCD   
          ,TOO.ORM_SPC
          ,TOO.ORM_PART
          ,TOO.EPI_PINO
          ,TOO.ORM_CRYN
          ,TOO.ORM_CSTYN
          ,TOO.ORM_CSTRATE
          ,TOO.ORM_COMRATE
          ,TOO.USR_CD
          ,GETDATE()
          ,TOO.ORM_WMSSEC
          ,TOO.WMS_YN
          ,TOO.PLM_PTM
          ,TOO.PLM_EVT
          ,TOO.PLM_ITR
          ,TOO.FRM_NO
          ,TOO.ORM_PSTS
  		  ,TOO.ADDR_DTL
  		  ,TOO.BDONG
  		  ,TOO.ORM_ATTR
  		  ,TOO.DLV_KIND
  		  ,TOO.PLM_MERG_NO
  		  ,TOO.COM_BRD
  		  ,TOO.LDDR_YN
  		  ,TOO.CNT_CDT
  		  ,TOO.CNT_ATTR 
  		  ,TOO.SHP_NO 
  		  ,TOO.FST_USR       
		  ,GETDATE() 
		  ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL('20210629' /*chg_orm_cdt*/ ,'') != '' THEN 
		  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I','20210629' /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990'))   
		   END)
		  ,TOO.APT_SEQ
		  ,TOO.PROMO_SERIAL
		  ,TOO.LDDR_FREE
		  ,TOO.ADDR_GUBUN	
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [insertNewOrdMaster:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [insertNewOrdDetail:143] - ==>  Preparing: INSERT INTO TO_ORDDET ( ORM_NO ,ORD_SSEQ ,ORD_ISEQ ,SET_CD ,COL_SCD ,ITM_CD ,COL_CD ,ORD_QTY ,ORD_CST ,TAX_AMT ,STK_CD ,ORD_PURCD ,ORD_GOODSEC ,ORD_UPCD ,ORD_WHSCD ,ORD_TWHSCD ,ORD_CURCD ,ORD_FCST ,ORD_QSTAT ,ORD_RMK ,ORD_UNFOLDING ,ORD_ENDYN ,USR_CD ,SYS_DT ,ORD_PIDSEQ ,ORM_PLANDT ,COM_ARESEC ,CAR_NO ,PMS_NO ,COM_TONSEC ,DOK_NO ,ORM_PMSYN ,ORM_PMSND ,COM_SCD ,STI_CD ,COM_CTSEC ,COM_RFG ,WMS_YN ,PID_SEQ ,ORD_ITMCOL ,A.SET_QTY ,A.SDT_QTY ,A.BSET_CD ,A.BCOL_CD ,A.MNF_ADT ,A.WH_ADT ,FST_USR ,FST_SYS_DT ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST ) SELECT ? /*new_orm_no*/ ,TOD.ORD_SSEQ ,TOD.ORD_ISEQ ,TOD.SET_CD ,TOD.COL_SCD ,TOD.ITM_CD ,TOD.COL_CD ,TOD.ORD_QTY ,TOD.ORD_CST ,TOD.TAX_AMT ,TOD.STK_CD ,TOD.ORD_PURCD ,TOD.ORD_GOODSEC ,TOD.ORD_UPCD ,TOD.ORD_WHSCD ,TOD.ORD_TWHSCD ,TOD.ORD_CURCD ,TOD.ORD_FCST ,TOD.ORD_QSTAT ,TOD.ORD_RMK ,TOD.ORD_UNFOLDING ,TOD.ORD_ENDYN ,TOD.USR_CD ,GETDATE() ,TOD.ORD_PIDSEQ ,ORM_PLANDT ,TOD.COM_ARESEC ,TOD.CAR_NO ,TOD.PMS_NO ,TOD.COM_TONSEC ,TOD.DOK_NO ,TOD.ORM_PMSYN ,TOD.ORM_PMSND ,TOD.COM_SCD ,TOD.STI_CD ,TOD.COM_CTSEC ,TOD.COM_RFG ,TOD.WMS_YN ,TOD.PID_SEQ ,TOD.ORD_ITMCOL ,TOD.SET_QTY ,TOD.SDT_QTY ,TOD.BSET_CD ,TOD.BCOL_CD ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,FST_USR ,GETDATE() ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST FROM TO_ORDDET TOD WITH (NOLOCK) WHERE TOD.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:27:44[http-nio-8082-exec-2] [insertNewOrdDetail:143] - ==> Parameters: I20210614224304(String), T01I(String), 20210629(String), T01I(String), T01I(String), 20210629(String), T01I(String), I20210614224303(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDDET (
		  ORM_NO
	      ,ORD_SSEQ
	      ,ORD_ISEQ
	      ,SET_CD
	      ,COL_SCD
	      ,ITM_CD
	      ,COL_CD
	      ,ORD_QTY
	      ,ORD_CST
	      ,TAX_AMT
	      ,STK_CD
	      ,ORD_PURCD
	      ,ORD_GOODSEC
	      ,ORD_UPCD
	      ,ORD_WHSCD
	      ,ORD_TWHSCD
	      ,ORD_CURCD
	      ,ORD_FCST
	      ,ORD_QSTAT
	      ,ORD_RMK
	      ,ORD_UNFOLDING
	      ,ORD_ENDYN
	      ,USR_CD
	      ,SYS_DT
	      ,ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,COM_ARESEC
	      ,CAR_NO
	      ,PMS_NO
	      ,COM_TONSEC
	      ,DOK_NO
	      ,ORM_PMSYN
	      ,ORM_PMSND
	      ,COM_SCD
	      ,STI_CD
	      ,COM_CTSEC
	      ,COM_RFG
	      ,WMS_YN
	      ,PID_SEQ
	      ,ORD_ITMCOL
	      ,A.SET_QTY
          ,A.SDT_QTY
          ,A.BSET_CD
          ,A.BCOL_CD
          ,A.MNF_ADT
          ,A.WH_ADT
		  ,FST_USR       
		  ,FST_SYS_DT
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
 	      )
	SELECT
		  'I20210614224304' /*new_orm_no*/ 
	      ,TOD.ORD_SSEQ
	      ,TOD.ORD_ISEQ
	      ,TOD.SET_CD
	      ,TOD.COL_SCD
	      ,TOD.ITM_CD
	      ,TOD.COL_CD
	      ,TOD.ORD_QTY
	      ,TOD.ORD_CST
	      ,TOD.TAX_AMT
	      ,TOD.STK_CD
	      ,TOD.ORD_PURCD
	      ,TOD.ORD_GOODSEC
	      ,TOD.ORD_UPCD
	      ,TOD.ORD_WHSCD
	      ,TOD.ORD_TWHSCD
	      ,TOD.ORD_CURCD
	      ,TOD.ORD_FCST
	      ,TOD.ORD_QSTAT
	      ,TOD.ORD_RMK
	      ,TOD.ORD_UNFOLDING
	      ,TOD.ORD_ENDYN
	      ,TOD.USR_CD
	      ,GETDATE()
	      ,TOD.ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,TOD.COM_ARESEC
	      ,TOD.CAR_NO
	      ,TOD.PMS_NO
	      ,TOD.COM_TONSEC
	      ,TOD.DOK_NO
	      ,TOD.ORM_PMSYN
	      ,TOD.ORM_PMSND
	      ,TOD.COM_SCD
	      ,TOD.STI_CD
	      ,TOD.COM_CTSEC
	      ,TOD.COM_RFG
	      ,TOD.WMS_YN
	      ,TOD.PID_SEQ
	      ,TOD.ORD_ITMCOL
	      ,TOD.SET_QTY
          ,TOD.SDT_QTY
          ,TOD.BSET_CD
          ,TOD.BCOL_CD
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210629' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) 
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210629' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0)
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
		  ,FST_USR       
		  ,GETDATE()
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
	  FROM TO_ORDDET TOD WITH (NOLOCK)
	 WHERE TOD.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 751 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertNewOrdDetail:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [deleteRecdRenD:143] - ==>  Preparing: DELETE FROM TO_RECE_REN WHERE REC_NO = CAST(? /*key_no*/ AS VARCHAR) 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [deleteRecdRenD:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM TO_RECE_REN
     WHERE REC_NO = CAST('I20210614224303' /*key_no*/  AS VARCHAR)
 {executed in 2 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [deleteRecdRenD:143] - <==    Updates: 0
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertRecdRenD:143] - ==>  Preparing: INSERT INTO TO_RECE_REN (REC_NO , ITM_CD ,COL_CD ,REC_QTY ,ORM_RDT ,ORM_RDT_2 ,ORM_RDT_2_YN ,REC_DT_1 ,REC_DT_2 ,COM_CMP ,IOP_FINEST ,COM_GOODCD ,VND_CD ,COM_STKSEC ,COM_STDSEC ,IOP_MNFCST ) SELECT D.ORM_NO ,D.ITM_CD ,D.COL_CD ,SUM(D.ORD_QTY) ,M.ORM_RDT ,NULL ,NULL ,NULL ,NULL ,CAST('T01I' AS VARCHAR) ,C.IOP_FINEST ,C.COM_GOODCD ,C.VND_CD ,S.COM_STKSEC ,S.COM_STDSEC ,C.IOP_MNFCST FROM TO_ORDMAS M WITH (NOLOCK) ,TO_ORDDET D WITH (NOLOCK) ,TT_ITMCOP C WITH (NOLOCK) ,TT_ITMMST S WITH (NOLOCK) WHERE M.ORM_NO = D.ORM_NO AND D.ITM_CD = C.ITM_CD AND D.COL_CD = C.COL_CD AND C.ITM_CD = S.ITM_CD AND C.COL_CD = S.COL_CD AND D.ORM_NO = CAST(? /*key_no*/ AS VARCHAR) AND C.COM_CMP = CAST('T01I' AS VARCHAR) GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertRecdRenD:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT 
	  INTO TO_RECE_REN 
	            (REC_NO
	             , ITM_CD
	             ,COL_CD
	             ,REC_QTY
	             ,ORM_RDT
	             ,ORM_RDT_2
	             ,ORM_RDT_2_YN
	             ,REC_DT_1
	             ,REC_DT_2
                ,COM_CMP
                ,IOP_FINEST
                ,COM_GOODCD
                ,VND_CD
                ,COM_STKSEC
                ,COM_STDSEC
                ,IOP_MNFCST
                )
	SELECT D.ORM_NO 
	           ,D.ITM_CD 
	           ,D.COL_CD 
	           ,SUM(D.ORD_QTY) 
	           ,M.ORM_RDT 
	           ,NULL
	           ,NULL 
	           ,NULL 
	           ,NULL 
			   ,CAST('T01I' AS VARCHAR) 
			   ,C.IOP_FINEST 
			   ,C.COM_GOODCD 
			   ,C.VND_CD 
			   ,S.COM_STKSEC 
			   ,S.COM_STDSEC 
			   ,C.IOP_MNFCST	   
	FROM TO_ORDMAS M WITH (NOLOCK)
	         ,TO_ORDDET D WITH (NOLOCK)
	         ,TT_ITMCOP C WITH (NOLOCK)
	         ,TT_ITMMST S WITH (NOLOCK)
	WHERE M.ORM_NO = D.ORM_NO
	AND D.ITM_CD = C.ITM_CD 
	AND D.COL_CD = C.COL_CD
	AND C.ITM_CD = S.ITM_CD 
	AND C.COL_CD = S.COL_CD
	AND D.ORM_NO = CAST('I20210614224303' /*key_no*/  AS VARCHAR)
	AND C.COM_CMP = CAST('T01I' AS VARCHAR) 
	GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, 
				    C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST
 {executed in 4 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertRecdRenD:143] - <==    Updates: 20
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224303' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 2 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateToOrdChgmasStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() ,EMC_YN = 'N' ,OUT_TYP = ' ' ,MULTI_CHGKND = '' ,NEW_ORMNO = ? /*new_orm_no*/ WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateToOrdChgmasStat:143] - ==> Parameters: I20210614224304(String), I20210614224303(String), 01(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
            ,EMC_YN = 'N'
            ,OUT_TYP = '      ' 
            ,MULTI_CHGKND = ''
            ,NEW_ORMNO = 'I20210614224304' /*new_orm_no*/ 
       WHERE ORM_NO = 'I20210614224303' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 2 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateToOrdChgmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateToOrdmasStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_STAT = 'O08003' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateToOrdmasStat:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS              									
       SET ORM_STAT = 'O08003' 
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 92 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateToOrdmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectOrmCryn:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectSigongReserveYn:143] - ==>  Preparing: SELECT ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectSigongReserveYn:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectSigongReserveYn:143] - <==      Total: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectRemdtRemseq:143] - ==>  Preparing: SELECT TCR.REM_DT AS DATA1, TCR.REM_SEQ AS DATA2, ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ AND TCR.REM_DT = ? /*rem_dt*/ 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectRemdtRemseq:143] - ==> Parameters: I20210614224303(String), 20210630(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TCR.REM_DT AS DATA1,
		TCR.REM_SEQ AS DATA2,
		ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224303' /*key_no*/ 
	   AND TCR.REM_DT = '20210630' /*rem_dt*/
 {executed in 3 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectRemdtRemseq:143] - <==      Total: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectTcMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1 FROM TC_SEQNOINF WHERE COM_AGSEC = ? /*com_agsec*/ AND COM_NOSEC = 'C08CRS' AND SEQ_SETDT = ? /*req_dt*/ 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectTcMaxSeqNo:143] - ==> Parameters: C02I(String), 20210629(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1
		  FROM TC_SEQNOINF 
		 WHERE COM_AGSEC = 'C02I' /*com_agsec*/ 	
		   AND COM_NOSEC = 'C08CRS' 
		   AND SEQ_SETDT = '20210629' /*req_dt*/
 {executed in 3 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectTcMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertTcSeqnoinf:143] - ==>  Preparing: MERGE INTO TC_SEQNOINF SI USING (SELECT ? /*com_agsec*/ AS COM_AGSEC ,? /*req_dt*/ AS SEQ_SETDT) A ON SI.COM_AGSEC = A.COM_AGSEC AND SI.SEQ_SETDT = A.SEQ_SETDT AND SI.COM_NOSEC = 'C08CRS' WHEN MATCHED THEN UPDATE SET SEQ_NO = ? /*max_seq_no*/ WHEN NOT MATCHED THEN INSERT (COM_AGSEC ,COM_NOSEC ,SEQ_SETDT ,SEQ_NO ,USR_CD ,SYS_DT ) VALUES(? /*com_agsec*/ ,'C08CRS' ,? /*req_dt*/ ,? /*max_seq_no*/ ,'CHATBOT' ,GETDATE() ); 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertTcSeqnoinf:143] - ==> Parameters: C02I(String), 20210629(String), 432(Integer), C02I(String), 20210629(String), 432(Integer)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. MERGE INTO TC_SEQNOINF SI
    	 USING (SELECT 'C02I' /*com_agsec*/  AS COM_AGSEC
    	              ,'20210629' /*req_dt*/  AS SEQ_SETDT) A
       		ON SI.COM_AGSEC = A.COM_AGSEC
       	   AND SI.SEQ_SETDT = A.SEQ_SETDT
       	   AND SI.COM_NOSEC = 'C08CRS'
          WHEN MATCHED THEN
            UPDATE 
               SET SEQ_NO = 432 /*max_seq_no*/ 
          WHEN NOT MATCHED THEN
		    INSERT
		      	  (COM_AGSEC
		      	  ,COM_NOSEC
		      	  ,SEQ_SETDT
		      	  ,SEQ_NO
		      	  ,USR_CD
		      	  ,SYS_DT
		          )    
			VALUES('C02I' /*com_agsec*/ 
			      ,'C08CRS'
			      ,'20210629' /*req_dt*/ 
			      ,432 /*max_seq_no*/ 
			      ,'CHATBOT'
			      ,GETDATE()
			      );
 {executed in 2 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertTcSeqnoinf:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateTcresdtl:143] - ==>  Preparing: UPDATE TC_RESDTL SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateTcresdtl:143] - ==> Parameters: 20210629(String), IC0432(String), 20210630(String), IC0795(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESDTL SET REM_DT = '20210629' /*req_dt*/ , REM_SEQ = 'IC0432' /*new_rem_seq*/ 
	 WHERE REM_DT = '20210630' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0795' /*rem_seq*/
 {executed in 2 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateTcresdtl:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateTcresmst:143] - ==>  Preparing: UPDATE TC_RESMST SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ , ORM_NO = ? /*new_ormno*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateTcresmst:143] - ==> Parameters: 20210629(String), IC0432(String), I20210614224304(String), 20210630(String), IC0795(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST SET REM_DT = '20210629' /*req_dt*/ , REM_SEQ = 'IC0432' /*new_rem_seq*/ , ORM_NO = 'I20210614224304' /*new_ormno*/ 
	 WHERE REM_DT = '20210630' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0795' /*rem_seq*/
 {executed in 3 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateTcresmst:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateToOrdmasSigongStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_PSTS = 'E' /* 예약상태 */ ,ORM_CDT = ? /*req_dt*/ /* 확정납기일 */ ,USR_CD = 'CHATBOT' /* 최종변경자 */ ,SYS_DT = GETDATE() /* 최종변경일시 */ ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,? /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990')) END) WHERE ORM_NO = ? /*new_ormno*/ 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateToOrdmasSigongStat:143] - ==> Parameters: 20210629(String), 20210629(String), 20210629(String), I20210614224304(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS
       SET ORM_PSTS = 'E'    /* 예약상태 */		
          ,ORM_CDT  = '20210629' /*req_dt*/      /* 확정납기일 */		
          ,USR_CD   = 'CHATBOT'   /* 최종변경자 */
          ,SYS_DT   = GETDATE()     /* 최종변경일시 */
		  ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL('20210629' /*chg_orm_cdt*/ ,'') != '' THEN
							  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,'20210629' /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990'))
							   END)
     WHERE ORM_NO = 'I20210614224304' /*new_ormno*/
 {executed in 28 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [updateToOrdmasSigongStat:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectOnlineynCheck:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224303(String), I20210614224303(String), I20210614224303(String), 챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224303,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224303' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224303' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224303' /*key_no*/ ),
		        '챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224303,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 3 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertApicallHist:143] - ==> Parameters: erp_OrderArrivalDateChange(String), 챗봇 주문 도착일정 변경 Auto 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderArrivalDateChange' /*call_function*/ , '챗봇 주문 도착일정 변경 Auto 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 2 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ) AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectChginformData:143] - ==> Parameters: I20210614224303(String)
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ) AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224303' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 12:27:45[http-nio-8082-exec-2] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 14:52:01[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 14:52:02[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 14:52:02[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 14:52:02[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 14:52:12[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 3172 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 14:52:12[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 14:52:12[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 14:52:13[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 14:52:13[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 14:52:13[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 14:52:13[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 14:52:13[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 14:52:13[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 1036 ms
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 14:52:13[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@46f902e0, org.springframework.security.web.context.SecurityContextPersistenceFilter@4d1ff6b1, org.springframework.security.web.header.HeaderWriterFilter@5626d18c, org.springframework.security.web.authentication.logout.LogoutFilter@30b975ad, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6ee99964, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@329548d0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a8c93, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64f981e2, org.springframework.security.web.session.SessionManagementFilter@3dc95b8b, org.springframework.security.web.access.ExceptionTranslationFilter@35c9a231, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@261db982]
INFO  21-06-23 14:52:13[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 14:52:14[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 14:52:14[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 14:52:14[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 14:52:14[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 14:52:14[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 14:52:14[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 14:52:14[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 14:52:14[main] [ChatBotApplication:61] - Started ChatBotApplication in 2.613 seconds (JVM running for 4.014)
INFO  21-06-23 14:53:00[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 14:53:00[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 14:53:00[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 5 ms
INFO  21-06-23 14:54:23[http-nio-8082-exec-1] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 14:54:24[http-nio-8082-exec-1] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectSigongYn:143] - ==>  Preparing: SELECT ISNULL(ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectSigongYn:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(ORM_CRYN, 'N') AS DATA1,
		   TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224304' /*key_no*/
 {executed in 6 msec}
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectSigongYn:143] - <==      Total: 1
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectSchDivYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectSchDivYn:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224304' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectSchDivYn:143] - <==      Total: 1
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224304' /*key_no*/
 {executed in 2 msec}
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - <==      Total: 1
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectChgstatusYn:143] - ==>  Preparing: SELECT ( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = ? /*key_no*/ AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' ) 
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectChgstatusYn:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TO_CHGMAS TOC WITH (NOLOCK)
	 WHERE TOC.ORM_NO = 'I20210614224304' /*key_no*/ 
	   AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' )
 {executed in 2 msec}
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [selectChgstatusYn:143] - <==      Total: 1
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45002', NULL, 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, ? /*req_dt*/ , TOO.ORM_NM, NULL, TOO.ORM_GPOST, NULL, TOO.ORM_GADDR, NULL, NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, NULL, TOO.BDONG, NULL FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - ==> Parameters: 20210630(String), I20210614224304(String)
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45002',
		NULL,
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'20210630' /*req_dt*/ ,
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL,
		TOO.ORM_GADDR,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		NULL,
		TOO.BDONG,
		NULL
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224304' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - <==    Updates: 1
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeDtRequest(String), 챗봇 주문 도착일정 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeDtRequest' /*call_function*/ , '챗봇 주문 도착일정 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 2 msec}
DEBUG 21-06-23 14:54:24[http-nio-8082-exec-1] [insertApicallHist:143] - <==    Updates: 1
ERROR 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:130] - 1. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at com.fursys.chatbot.controllers.AppController.erp_OrderArrivalDateChange(AppController.java:391)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
WARN  21-06-23 15:04:41[http-nio-8082-exec-3] [PoolBase:184] - HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@54aac294 (연결이 닫혔습니다.). Possibly consider using a shorter maxLifetime value.
ERROR 21-06-23 15:04:41[HikariPool-1 connection closer] [sqltiming:130] - 1. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137)
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
ERROR 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:130] - 2. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at com.fursys.chatbot.controllers.AppController.erp_OrderArrivalDateChange(AppController.java:391)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
WARN  21-06-23 15:04:41[http-nio-8082-exec-3] [PoolBase:184] - HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@39b85484 (연결이 닫혔습니다.). Possibly consider using a shorter maxLifetime value.
ERROR 21-06-23 15:04:41[HikariPool-1 connection closer] [sqltiming:130] - 2. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137)
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
ERROR 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:130] - 3. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at com.fursys.chatbot.controllers.AppController.erp_OrderArrivalDateChange(AppController.java:391)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
WARN  21-06-23 15:04:41[http-nio-8082-exec-3] [PoolBase:184] - HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@7e2aa528 (연결이 닫혔습니다.). Possibly consider using a shorter maxLifetime value.
ERROR 21-06-23 15:04:41[HikariPool-1 connection closer] [sqltiming:130] - 3. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137)
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
ERROR 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:130] - 4. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at com.fursys.chatbot.controllers.AppController.erp_OrderArrivalDateChange(AppController.java:391)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
WARN  21-06-23 15:04:41[http-nio-8082-exec-3] [PoolBase:184] - HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1aaeadb9 (연결이 닫혔습니다.). Possibly consider using a shorter maxLifetime value.
ERROR 21-06-23 15:04:41[HikariPool-1 connection closer] [sqltiming:130] - 4. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137)
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
ERROR 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:130] - 5. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at com.fursys.chatbot.controllers.AppController.erp_OrderArrivalDateChange(AppController.java:391)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
WARN  21-06-23 15:04:41[http-nio-8082-exec-3] [PoolBase:184] - HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@78949c73 (연결이 닫혔습니다.). Possibly consider using a shorter maxLifetime value.
ERROR 21-06-23 15:04:41[HikariPool-1 connection closer] [sqltiming:130] - 5. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137)
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
ERROR 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:130] - 6. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at com.fursys.chatbot.controllers.AppController.erp_OrderArrivalDateChange(AppController.java:391)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
WARN  21-06-23 15:04:41[http-nio-8082-exec-3] [PoolBase:184] - HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3895f463 (연결이 닫혔습니다.). Possibly consider using a shorter maxLifetime value.
ERROR 21-06-23 15:04:41[HikariPool-1 connection closer] [sqltiming:130] - 6. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137)
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
ERROR 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:130] - 7. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at com.fursys.chatbot.controllers.AppController.erp_OrderArrivalDateChange(AppController.java:391)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
WARN  21-06-23 15:04:41[http-nio-8082-exec-3] [PoolBase:184] - HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@543413e4 (연결이 닫혔습니다.). Possibly consider using a shorter maxLifetime value.
ERROR 21-06-23 15:04:41[HikariPool-1 connection closer] [sqltiming:130] - 7. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137)
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
ERROR 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:130] - 8. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at com.fursys.chatbot.controllers.AppController.erp_OrderArrivalDateChange(AppController.java:391)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
WARN  21-06-23 15:04:41[http-nio-8082-exec-3] [PoolBase:184] - HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5e733917 (연결이 닫혔습니다.). Possibly consider using a shorter maxLifetime value.
ERROR 21-06-23 15:04:41[HikariPool-1 connection closer] [sqltiming:130] - 8. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137)
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
ERROR 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:130] - 9. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at com.fursys.chatbot.controllers.AppController.erp_OrderArrivalDateChange(AppController.java:391)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
WARN  21-06-23 15:04:41[http-nio-8082-exec-3] [PoolBase:184] - HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@594ccddd (연결이 닫혔습니다.). Possibly consider using a shorter maxLifetime value.
ERROR 21-06-23 15:04:41[HikariPool-1 connection closer] [sqltiming:130] - 9. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137)
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
ERROR 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:130] - 10. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 0;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:173)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:186)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:162)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:128)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at com.fursys.chatbot.controllers.AppController.erp_OrderArrivalDateChange(AppController.java:391)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
WARN  21-06-23 15:04:41[http-nio-8082-exec-3] [PoolBase:184] - HikariPool-1 - Failed to validate connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@40691148 (연결이 닫혔습니다.). Possibly consider using a shorter maxLifetime value.
ERROR 21-06-23 15:04:41[HikariPool-1 connection closer] [sqltiming:130] - 10. Connection.setNetworkTimeout(java.util.concurrent.ThreadPoolExecutor@2aa164ef[Running, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], 15000;
com.microsoft.sqlserver.jdbc.SQLServerException: 연결이 닫혔습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(SQLServerException.java:234)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.checkClosed(SQLServerConnection.java:1090)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.setNetworkTimeout(SQLServerConnection.java:5403)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.setNetworkTimeout(ConnectionSpy.java:1120)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:560)
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:137)
	at com.zaxxer.hikari.pool.HikariPool.lambda$closeConnection$1(HikariPool.java:451)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [executeProGetNo:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', 'I20210614224304' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 6 msec}
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [selectToChgmasChgdt:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224304' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 2 msec}
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [selectToChgmasChgdt:143] - <==      Total: 1
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [insertNewOrdMaster:143] - ==>  Preparing: INSERT INTO TO_ORDMAS ( ORM_NO ,ORM_NM ,COM_ORD ,ORM_SSEC ,VND_CD ,AGT_CD ,CMP_CD ,ORM_ORDDT ,ORM_STAT ,ORM_RDT ,ORM_ADT ,ORM_CDT ,ORM_AGTCST ,ORM_PURCST ,ORM_VISIT ,ORM_PURRSN ,ORM_GGUBUN ,ORM_GOOD ,ORM_GPOST ,ORM_GADDR ,ORM_GEMP ,DET_CD ,ORM_GEMPHP ,ORM_HDPHONE ,ORM_GSPC ,ORM_DOWNST ,ORM_GRTTON ,ORM_DOWNNM ,ORM_DPOST ,ORM_DADDR ,ORM_CONSP ,ORM_SALEMP ,ORM_AGTEMP ,PRJ_CD ,ORM_REBAGT ,ORM_CMPCD ,ORM_SPC ,ORM_PART ,EPI_PINO ,ORM_CRYN ,ORM_CSTYN ,ORM_CSTRATE ,ORM_COMRATE ,USR_CD ,SYS_DT ,ORM_WMSSEC ,WMS_YN ,PLM_PTM ,PLM_EVT ,PLM_ITR ,FRM_NO ,ORM_PSTS ,ADDR_DTL ,BDONG ,ORM_ATTR ,DLV_KIND ,PLM_MERG_NO ,COM_BRD ,LDDR_YN ,CNT_CDT ,CNT_ATTR ,SHP_NO ,FST_USR ,FST_SYS_DT ,PAY_DUE_DT ,APT_SEQ ,PROMO_SERIAL ,LDDR_FREE ,ADDR_GUBUN ) SELECT ? /*new_orm_no*/ ,TOO.ORM_NM ,TOO.COM_ORD ,TOO.ORM_SSEC ,TOO.VND_CD ,TOO.AGT_CD ,TOO.CMP_CD ,TOO.ORM_ORDDT ,TOO.ORM_STAT ,TOO.ORM_RDT ,TOO.ORM_ADT ,? /*chg_orm_cdt*/ ,TOO.ORM_AGTCST ,TOO.ORM_PURCST ,TOO.ORM_VISIT ,TOO.ORM_PURRSN ,TOO.ORM_GGUBUN ,TOO.ORM_GOOD ,TOO.ORM_GPOST ,TOO.ORM_GADDR ,TOO.ORM_GEMP ,TOO.DET_CD ,TOO.ORM_GEMPHP ,TOO.ORM_HDPHONE ,TOO.ORM_GSPC ,TOO.ORM_DOWNST ,TOO.ORM_GRTTON ,TOO.ORM_DOWNNM ,TOO.ORM_DPOST ,TOO.ORM_DADDR ,TOO.ORM_CONSP ,TOO.ORM_SALEMP ,TOO.ORM_AGTEMP ,TOO.PRJ_CD ,TOO.ORM_REBAGT ,TOO.ORM_CMPCD ,TOO.ORM_SPC ,TOO.ORM_PART ,TOO.EPI_PINO ,TOO.ORM_CRYN ,TOO.ORM_CSTYN ,TOO.ORM_CSTRATE ,TOO.ORM_COMRATE ,TOO.USR_CD ,GETDATE() ,TOO.ORM_WMSSEC ,TOO.WMS_YN ,TOO.PLM_PTM ,TOO.PLM_EVT ,TOO.PLM_ITR ,TOO.FRM_NO ,TOO.ORM_PSTS ,TOO.ADDR_DTL ,TOO.BDONG ,TOO.ORM_ATTR ,TOO.DLV_KIND ,TOO.PLM_MERG_NO ,TOO.COM_BRD ,TOO.LDDR_YN ,TOO.CNT_CDT ,TOO.CNT_ATTR ,TOO.SHP_NO ,TOO.FST_USR ,GETDATE() ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I',? /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990')) END) ,TOO.APT_SEQ ,TOO.PROMO_SERIAL ,TOO.LDDR_FREE ,TOO.ADDR_GUBUN FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [insertNewOrdMaster:143] - ==> Parameters: I20210614224305(String), 20210630(String), 20210630(String), 20210630(String), I20210614224304(String)
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO TO_ORDMAS (
		  ORM_NO               
          ,ORM_NM
          ,COM_ORD
          ,ORM_SSEC
          ,VND_CD
          ,AGT_CD
          ,CMP_CD
          ,ORM_ORDDT   
          ,ORM_STAT                
          ,ORM_RDT
          ,ORM_ADT
          ,ORM_CDT             
          ,ORM_AGTCST
          ,ORM_PURCST
          ,ORM_VISIT   
          ,ORM_PURRSN
          ,ORM_GGUBUN
          ,ORM_GOOD
          ,ORM_GPOST
          ,ORM_GADDR
          ,ORM_GEMP
          ,DET_CD   
          ,ORM_GEMPHP
          ,ORM_HDPHONE
          ,ORM_GSPC
          ,ORM_DOWNST
          ,ORM_GRTTON
          ,ORM_DOWNNM
          ,ORM_DPOST   
          ,ORM_DADDR
          ,ORM_CONSP
          ,ORM_SALEMP
          ,ORM_AGTEMP
          ,PRJ_CD
          ,ORM_REBAGT
          ,ORM_CMPCD   
          ,ORM_SPC
          ,ORM_PART
          ,EPI_PINO
          ,ORM_CRYN
          ,ORM_CSTYN
          ,ORM_CSTRATE
          ,ORM_COMRATE
          ,USR_CD
          ,SYS_DT
          ,ORM_WMSSEC
          ,WMS_YN
          ,PLM_PTM
          ,PLM_EVT
          ,PLM_ITR
          ,FRM_NO
          ,ORM_PSTS
  		  ,ADDR_DTL
  		  ,BDONG
  		  ,ORM_ATTR
  		  ,DLV_KIND
  		  ,PLM_MERG_NO
  		  ,COM_BRD
  		  ,LDDR_YN
  		  ,CNT_CDT
  		  ,CNT_ATTR 
  		  ,SHP_NO 
  		 ,FST_USR       
		 ,FST_SYS_DT 
		 ,PAY_DUE_DT
		 ,APT_SEQ
		 ,PROMO_SERIAL
		 ,LDDR_FREE
		 ,ADDR_GUBUN
 	      )
	SELECT
		  'I20210614224305' /*new_orm_no*/            
          ,TOO.ORM_NM
          ,TOO.COM_ORD
          ,TOO.ORM_SSEC
          ,TOO.VND_CD
          ,TOO.AGT_CD
          ,TOO.CMP_CD
          ,TOO.ORM_ORDDT   
          ,TOO.ORM_STAT                
          ,TOO.ORM_RDT
          ,TOO.ORM_ADT
          ,'20210630' /*chg_orm_cdt*/          
          ,TOO.ORM_AGTCST
          ,TOO.ORM_PURCST
          ,TOO.ORM_VISIT   
          ,TOO.ORM_PURRSN
          ,TOO.ORM_GGUBUN
          ,TOO.ORM_GOOD
          ,TOO.ORM_GPOST
          ,TOO.ORM_GADDR
          ,TOO.ORM_GEMP
          ,TOO.DET_CD   
          ,TOO.ORM_GEMPHP
          ,TOO.ORM_HDPHONE
          ,TOO.ORM_GSPC
          ,TOO.ORM_DOWNST
          ,TOO.ORM_GRTTON
          ,TOO.ORM_DOWNNM
          ,TOO.ORM_DPOST   
          ,TOO.ORM_DADDR
          ,TOO.ORM_CONSP
          ,TOO.ORM_SALEMP
          ,TOO.ORM_AGTEMP
          ,TOO.PRJ_CD
          ,TOO.ORM_REBAGT
          ,TOO.ORM_CMPCD   
          ,TOO.ORM_SPC
          ,TOO.ORM_PART
          ,TOO.EPI_PINO
          ,TOO.ORM_CRYN
          ,TOO.ORM_CSTYN
          ,TOO.ORM_CSTRATE
          ,TOO.ORM_COMRATE
          ,TOO.USR_CD
          ,GETDATE()
          ,TOO.ORM_WMSSEC
          ,TOO.WMS_YN
          ,TOO.PLM_PTM
          ,TOO.PLM_EVT
          ,TOO.PLM_ITR
          ,TOO.FRM_NO
          ,TOO.ORM_PSTS
  		  ,TOO.ADDR_DTL
  		  ,TOO.BDONG
  		  ,TOO.ORM_ATTR
  		  ,TOO.DLV_KIND
  		  ,TOO.PLM_MERG_NO
  		  ,TOO.COM_BRD
  		  ,TOO.LDDR_YN
  		  ,TOO.CNT_CDT
  		  ,TOO.CNT_ATTR 
  		  ,TOO.SHP_NO 
  		  ,TOO.FST_USR       
		  ,GETDATE() 
		  ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL('20210630' /*chg_orm_cdt*/ ,'') != '' THEN 
		  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I','20210630' /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990'))   
		   END)
		  ,TOO.APT_SEQ
		  ,TOO.PROMO_SERIAL
		  ,TOO.LDDR_FREE
		  ,TOO.ADDR_GUBUN	
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224304' /*key_no*/
 {executed in 8 msec}
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [insertNewOrdMaster:143] - <==    Updates: 1
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [insertNewOrdDetail:143] - ==>  Preparing: INSERT INTO TO_ORDDET ( ORM_NO ,ORD_SSEQ ,ORD_ISEQ ,SET_CD ,COL_SCD ,ITM_CD ,COL_CD ,ORD_QTY ,ORD_CST ,TAX_AMT ,STK_CD ,ORD_PURCD ,ORD_GOODSEC ,ORD_UPCD ,ORD_WHSCD ,ORD_TWHSCD ,ORD_CURCD ,ORD_FCST ,ORD_QSTAT ,ORD_RMK ,ORD_UNFOLDING ,ORD_ENDYN ,USR_CD ,SYS_DT ,ORD_PIDSEQ ,ORM_PLANDT ,COM_ARESEC ,CAR_NO ,PMS_NO ,COM_TONSEC ,DOK_NO ,ORM_PMSYN ,ORM_PMSND ,COM_SCD ,STI_CD ,COM_CTSEC ,COM_RFG ,WMS_YN ,PID_SEQ ,ORD_ITMCOL ,A.SET_QTY ,A.SDT_QTY ,A.BSET_CD ,A.BCOL_CD ,A.MNF_ADT ,A.WH_ADT ,FST_USR ,FST_SYS_DT ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST ) SELECT ? /*new_orm_no*/ ,TOD.ORD_SSEQ ,TOD.ORD_ISEQ ,TOD.SET_CD ,TOD.COL_SCD ,TOD.ITM_CD ,TOD.COL_CD ,TOD.ORD_QTY ,TOD.ORD_CST ,TOD.TAX_AMT ,TOD.STK_CD ,TOD.ORD_PURCD ,TOD.ORD_GOODSEC ,TOD.ORD_UPCD ,TOD.ORD_WHSCD ,TOD.ORD_TWHSCD ,TOD.ORD_CURCD ,TOD.ORD_FCST ,TOD.ORD_QSTAT ,TOD.ORD_RMK ,TOD.ORD_UNFOLDING ,TOD.ORD_ENDYN ,TOD.USR_CD ,GETDATE() ,TOD.ORD_PIDSEQ ,ORM_PLANDT ,TOD.COM_ARESEC ,TOD.CAR_NO ,TOD.PMS_NO ,TOD.COM_TONSEC ,TOD.DOK_NO ,TOD.ORM_PMSYN ,TOD.ORM_PMSND ,TOD.COM_SCD ,TOD.STI_CD ,TOD.COM_CTSEC ,TOD.COM_RFG ,TOD.WMS_YN ,TOD.PID_SEQ ,TOD.ORD_ITMCOL ,TOD.SET_QTY ,TOD.SDT_QTY ,TOD.BSET_CD ,TOD.BCOL_CD ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,FST_USR ,GETDATE() ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST FROM TO_ORDDET TOD WITH (NOLOCK) WHERE TOD.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:04:41[http-nio-8082-exec-3] [insertNewOrdDetail:143] - ==> Parameters: I20210614224305(String), T01I(String), 20210630(String), T01I(String), T01I(String), 20210630(String), T01I(String), I20210614224304(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO TO_ORDDET (
		  ORM_NO
	      ,ORD_SSEQ
	      ,ORD_ISEQ
	      ,SET_CD
	      ,COL_SCD
	      ,ITM_CD
	      ,COL_CD
	      ,ORD_QTY
	      ,ORD_CST
	      ,TAX_AMT
	      ,STK_CD
	      ,ORD_PURCD
	      ,ORD_GOODSEC
	      ,ORD_UPCD
	      ,ORD_WHSCD
	      ,ORD_TWHSCD
	      ,ORD_CURCD
	      ,ORD_FCST
	      ,ORD_QSTAT
	      ,ORD_RMK
	      ,ORD_UNFOLDING
	      ,ORD_ENDYN
	      ,USR_CD
	      ,SYS_DT
	      ,ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,COM_ARESEC
	      ,CAR_NO
	      ,PMS_NO
	      ,COM_TONSEC
	      ,DOK_NO
	      ,ORM_PMSYN
	      ,ORM_PMSND
	      ,COM_SCD
	      ,STI_CD
	      ,COM_CTSEC
	      ,COM_RFG
	      ,WMS_YN
	      ,PID_SEQ
	      ,ORD_ITMCOL
	      ,A.SET_QTY
          ,A.SDT_QTY
          ,A.BSET_CD
          ,A.BCOL_CD
          ,A.MNF_ADT
          ,A.WH_ADT
		  ,FST_USR       
		  ,FST_SYS_DT
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
 	      )
	SELECT
		  'I20210614224305' /*new_orm_no*/ 
	      ,TOD.ORD_SSEQ
	      ,TOD.ORD_ISEQ
	      ,TOD.SET_CD
	      ,TOD.COL_SCD
	      ,TOD.ITM_CD
	      ,TOD.COL_CD
	      ,TOD.ORD_QTY
	      ,TOD.ORD_CST
	      ,TOD.TAX_AMT
	      ,TOD.STK_CD
	      ,TOD.ORD_PURCD
	      ,TOD.ORD_GOODSEC
	      ,TOD.ORD_UPCD
	      ,TOD.ORD_WHSCD
	      ,TOD.ORD_TWHSCD
	      ,TOD.ORD_CURCD
	      ,TOD.ORD_FCST
	      ,TOD.ORD_QSTAT
	      ,TOD.ORD_RMK
	      ,TOD.ORD_UNFOLDING
	      ,TOD.ORD_ENDYN
	      ,TOD.USR_CD
	      ,GETDATE()
	      ,TOD.ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,TOD.COM_ARESEC
	      ,TOD.CAR_NO
	      ,TOD.PMS_NO
	      ,TOD.COM_TONSEC
	      ,TOD.DOK_NO
	      ,TOD.ORM_PMSYN
	      ,TOD.ORM_PMSND
	      ,TOD.COM_SCD
	      ,TOD.STI_CD
	      ,TOD.COM_CTSEC
	      ,TOD.COM_RFG
	      ,TOD.WMS_YN
	      ,TOD.PID_SEQ
	      ,TOD.ORD_ITMCOL
	      ,TOD.SET_QTY
          ,TOD.SDT_QTY
          ,TOD.BSET_CD
          ,TOD.BCOL_CD
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210630' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) 
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210630' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0)
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
		  ,FST_USR       
		  ,GETDATE()
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
	  FROM TO_ORDDET TOD WITH (NOLOCK)
	 WHERE TOD.ORM_NO = 'I20210614224304' /*key_no*/
 {executed in 1262 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertNewOrdDetail:143] - <==    Updates: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [deleteRecdRenD:143] - ==>  Preparing: DELETE FROM TO_RECE_REN WHERE REC_NO = CAST(? /*key_no*/ AS VARCHAR) 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [deleteRecdRenD:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM TO_RECE_REN
     WHERE REC_NO = CAST('I20210614224304' /*key_no*/  AS VARCHAR)
 {executed in 6 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [deleteRecdRenD:143] - <==    Updates: 0
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertRecdRenD:143] - ==>  Preparing: INSERT INTO TO_RECE_REN (REC_NO , ITM_CD ,COL_CD ,REC_QTY ,ORM_RDT ,ORM_RDT_2 ,ORM_RDT_2_YN ,REC_DT_1 ,REC_DT_2 ,COM_CMP ,IOP_FINEST ,COM_GOODCD ,VND_CD ,COM_STKSEC ,COM_STDSEC ,IOP_MNFCST ) SELECT D.ORM_NO ,D.ITM_CD ,D.COL_CD ,SUM(D.ORD_QTY) ,M.ORM_RDT ,NULL ,NULL ,NULL ,NULL ,CAST('T01I' AS VARCHAR) ,C.IOP_FINEST ,C.COM_GOODCD ,C.VND_CD ,S.COM_STKSEC ,S.COM_STDSEC ,C.IOP_MNFCST FROM TO_ORDMAS M WITH (NOLOCK) ,TO_ORDDET D WITH (NOLOCK) ,TT_ITMCOP C WITH (NOLOCK) ,TT_ITMMST S WITH (NOLOCK) WHERE M.ORM_NO = D.ORM_NO AND D.ITM_CD = C.ITM_CD AND D.COL_CD = C.COL_CD AND C.ITM_CD = S.ITM_CD AND C.COL_CD = S.COL_CD AND D.ORM_NO = CAST(? /*key_no*/ AS VARCHAR) AND C.COM_CMP = CAST('T01I' AS VARCHAR) GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertRecdRenD:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT 
	  INTO TO_RECE_REN 
	            (REC_NO
	             , ITM_CD
	             ,COL_CD
	             ,REC_QTY
	             ,ORM_RDT
	             ,ORM_RDT_2
	             ,ORM_RDT_2_YN
	             ,REC_DT_1
	             ,REC_DT_2
                ,COM_CMP
                ,IOP_FINEST
                ,COM_GOODCD
                ,VND_CD
                ,COM_STKSEC
                ,COM_STDSEC
                ,IOP_MNFCST
                )
	SELECT D.ORM_NO 
	           ,D.ITM_CD 
	           ,D.COL_CD 
	           ,SUM(D.ORD_QTY) 
	           ,M.ORM_RDT 
	           ,NULL
	           ,NULL 
	           ,NULL 
	           ,NULL 
			   ,CAST('T01I' AS VARCHAR) 
			   ,C.IOP_FINEST 
			   ,C.COM_GOODCD 
			   ,C.VND_CD 
			   ,S.COM_STKSEC 
			   ,S.COM_STDSEC 
			   ,C.IOP_MNFCST	   
	FROM TO_ORDMAS M WITH (NOLOCK)
	         ,TO_ORDDET D WITH (NOLOCK)
	         ,TT_ITMCOP C WITH (NOLOCK)
	         ,TT_ITMMST S WITH (NOLOCK)
	WHERE M.ORM_NO = D.ORM_NO
	AND D.ITM_CD = C.ITM_CD 
	AND D.COL_CD = C.COL_CD
	AND C.ITM_CD = S.ITM_CD 
	AND C.COL_CD = S.COL_CD
	AND D.ORM_NO = CAST('I20210614224304' /*key_no*/  AS VARCHAR)
	AND C.COM_CMP = CAST('T01I' AS VARCHAR) 
	GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, 
				    C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST
 {executed in 7 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertRecdRenD:143] - <==    Updates: 20
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224304' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 5 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateToOrdChgmasStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() ,EMC_YN = 'N' ,OUT_TYP = ' ' ,MULTI_CHGKND = '' ,NEW_ORMNO = ? /*new_orm_no*/ WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateToOrdChgmasStat:143] - ==> Parameters: I20210614224305(String), I20210614224304(String), 01(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
            ,EMC_YN = 'N'
            ,OUT_TYP = '      ' 
            ,MULTI_CHGKND = ''
            ,NEW_ORMNO = 'I20210614224305' /*new_orm_no*/ 
       WHERE ORM_NO = 'I20210614224304' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 5 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateToOrdChgmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateToOrdmasStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_STAT = 'O08003' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateToOrdmasStat:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE TO_ORDMAS              									
       SET ORM_STAT = 'O08003' 
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224304' /*key_no*/
 {executed in 32 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateToOrdmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectOrmCryn:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224304' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectSigongReserveYn:143] - ==>  Preparing: SELECT ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectSigongReserveYn:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224304' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectSigongReserveYn:143] - <==      Total: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectRemdtRemseq:143] - ==>  Preparing: SELECT TCR.REM_DT AS DATA1, TCR.REM_SEQ AS DATA2, ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ AND TCR.REM_DT = ? /*rem_dt*/ 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectRemdtRemseq:143] - ==> Parameters: I20210614224304(String), 20210629(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		TCR.REM_DT AS DATA1,
		TCR.REM_SEQ AS DATA2,
		ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224304' /*key_no*/ 
	   AND TCR.REM_DT = '20210629' /*rem_dt*/
 {executed in 11 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectRemdtRemseq:143] - <==      Total: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectTcMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1 FROM TC_SEQNOINF WHERE COM_AGSEC = ? /*com_agsec*/ AND COM_NOSEC = 'C08CRS' AND SEQ_SETDT = ? /*req_dt*/ 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectTcMaxSeqNo:143] - ==> Parameters: C02I(String), 20210630(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1
		  FROM TC_SEQNOINF 
		 WHERE COM_AGSEC = 'C02I' /*com_agsec*/ 	
		   AND COM_NOSEC = 'C08CRS' 
		   AND SEQ_SETDT = '20210630' /*req_dt*/
 {executed in 3 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectTcMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertTcSeqnoinf:143] - ==>  Preparing: MERGE INTO TC_SEQNOINF SI USING (SELECT ? /*com_agsec*/ AS COM_AGSEC ,? /*req_dt*/ AS SEQ_SETDT) A ON SI.COM_AGSEC = A.COM_AGSEC AND SI.SEQ_SETDT = A.SEQ_SETDT AND SI.COM_NOSEC = 'C08CRS' WHEN MATCHED THEN UPDATE SET SEQ_NO = ? /*max_seq_no*/ WHEN NOT MATCHED THEN INSERT (COM_AGSEC ,COM_NOSEC ,SEQ_SETDT ,SEQ_NO ,USR_CD ,SYS_DT ) VALUES(? /*com_agsec*/ ,'C08CRS' ,? /*req_dt*/ ,? /*max_seq_no*/ ,'CHATBOT' ,GETDATE() ); 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertTcSeqnoinf:143] - ==> Parameters: C02I(String), 20210630(String), 796(Integer), C02I(String), 20210630(String), 796(Integer)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. MERGE INTO TC_SEQNOINF SI
    	 USING (SELECT 'C02I' /*com_agsec*/  AS COM_AGSEC
    	              ,'20210630' /*req_dt*/  AS SEQ_SETDT) A
       		ON SI.COM_AGSEC = A.COM_AGSEC
       	   AND SI.SEQ_SETDT = A.SEQ_SETDT
       	   AND SI.COM_NOSEC = 'C08CRS'
          WHEN MATCHED THEN
            UPDATE 
               SET SEQ_NO = 796 /*max_seq_no*/ 
          WHEN NOT MATCHED THEN
		    INSERT
		      	  (COM_AGSEC
		      	  ,COM_NOSEC
		      	  ,SEQ_SETDT
		      	  ,SEQ_NO
		      	  ,USR_CD
		      	  ,SYS_DT
		          )    
			VALUES('C02I' /*com_agsec*/ 
			      ,'C08CRS'
			      ,'20210630' /*req_dt*/ 
			      ,796 /*max_seq_no*/ 
			      ,'CHATBOT'
			      ,GETDATE()
			      );
 {executed in 3 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertTcSeqnoinf:143] - <==    Updates: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateTcresdtl:143] - ==>  Preparing: UPDATE TC_RESDTL SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateTcresdtl:143] - ==> Parameters: 20210630(String), IC0796(String), 20210629(String), IC0432(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE TC_RESDTL SET REM_DT = '20210630' /*req_dt*/ , REM_SEQ = 'IC0796' /*new_rem_seq*/ 
	 WHERE REM_DT = '20210629' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0432' /*rem_seq*/
 {executed in 5 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateTcresdtl:143] - <==    Updates: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateTcresmst:143] - ==>  Preparing: UPDATE TC_RESMST SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ , ORM_NO = ? /*new_ormno*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateTcresmst:143] - ==> Parameters: 20210630(String), IC0796(String), I20210614224305(String), 20210629(String), IC0432(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE TC_RESMST SET REM_DT = '20210630' /*req_dt*/ , REM_SEQ = 'IC0796' /*new_rem_seq*/ , ORM_NO = 'I20210614224305' /*new_ormno*/ 
	 WHERE REM_DT = '20210629' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0432' /*rem_seq*/
 {executed in 6 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateTcresmst:143] - <==    Updates: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateToOrdmasSigongStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_PSTS = 'E' /* 예약상태 */ ,ORM_CDT = ? /*req_dt*/ /* 확정납기일 */ ,USR_CD = 'CHATBOT' /* 최종변경자 */ ,SYS_DT = GETDATE() /* 최종변경일시 */ ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,? /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990')) END) WHERE ORM_NO = ? /*new_ormno*/ 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateToOrdmasSigongStat:143] - ==> Parameters: 20210630(String), 20210630(String), 20210630(String), I20210614224305(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE TO_ORDMAS
       SET ORM_PSTS = 'E'    /* 예약상태 */		
          ,ORM_CDT  = '20210630' /*req_dt*/      /* 확정납기일 */		
          ,USR_CD   = 'CHATBOT'   /* 최종변경자 */
          ,SYS_DT   = GETDATE()     /* 최종변경일시 */
		  ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL('20210630' /*chg_orm_cdt*/ ,'') != '' THEN
							  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,'20210630' /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990'))
							   END)
     WHERE ORM_NO = 'I20210614224305' /*new_ormno*/
 {executed in 30 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [updateToOrdmasSigongStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectOnlineynCheck:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224304' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224304(String), I20210614224304(String), I20210614224304(String), 챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224304,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224304' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224304' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224304' /*key_no*/ ),
		        '챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224304,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 5 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertApicallHist:143] - ==> Parameters: erp_OrderArrivalDateChange(String), 챗봇 주문 도착일정 변경 Auto 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderArrivalDateChange' /*call_function*/ , '챗봇 주문 도착일정 변경 Auto 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 7 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectChginformData:143] - ==> Parameters: I20210614224304(String)
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224304' /*key_no*/
 {executed in 44 msec}
DEBUG 21-06-23 15:04:42[http-nio-8082-exec-3] [selectChginformData:143] - <==      Total: 1
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectSigongYn:143] - ==>  Preparing: SELECT ISNULL(ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectSigongYn:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ISNULL(ORM_CRYN, 'N') AS DATA1,
		   TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224305' /*key_no*/
 {executed in 14 msec}
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectSigongYn:143] - <==      Total: 1
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectSchDivYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectSchDivYn:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224305' /*key_no*/
 {executed in 11 msec}
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectSchDivYn:143] - <==      Total: 1
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectSigongConfirmYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectSigongConfirmYn:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224305' /*key_no*/
 {executed in 6 msec}
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectSigongConfirmYn:143] - <==      Total: 1
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectChgstatusYn:143] - ==>  Preparing: SELECT ( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = ? /*key_no*/ AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' ) 
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectChgstatusYn:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TO_CHGMAS TOC WITH (NOLOCK)
	 WHERE TOC.ORM_NO = 'I20210614224305' /*key_no*/ 
	   AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' )
 {executed in 4 msec}
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [selectChgstatusYn:143] - <==      Total: 1
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [insertOrmCdtChangeReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45002', NULL, 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, ? /*req_dt*/ , TOO.ORM_NM, NULL, TOO.ORM_GPOST, NULL, TOO.ORM_GADDR, NULL, NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, NULL, TOO.BDONG, NULL FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [insertOrmCdtChangeReq:143] - ==> Parameters: 20210629(String), I20210614224305(String)
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45002',
		NULL,
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'20210629' /*req_dt*/ ,
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL,
		TOO.ORM_GADDR,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		NULL,
		TOO.BDONG,
		NULL
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224305' /*key_no*/
 {executed in 8 msec}
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [insertOrmCdtChangeReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeDtRequest(String), 챗봇 주문 도착일정 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeDtRequest' /*call_function*/ , '챗봇 주문 도착일정 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 5 msec}
DEBUG 21-06-23 15:06:15[http-nio-8082-exec-4] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [executeProGetNo:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', 'I20210614224305' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 5 msec}
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [selectToChgmasChgdt:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224305' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 6 msec}
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [selectToChgmasChgdt:143] - <==      Total: 1
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [insertNewOrdMaster:143] - ==>  Preparing: INSERT INTO TO_ORDMAS ( ORM_NO ,ORM_NM ,COM_ORD ,ORM_SSEC ,VND_CD ,AGT_CD ,CMP_CD ,ORM_ORDDT ,ORM_STAT ,ORM_RDT ,ORM_ADT ,ORM_CDT ,ORM_AGTCST ,ORM_PURCST ,ORM_VISIT ,ORM_PURRSN ,ORM_GGUBUN ,ORM_GOOD ,ORM_GPOST ,ORM_GADDR ,ORM_GEMP ,DET_CD ,ORM_GEMPHP ,ORM_HDPHONE ,ORM_GSPC ,ORM_DOWNST ,ORM_GRTTON ,ORM_DOWNNM ,ORM_DPOST ,ORM_DADDR ,ORM_CONSP ,ORM_SALEMP ,ORM_AGTEMP ,PRJ_CD ,ORM_REBAGT ,ORM_CMPCD ,ORM_SPC ,ORM_PART ,EPI_PINO ,ORM_CRYN ,ORM_CSTYN ,ORM_CSTRATE ,ORM_COMRATE ,USR_CD ,SYS_DT ,ORM_WMSSEC ,WMS_YN ,PLM_PTM ,PLM_EVT ,PLM_ITR ,FRM_NO ,ORM_PSTS ,ADDR_DTL ,BDONG ,ORM_ATTR ,DLV_KIND ,PLM_MERG_NO ,COM_BRD ,LDDR_YN ,CNT_CDT ,CNT_ATTR ,SHP_NO ,FST_USR ,FST_SYS_DT ,PAY_DUE_DT ,APT_SEQ ,PROMO_SERIAL ,LDDR_FREE ,ADDR_GUBUN ) SELECT ? /*new_orm_no*/ ,TOO.ORM_NM ,TOO.COM_ORD ,TOO.ORM_SSEC ,TOO.VND_CD ,TOO.AGT_CD ,TOO.CMP_CD ,TOO.ORM_ORDDT ,TOO.ORM_STAT ,TOO.ORM_RDT ,TOO.ORM_ADT ,? /*chg_orm_cdt*/ ,TOO.ORM_AGTCST ,TOO.ORM_PURCST ,TOO.ORM_VISIT ,TOO.ORM_PURRSN ,TOO.ORM_GGUBUN ,TOO.ORM_GOOD ,TOO.ORM_GPOST ,TOO.ORM_GADDR ,TOO.ORM_GEMP ,TOO.DET_CD ,TOO.ORM_GEMPHP ,TOO.ORM_HDPHONE ,TOO.ORM_GSPC ,TOO.ORM_DOWNST ,TOO.ORM_GRTTON ,TOO.ORM_DOWNNM ,TOO.ORM_DPOST ,TOO.ORM_DADDR ,TOO.ORM_CONSP ,TOO.ORM_SALEMP ,TOO.ORM_AGTEMP ,TOO.PRJ_CD ,TOO.ORM_REBAGT ,TOO.ORM_CMPCD ,TOO.ORM_SPC ,TOO.ORM_PART ,TOO.EPI_PINO ,TOO.ORM_CRYN ,TOO.ORM_CSTYN ,TOO.ORM_CSTRATE ,TOO.ORM_COMRATE ,TOO.USR_CD ,GETDATE() ,TOO.ORM_WMSSEC ,TOO.WMS_YN ,TOO.PLM_PTM ,TOO.PLM_EVT ,TOO.PLM_ITR ,TOO.FRM_NO ,TOO.ORM_PSTS ,TOO.ADDR_DTL ,TOO.BDONG ,TOO.ORM_ATTR ,TOO.DLV_KIND ,TOO.PLM_MERG_NO ,TOO.COM_BRD ,TOO.LDDR_YN ,TOO.CNT_CDT ,TOO.CNT_ATTR ,TOO.SHP_NO ,TOO.FST_USR ,GETDATE() ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I',? /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990')) END) ,TOO.APT_SEQ ,TOO.PROMO_SERIAL ,TOO.LDDR_FREE ,TOO.ADDR_GUBUN FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [insertNewOrdMaster:143] - ==> Parameters: I20210614224306(String), 20210629(String), 20210629(String), 20210629(String), I20210614224305(String)
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO TO_ORDMAS (
		  ORM_NO               
          ,ORM_NM
          ,COM_ORD
          ,ORM_SSEC
          ,VND_CD
          ,AGT_CD
          ,CMP_CD
          ,ORM_ORDDT   
          ,ORM_STAT                
          ,ORM_RDT
          ,ORM_ADT
          ,ORM_CDT             
          ,ORM_AGTCST
          ,ORM_PURCST
          ,ORM_VISIT   
          ,ORM_PURRSN
          ,ORM_GGUBUN
          ,ORM_GOOD
          ,ORM_GPOST
          ,ORM_GADDR
          ,ORM_GEMP
          ,DET_CD   
          ,ORM_GEMPHP
          ,ORM_HDPHONE
          ,ORM_GSPC
          ,ORM_DOWNST
          ,ORM_GRTTON
          ,ORM_DOWNNM
          ,ORM_DPOST   
          ,ORM_DADDR
          ,ORM_CONSP
          ,ORM_SALEMP
          ,ORM_AGTEMP
          ,PRJ_CD
          ,ORM_REBAGT
          ,ORM_CMPCD   
          ,ORM_SPC
          ,ORM_PART
          ,EPI_PINO
          ,ORM_CRYN
          ,ORM_CSTYN
          ,ORM_CSTRATE
          ,ORM_COMRATE
          ,USR_CD
          ,SYS_DT
          ,ORM_WMSSEC
          ,WMS_YN
          ,PLM_PTM
          ,PLM_EVT
          ,PLM_ITR
          ,FRM_NO
          ,ORM_PSTS
  		  ,ADDR_DTL
  		  ,BDONG
  		  ,ORM_ATTR
  		  ,DLV_KIND
  		  ,PLM_MERG_NO
  		  ,COM_BRD
  		  ,LDDR_YN
  		  ,CNT_CDT
  		  ,CNT_ATTR 
  		  ,SHP_NO 
  		 ,FST_USR       
		 ,FST_SYS_DT 
		 ,PAY_DUE_DT
		 ,APT_SEQ
		 ,PROMO_SERIAL
		 ,LDDR_FREE
		 ,ADDR_GUBUN
 	      )
	SELECT
		  'I20210614224306' /*new_orm_no*/            
          ,TOO.ORM_NM
          ,TOO.COM_ORD
          ,TOO.ORM_SSEC
          ,TOO.VND_CD
          ,TOO.AGT_CD
          ,TOO.CMP_CD
          ,TOO.ORM_ORDDT   
          ,TOO.ORM_STAT                
          ,TOO.ORM_RDT
          ,TOO.ORM_ADT
          ,'20210629' /*chg_orm_cdt*/          
          ,TOO.ORM_AGTCST
          ,TOO.ORM_PURCST
          ,TOO.ORM_VISIT   
          ,TOO.ORM_PURRSN
          ,TOO.ORM_GGUBUN
          ,TOO.ORM_GOOD
          ,TOO.ORM_GPOST
          ,TOO.ORM_GADDR
          ,TOO.ORM_GEMP
          ,TOO.DET_CD   
          ,TOO.ORM_GEMPHP
          ,TOO.ORM_HDPHONE
          ,TOO.ORM_GSPC
          ,TOO.ORM_DOWNST
          ,TOO.ORM_GRTTON
          ,TOO.ORM_DOWNNM
          ,TOO.ORM_DPOST   
          ,TOO.ORM_DADDR
          ,TOO.ORM_CONSP
          ,TOO.ORM_SALEMP
          ,TOO.ORM_AGTEMP
          ,TOO.PRJ_CD
          ,TOO.ORM_REBAGT
          ,TOO.ORM_CMPCD   
          ,TOO.ORM_SPC
          ,TOO.ORM_PART
          ,TOO.EPI_PINO
          ,TOO.ORM_CRYN
          ,TOO.ORM_CSTYN
          ,TOO.ORM_CSTRATE
          ,TOO.ORM_COMRATE
          ,TOO.USR_CD
          ,GETDATE()
          ,TOO.ORM_WMSSEC
          ,TOO.WMS_YN
          ,TOO.PLM_PTM
          ,TOO.PLM_EVT
          ,TOO.PLM_ITR
          ,TOO.FRM_NO
          ,TOO.ORM_PSTS
  		  ,TOO.ADDR_DTL
  		  ,TOO.BDONG
  		  ,TOO.ORM_ATTR
  		  ,TOO.DLV_KIND
  		  ,TOO.PLM_MERG_NO
  		  ,TOO.COM_BRD
  		  ,TOO.LDDR_YN
  		  ,TOO.CNT_CDT
  		  ,TOO.CNT_ATTR 
  		  ,TOO.SHP_NO 
  		  ,TOO.FST_USR       
		  ,GETDATE() 
		  ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL('20210629' /*chg_orm_cdt*/ ,'') != '' THEN 
		  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I','20210629' /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990'))   
		   END)
		  ,TOO.APT_SEQ
		  ,TOO.PROMO_SERIAL
		  ,TOO.LDDR_FREE
		  ,TOO.ADDR_GUBUN	
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224305' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [insertNewOrdMaster:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [insertNewOrdDetail:143] - ==>  Preparing: INSERT INTO TO_ORDDET ( ORM_NO ,ORD_SSEQ ,ORD_ISEQ ,SET_CD ,COL_SCD ,ITM_CD ,COL_CD ,ORD_QTY ,ORD_CST ,TAX_AMT ,STK_CD ,ORD_PURCD ,ORD_GOODSEC ,ORD_UPCD ,ORD_WHSCD ,ORD_TWHSCD ,ORD_CURCD ,ORD_FCST ,ORD_QSTAT ,ORD_RMK ,ORD_UNFOLDING ,ORD_ENDYN ,USR_CD ,SYS_DT ,ORD_PIDSEQ ,ORM_PLANDT ,COM_ARESEC ,CAR_NO ,PMS_NO ,COM_TONSEC ,DOK_NO ,ORM_PMSYN ,ORM_PMSND ,COM_SCD ,STI_CD ,COM_CTSEC ,COM_RFG ,WMS_YN ,PID_SEQ ,ORD_ITMCOL ,A.SET_QTY ,A.SDT_QTY ,A.BSET_CD ,A.BCOL_CD ,A.MNF_ADT ,A.WH_ADT ,FST_USR ,FST_SYS_DT ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST ) SELECT ? /*new_orm_no*/ ,TOD.ORD_SSEQ ,TOD.ORD_ISEQ ,TOD.SET_CD ,TOD.COL_SCD ,TOD.ITM_CD ,TOD.COL_CD ,TOD.ORD_QTY ,TOD.ORD_CST ,TOD.TAX_AMT ,TOD.STK_CD ,TOD.ORD_PURCD ,TOD.ORD_GOODSEC ,TOD.ORD_UPCD ,TOD.ORD_WHSCD ,TOD.ORD_TWHSCD ,TOD.ORD_CURCD ,TOD.ORD_FCST ,TOD.ORD_QSTAT ,TOD.ORD_RMK ,TOD.ORD_UNFOLDING ,TOD.ORD_ENDYN ,TOD.USR_CD ,GETDATE() ,TOD.ORD_PIDSEQ ,ORM_PLANDT ,TOD.COM_ARESEC ,TOD.CAR_NO ,TOD.PMS_NO ,TOD.COM_TONSEC ,TOD.DOK_NO ,TOD.ORM_PMSYN ,TOD.ORM_PMSND ,TOD.COM_SCD ,TOD.STI_CD ,TOD.COM_CTSEC ,TOD.COM_RFG ,TOD.WMS_YN ,TOD.PID_SEQ ,TOD.ORD_ITMCOL ,TOD.SET_QTY ,TOD.SDT_QTY ,TOD.BSET_CD ,TOD.BCOL_CD ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,FST_USR ,GETDATE() ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST FROM TO_ORDDET TOD WITH (NOLOCK) WHERE TOD.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [insertNewOrdDetail:143] - ==> Parameters: I20210614224306(String), T01I(String), 20210629(String), T01I(String), T01I(String), 20210629(String), T01I(String), I20210614224305(String)
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO TO_ORDDET (
		  ORM_NO
	      ,ORD_SSEQ
	      ,ORD_ISEQ
	      ,SET_CD
	      ,COL_SCD
	      ,ITM_CD
	      ,COL_CD
	      ,ORD_QTY
	      ,ORD_CST
	      ,TAX_AMT
	      ,STK_CD
	      ,ORD_PURCD
	      ,ORD_GOODSEC
	      ,ORD_UPCD
	      ,ORD_WHSCD
	      ,ORD_TWHSCD
	      ,ORD_CURCD
	      ,ORD_FCST
	      ,ORD_QSTAT
	      ,ORD_RMK
	      ,ORD_UNFOLDING
	      ,ORD_ENDYN
	      ,USR_CD
	      ,SYS_DT
	      ,ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,COM_ARESEC
	      ,CAR_NO
	      ,PMS_NO
	      ,COM_TONSEC
	      ,DOK_NO
	      ,ORM_PMSYN
	      ,ORM_PMSND
	      ,COM_SCD
	      ,STI_CD
	      ,COM_CTSEC
	      ,COM_RFG
	      ,WMS_YN
	      ,PID_SEQ
	      ,ORD_ITMCOL
	      ,A.SET_QTY
          ,A.SDT_QTY
          ,A.BSET_CD
          ,A.BCOL_CD
          ,A.MNF_ADT
          ,A.WH_ADT
		  ,FST_USR       
		  ,FST_SYS_DT
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
 	      )
	SELECT
		  'I20210614224306' /*new_orm_no*/ 
	      ,TOD.ORD_SSEQ
	      ,TOD.ORD_ISEQ
	      ,TOD.SET_CD
	      ,TOD.COL_SCD
	      ,TOD.ITM_CD
	      ,TOD.COL_CD
	      ,TOD.ORD_QTY
	      ,TOD.ORD_CST
	      ,TOD.TAX_AMT
	      ,TOD.STK_CD
	      ,TOD.ORD_PURCD
	      ,TOD.ORD_GOODSEC
	      ,TOD.ORD_UPCD
	      ,TOD.ORD_WHSCD
	      ,TOD.ORD_TWHSCD
	      ,TOD.ORD_CURCD
	      ,TOD.ORD_FCST
	      ,TOD.ORD_QSTAT
	      ,TOD.ORD_RMK
	      ,TOD.ORD_UNFOLDING
	      ,TOD.ORD_ENDYN
	      ,TOD.USR_CD
	      ,GETDATE()
	      ,TOD.ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,TOD.COM_ARESEC
	      ,TOD.CAR_NO
	      ,TOD.PMS_NO
	      ,TOD.COM_TONSEC
	      ,TOD.DOK_NO
	      ,TOD.ORM_PMSYN
	      ,TOD.ORM_PMSND
	      ,TOD.COM_SCD
	      ,TOD.STI_CD
	      ,TOD.COM_CTSEC
	      ,TOD.COM_RFG
	      ,TOD.WMS_YN
	      ,TOD.PID_SEQ
	      ,TOD.ORD_ITMCOL
	      ,TOD.SET_QTY
          ,TOD.SDT_QTY
          ,TOD.BSET_CD
          ,TOD.BCOL_CD
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210629' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) 
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210629' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0)
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
		  ,FST_USR       
		  ,GETDATE()
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
	  FROM TO_ORDDET TOD WITH (NOLOCK)
	 WHERE TOD.ORM_NO = 'I20210614224305' /*key_no*/
 {executed in 139 msec}
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [insertNewOrdDetail:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [deleteRecdRenD:143] - ==>  Preparing: DELETE FROM TO_RECE_REN WHERE REC_NO = CAST(? /*key_no*/ AS VARCHAR) 
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [deleteRecdRenD:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. DELETE FROM TO_RECE_REN
     WHERE REC_NO = CAST('I20210614224305' /*key_no*/  AS VARCHAR)
 {executed in 6 msec}
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [deleteRecdRenD:143] - <==    Updates: 0
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [insertRecdRenD:143] - ==>  Preparing: INSERT INTO TO_RECE_REN (REC_NO , ITM_CD ,COL_CD ,REC_QTY ,ORM_RDT ,ORM_RDT_2 ,ORM_RDT_2_YN ,REC_DT_1 ,REC_DT_2 ,COM_CMP ,IOP_FINEST ,COM_GOODCD ,VND_CD ,COM_STKSEC ,COM_STDSEC ,IOP_MNFCST ) SELECT D.ORM_NO ,D.ITM_CD ,D.COL_CD ,SUM(D.ORD_QTY) ,M.ORM_RDT ,NULL ,NULL ,NULL ,NULL ,CAST('T01I' AS VARCHAR) ,C.IOP_FINEST ,C.COM_GOODCD ,C.VND_CD ,S.COM_STKSEC ,S.COM_STDSEC ,C.IOP_MNFCST FROM TO_ORDMAS M WITH (NOLOCK) ,TO_ORDDET D WITH (NOLOCK) ,TT_ITMCOP C WITH (NOLOCK) ,TT_ITMMST S WITH (NOLOCK) WHERE M.ORM_NO = D.ORM_NO AND D.ITM_CD = C.ITM_CD AND D.COL_CD = C.COL_CD AND C.ITM_CD = S.ITM_CD AND C.COL_CD = S.COL_CD AND D.ORM_NO = CAST(? /*key_no*/ AS VARCHAR) AND C.COM_CMP = CAST('T01I' AS VARCHAR) GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST 
DEBUG 21-06-23 15:06:23[http-nio-8082-exec-6] [insertRecdRenD:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT 
	  INTO TO_RECE_REN 
	            (REC_NO
	             , ITM_CD
	             ,COL_CD
	             ,REC_QTY
	             ,ORM_RDT
	             ,ORM_RDT_2
	             ,ORM_RDT_2_YN
	             ,REC_DT_1
	             ,REC_DT_2
                ,COM_CMP
                ,IOP_FINEST
                ,COM_GOODCD
                ,VND_CD
                ,COM_STKSEC
                ,COM_STDSEC
                ,IOP_MNFCST
                )
	SELECT D.ORM_NO 
	           ,D.ITM_CD 
	           ,D.COL_CD 
	           ,SUM(D.ORD_QTY) 
	           ,M.ORM_RDT 
	           ,NULL
	           ,NULL 
	           ,NULL 
	           ,NULL 
			   ,CAST('T01I' AS VARCHAR) 
			   ,C.IOP_FINEST 
			   ,C.COM_GOODCD 
			   ,C.VND_CD 
			   ,S.COM_STKSEC 
			   ,S.COM_STDSEC 
			   ,C.IOP_MNFCST	   
	FROM TO_ORDMAS M WITH (NOLOCK)
	         ,TO_ORDDET D WITH (NOLOCK)
	         ,TT_ITMCOP C WITH (NOLOCK)
	         ,TT_ITMMST S WITH (NOLOCK)
	WHERE M.ORM_NO = D.ORM_NO
	AND D.ITM_CD = C.ITM_CD 
	AND D.COL_CD = C.COL_CD
	AND C.ITM_CD = S.ITM_CD 
	AND C.COL_CD = S.COL_CD
	AND D.ORM_NO = CAST('I20210614224305' /*key_no*/  AS VARCHAR)
	AND C.COM_CMP = CAST('T01I' AS VARCHAR) 
	GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, 
				    C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST
 {executed in 6 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [insertRecdRenD:143] - <==    Updates: 20
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224305' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 13 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateToOrdChgmasStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() ,EMC_YN = 'N' ,OUT_TYP = ' ' ,MULTI_CHGKND = '' ,NEW_ORMNO = ? /*new_orm_no*/ WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateToOrdChgmasStat:143] - ==> Parameters: I20210614224306(String), I20210614224305(String), 01(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
            ,EMC_YN = 'N'
            ,OUT_TYP = '      ' 
            ,MULTI_CHGKND = ''
            ,NEW_ORMNO = 'I20210614224306' /*new_orm_no*/ 
       WHERE ORM_NO = 'I20210614224305' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 12 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateToOrdChgmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateToOrdmasStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_STAT = 'O08003' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateToOrdmasStat:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE TO_ORDMAS              									
       SET ORM_STAT = 'O08003' 
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224305' /*key_no*/
 {executed in 35 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateToOrdmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectOrmCryn:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224305' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectSigongReserveYn:143] - ==>  Preparing: SELECT ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectSigongReserveYn:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224305' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectSigongReserveYn:143] - <==      Total: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectRemdtRemseq:143] - ==>  Preparing: SELECT TCR.REM_DT AS DATA1, TCR.REM_SEQ AS DATA2, ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ AND TCR.REM_DT = ? /*rem_dt*/ 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectRemdtRemseq:143] - ==> Parameters: I20210614224305(String), 20210630(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		TCR.REM_DT AS DATA1,
		TCR.REM_SEQ AS DATA2,
		ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224305' /*key_no*/ 
	   AND TCR.REM_DT = '20210630' /*rem_dt*/
 {executed in 4 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectRemdtRemseq:143] - <==      Total: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectTcMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1 FROM TC_SEQNOINF WHERE COM_AGSEC = ? /*com_agsec*/ AND COM_NOSEC = 'C08CRS' AND SEQ_SETDT = ? /*req_dt*/ 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectTcMaxSeqNo:143] - ==> Parameters: C02I(String), 20210629(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1
		  FROM TC_SEQNOINF 
		 WHERE COM_AGSEC = 'C02I' /*com_agsec*/ 	
		   AND COM_NOSEC = 'C08CRS' 
		   AND SEQ_SETDT = '20210629' /*req_dt*/
 {executed in 10 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectTcMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [insertTcSeqnoinf:143] - ==>  Preparing: MERGE INTO TC_SEQNOINF SI USING (SELECT ? /*com_agsec*/ AS COM_AGSEC ,? /*req_dt*/ AS SEQ_SETDT) A ON SI.COM_AGSEC = A.COM_AGSEC AND SI.SEQ_SETDT = A.SEQ_SETDT AND SI.COM_NOSEC = 'C08CRS' WHEN MATCHED THEN UPDATE SET SEQ_NO = ? /*max_seq_no*/ WHEN NOT MATCHED THEN INSERT (COM_AGSEC ,COM_NOSEC ,SEQ_SETDT ,SEQ_NO ,USR_CD ,SYS_DT ) VALUES(? /*com_agsec*/ ,'C08CRS' ,? /*req_dt*/ ,? /*max_seq_no*/ ,'CHATBOT' ,GETDATE() ); 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [insertTcSeqnoinf:143] - ==> Parameters: C02I(String), 20210629(String), 433(Integer), C02I(String), 20210629(String), 433(Integer)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. MERGE INTO TC_SEQNOINF SI
    	 USING (SELECT 'C02I' /*com_agsec*/  AS COM_AGSEC
    	              ,'20210629' /*req_dt*/  AS SEQ_SETDT) A
       		ON SI.COM_AGSEC = A.COM_AGSEC
       	   AND SI.SEQ_SETDT = A.SEQ_SETDT
       	   AND SI.COM_NOSEC = 'C08CRS'
          WHEN MATCHED THEN
            UPDATE 
               SET SEQ_NO = 433 /*max_seq_no*/ 
          WHEN NOT MATCHED THEN
		    INSERT
		      	  (COM_AGSEC
		      	  ,COM_NOSEC
		      	  ,SEQ_SETDT
		      	  ,SEQ_NO
		      	  ,USR_CD
		      	  ,SYS_DT
		          )    
			VALUES('C02I' /*com_agsec*/ 
			      ,'C08CRS'
			      ,'20210629' /*req_dt*/ 
			      ,433 /*max_seq_no*/ 
			      ,'CHATBOT'
			      ,GETDATE()
			      );
 {executed in 5 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [insertTcSeqnoinf:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateTcresdtl:143] - ==>  Preparing: UPDATE TC_RESDTL SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateTcresdtl:143] - ==> Parameters: 20210629(String), IC0433(String), 20210630(String), IC0796(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE TC_RESDTL SET REM_DT = '20210629' /*req_dt*/ , REM_SEQ = 'IC0433' /*new_rem_seq*/ 
	 WHERE REM_DT = '20210630' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0796' /*rem_seq*/
 {executed in 6 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateTcresdtl:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateTcresmst:143] - ==>  Preparing: UPDATE TC_RESMST SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ , ORM_NO = ? /*new_ormno*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateTcresmst:143] - ==> Parameters: 20210629(String), IC0433(String), I20210614224306(String), 20210630(String), IC0796(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE TC_RESMST SET REM_DT = '20210629' /*req_dt*/ , REM_SEQ = 'IC0433' /*new_rem_seq*/ , ORM_NO = 'I20210614224306' /*new_ormno*/ 
	 WHERE REM_DT = '20210630' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0796' /*rem_seq*/
 {executed in 9 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateTcresmst:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateToOrdmasSigongStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_PSTS = 'E' /* 예약상태 */ ,ORM_CDT = ? /*req_dt*/ /* 확정납기일 */ ,USR_CD = 'CHATBOT' /* 최종변경자 */ ,SYS_DT = GETDATE() /* 최종변경일시 */ ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,? /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990')) END) WHERE ORM_NO = ? /*new_ormno*/ 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateToOrdmasSigongStat:143] - ==> Parameters: 20210629(String), 20210629(String), 20210629(String), I20210614224306(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. UPDATE TO_ORDMAS
       SET ORM_PSTS = 'E'    /* 예약상태 */		
          ,ORM_CDT  = '20210629' /*req_dt*/      /* 확정납기일 */		
          ,USR_CD   = 'CHATBOT'   /* 최종변경자 */
          ,SYS_DT   = GETDATE()     /* 최종변경일시 */
		  ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL('20210629' /*chg_orm_cdt*/ ,'') != '' THEN
							  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,'20210629' /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990'))
							   END)
     WHERE ORM_NO = 'I20210614224306' /*new_ormno*/
 {executed in 31 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [updateToOrdmasSigongStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectOnlineynCheck:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224305' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224305(String), I20210614224305(String), I20210614224305(String), 챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224305,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224305' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224305' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224305' /*key_no*/ ),
		        '챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224305,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 5 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [insertApicallHist:143] - ==> Parameters: erp_OrderArrivalDateChange(String), 챗봇 주문 도착일정 변경 Auto 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderArrivalDateChange' /*call_function*/ , '챗봇 주문 도착일정 변경 Auto 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 5 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectChginformData:143] - ==> Parameters: I20210614224305(String)
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224305' /*key_no*/
 {executed in 9 msec}
DEBUG 21-06-23 15:06:24[http-nio-8082-exec-6] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 15:07:20[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 15:07:22[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 15:07:22[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 15:07:22[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 15:07:28[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 29924 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 15:07:28[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 15:07:29[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 15:07:29[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 15:07:29[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:07:29[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 15:07:29[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 15:07:29[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 15:07:29[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 1015 ms
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 15:07:30[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@480b57e2, org.springframework.security.web.context.SecurityContextPersistenceFilter@75e09567, org.springframework.security.web.header.HeaderWriterFilter@2b0dc227, org.springframework.security.web.authentication.logout.LogoutFilter@157ec23b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3f36e8d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@470d183, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@210d2a6c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@40f35e52, org.springframework.security.web.session.SessionManagementFilter@43bdaa1b, org.springframework.security.web.access.ExceptionTranslationFilter@50448409, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5d1e0fbb]
INFO  21-06-23 15:07:30[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 15:07:30[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 15:07:30[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 15:07:30[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:07:30[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 15:07:30[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 15:07:30[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 15:07:30[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 15:07:30[main] [ChatBotApplication:61] - Started ChatBotApplication in 2.483 seconds (JVM running for 3.904)
INFO  21-06-23 15:07:40[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 15:07:40[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 15:07:40[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 5 ms
INFO  21-06-23 15:11:23[http-nio-8082-exec-2] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 15:11:24[http-nio-8082-exec-2] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectSigongYn:143] - ==>  Preparing: SELECT ISNULL(ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectSigongYn:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(ORM_CRYN, 'N') AS DATA1,
		   TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224306' /*key_no*/
 {executed in 9 msec}
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectSigongYn:143] - <==      Total: 1
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectSchDivYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectSchDivYn:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224306' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectSchDivYn:143] - <==      Total: 1
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectSigongConfirmYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectSigongConfirmYn:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224306' /*key_no*/
 {executed in 6 msec}
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectSigongConfirmYn:143] - <==      Total: 1
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectChgstatusYn:143] - ==>  Preparing: SELECT ( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = ? /*key_no*/ AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' ) 
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectChgstatusYn:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TO_CHGMAS TOC WITH (NOLOCK)
	 WHERE TOC.ORM_NO = 'I20210614224306' /*key_no*/ 
	   AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' )
 {executed in 5 msec}
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [selectChgstatusYn:143] - <==      Total: 1
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [insertOrmCdtChangeReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45002', NULL, 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, ? /*req_dt*/ , TOO.ORM_NM, NULL, TOO.ORM_GPOST, NULL, TOO.ORM_GADDR, NULL, NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, NULL, TOO.BDONG, NULL FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [insertOrmCdtChangeReq:143] - ==> Parameters: 20210630(String), I20210614224306(String)
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45002',
		NULL,
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'20210630' /*req_dt*/ ,
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL,
		TOO.ORM_GADDR,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		NULL,
		TOO.BDONG,
		NULL
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224306' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [insertOrmCdtChangeReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeDtRequest(String), 챗봇 주문 도착일정 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeDtRequest' /*call_function*/ , '챗봇 주문 도착일정 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 4 msec}
DEBUG 21-06-23 15:11:24[http-nio-8082-exec-2] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:11:59[http-nio-8082-exec-4] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 15:11:59[http-nio-8082-exec-4] [executeProGetNo:143] - ==> Parameters: 20210614224306(String)
DEBUG 21-06-23 15:11:59[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', '20210614224306' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 42 msec}
DEBUG 21-06-23 15:11:59[http-nio-8082-exec-4] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 15:11:59[http-nio-8082-exec-4] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:11:59[http-nio-8082-exec-4] [selectToChgmasChgdt:143] - ==> Parameters: 20210614224306(String)
DEBUG 21-06-23 15:11:59[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = '20210614224306' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 5 msec}
DEBUG 21-06-23 15:11:59[http-nio-8082-exec-4] [selectToChgmasChgdt:143] - <==      Total: 0
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [executeProGetNo:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', 'I20210614224306' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 3 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectToChgmasChgdt:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224306' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 6 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectToChgmasChgdt:143] - <==      Total: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertNewOrdMaster:143] - ==>  Preparing: INSERT INTO TO_ORDMAS ( ORM_NO ,ORM_NM ,COM_ORD ,ORM_SSEC ,VND_CD ,AGT_CD ,CMP_CD ,ORM_ORDDT ,ORM_STAT ,ORM_RDT ,ORM_ADT ,ORM_CDT ,ORM_AGTCST ,ORM_PURCST ,ORM_VISIT ,ORM_PURRSN ,ORM_GGUBUN ,ORM_GOOD ,ORM_GPOST ,ORM_GADDR ,ORM_GEMP ,DET_CD ,ORM_GEMPHP ,ORM_HDPHONE ,ORM_GSPC ,ORM_DOWNST ,ORM_GRTTON ,ORM_DOWNNM ,ORM_DPOST ,ORM_DADDR ,ORM_CONSP ,ORM_SALEMP ,ORM_AGTEMP ,PRJ_CD ,ORM_REBAGT ,ORM_CMPCD ,ORM_SPC ,ORM_PART ,EPI_PINO ,ORM_CRYN ,ORM_CSTYN ,ORM_CSTRATE ,ORM_COMRATE ,USR_CD ,SYS_DT ,ORM_WMSSEC ,WMS_YN ,PLM_PTM ,PLM_EVT ,PLM_ITR ,FRM_NO ,ORM_PSTS ,ADDR_DTL ,BDONG ,ORM_ATTR ,DLV_KIND ,PLM_MERG_NO ,COM_BRD ,LDDR_YN ,CNT_CDT ,CNT_ATTR ,SHP_NO ,FST_USR ,FST_SYS_DT ,PAY_DUE_DT ,APT_SEQ ,PROMO_SERIAL ,LDDR_FREE ,ADDR_GUBUN ) SELECT ? /*new_orm_no*/ ,TOO.ORM_NM ,TOO.COM_ORD ,TOO.ORM_SSEC ,TOO.VND_CD ,TOO.AGT_CD ,TOO.CMP_CD ,TOO.ORM_ORDDT ,TOO.ORM_STAT ,TOO.ORM_RDT ,TOO.ORM_ADT ,? /*chg_orm_cdt*/ ,TOO.ORM_AGTCST ,TOO.ORM_PURCST ,TOO.ORM_VISIT ,TOO.ORM_PURRSN ,TOO.ORM_GGUBUN ,TOO.ORM_GOOD ,TOO.ORM_GPOST ,TOO.ORM_GADDR ,TOO.ORM_GEMP ,TOO.DET_CD ,TOO.ORM_GEMPHP ,TOO.ORM_HDPHONE ,TOO.ORM_GSPC ,TOO.ORM_DOWNST ,TOO.ORM_GRTTON ,TOO.ORM_DOWNNM ,TOO.ORM_DPOST ,TOO.ORM_DADDR ,TOO.ORM_CONSP ,TOO.ORM_SALEMP ,TOO.ORM_AGTEMP ,TOO.PRJ_CD ,TOO.ORM_REBAGT ,TOO.ORM_CMPCD ,TOO.ORM_SPC ,TOO.ORM_PART ,TOO.EPI_PINO ,TOO.ORM_CRYN ,TOO.ORM_CSTYN ,TOO.ORM_CSTRATE ,TOO.ORM_COMRATE ,TOO.USR_CD ,GETDATE() ,TOO.ORM_WMSSEC ,TOO.WMS_YN ,TOO.PLM_PTM ,TOO.PLM_EVT ,TOO.PLM_ITR ,TOO.FRM_NO ,TOO.ORM_PSTS ,TOO.ADDR_DTL ,TOO.BDONG ,TOO.ORM_ATTR ,TOO.DLV_KIND ,TOO.PLM_MERG_NO ,TOO.COM_BRD ,TOO.LDDR_YN ,TOO.CNT_CDT ,TOO.CNT_ATTR ,TOO.SHP_NO ,TOO.FST_USR ,GETDATE() ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I',? /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990')) END) ,TOO.APT_SEQ ,TOO.PROMO_SERIAL ,TOO.LDDR_FREE ,TOO.ADDR_GUBUN FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertNewOrdMaster:143] - ==> Parameters: I20210614224307(String), 20210630(String), 20210630(String), 20210630(String), I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDMAS (
		  ORM_NO               
          ,ORM_NM
          ,COM_ORD
          ,ORM_SSEC
          ,VND_CD
          ,AGT_CD
          ,CMP_CD
          ,ORM_ORDDT   
          ,ORM_STAT                
          ,ORM_RDT
          ,ORM_ADT
          ,ORM_CDT             
          ,ORM_AGTCST
          ,ORM_PURCST
          ,ORM_VISIT   
          ,ORM_PURRSN
          ,ORM_GGUBUN
          ,ORM_GOOD
          ,ORM_GPOST
          ,ORM_GADDR
          ,ORM_GEMP
          ,DET_CD   
          ,ORM_GEMPHP
          ,ORM_HDPHONE
          ,ORM_GSPC
          ,ORM_DOWNST
          ,ORM_GRTTON
          ,ORM_DOWNNM
          ,ORM_DPOST   
          ,ORM_DADDR
          ,ORM_CONSP
          ,ORM_SALEMP
          ,ORM_AGTEMP
          ,PRJ_CD
          ,ORM_REBAGT
          ,ORM_CMPCD   
          ,ORM_SPC
          ,ORM_PART
          ,EPI_PINO
          ,ORM_CRYN
          ,ORM_CSTYN
          ,ORM_CSTRATE
          ,ORM_COMRATE
          ,USR_CD
          ,SYS_DT
          ,ORM_WMSSEC
          ,WMS_YN
          ,PLM_PTM
          ,PLM_EVT
          ,PLM_ITR
          ,FRM_NO
          ,ORM_PSTS
  		  ,ADDR_DTL
  		  ,BDONG
  		  ,ORM_ATTR
  		  ,DLV_KIND
  		  ,PLM_MERG_NO
  		  ,COM_BRD
  		  ,LDDR_YN
  		  ,CNT_CDT
  		  ,CNT_ATTR 
  		  ,SHP_NO 
  		 ,FST_USR       
		 ,FST_SYS_DT 
		 ,PAY_DUE_DT
		 ,APT_SEQ
		 ,PROMO_SERIAL
		 ,LDDR_FREE
		 ,ADDR_GUBUN
 	      )
	SELECT
		  'I20210614224307' /*new_orm_no*/            
          ,TOO.ORM_NM
          ,TOO.COM_ORD
          ,TOO.ORM_SSEC
          ,TOO.VND_CD
          ,TOO.AGT_CD
          ,TOO.CMP_CD
          ,TOO.ORM_ORDDT   
          ,TOO.ORM_STAT                
          ,TOO.ORM_RDT
          ,TOO.ORM_ADT
          ,'20210630' /*chg_orm_cdt*/          
          ,TOO.ORM_AGTCST
          ,TOO.ORM_PURCST
          ,TOO.ORM_VISIT   
          ,TOO.ORM_PURRSN
          ,TOO.ORM_GGUBUN
          ,TOO.ORM_GOOD
          ,TOO.ORM_GPOST
          ,TOO.ORM_GADDR
          ,TOO.ORM_GEMP
          ,TOO.DET_CD   
          ,TOO.ORM_GEMPHP
          ,TOO.ORM_HDPHONE
          ,TOO.ORM_GSPC
          ,TOO.ORM_DOWNST
          ,TOO.ORM_GRTTON
          ,TOO.ORM_DOWNNM
          ,TOO.ORM_DPOST   
          ,TOO.ORM_DADDR
          ,TOO.ORM_CONSP
          ,TOO.ORM_SALEMP
          ,TOO.ORM_AGTEMP
          ,TOO.PRJ_CD
          ,TOO.ORM_REBAGT
          ,TOO.ORM_CMPCD   
          ,TOO.ORM_SPC
          ,TOO.ORM_PART
          ,TOO.EPI_PINO
          ,TOO.ORM_CRYN
          ,TOO.ORM_CSTYN
          ,TOO.ORM_CSTRATE
          ,TOO.ORM_COMRATE
          ,TOO.USR_CD
          ,GETDATE()
          ,TOO.ORM_WMSSEC
          ,TOO.WMS_YN
          ,TOO.PLM_PTM
          ,TOO.PLM_EVT
          ,TOO.PLM_ITR
          ,TOO.FRM_NO
          ,TOO.ORM_PSTS
  		  ,TOO.ADDR_DTL
  		  ,TOO.BDONG
  		  ,TOO.ORM_ATTR
  		  ,TOO.DLV_KIND
  		  ,TOO.PLM_MERG_NO
  		  ,TOO.COM_BRD
  		  ,TOO.LDDR_YN
  		  ,TOO.CNT_CDT
  		  ,TOO.CNT_ATTR 
  		  ,TOO.SHP_NO 
  		  ,TOO.FST_USR       
		  ,GETDATE() 
		  ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL('20210630' /*chg_orm_cdt*/ ,'') != '' THEN 
		  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I','20210630' /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990'))   
		   END)
		  ,TOO.APT_SEQ
		  ,TOO.PROMO_SERIAL
		  ,TOO.LDDR_FREE
		  ,TOO.ADDR_GUBUN	
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224306' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertNewOrdMaster:143] - <==    Updates: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertNewOrdDetail:143] - ==>  Preparing: INSERT INTO TO_ORDDET ( ORM_NO ,ORD_SSEQ ,ORD_ISEQ ,SET_CD ,COL_SCD ,ITM_CD ,COL_CD ,ORD_QTY ,ORD_CST ,TAX_AMT ,STK_CD ,ORD_PURCD ,ORD_GOODSEC ,ORD_UPCD ,ORD_WHSCD ,ORD_TWHSCD ,ORD_CURCD ,ORD_FCST ,ORD_QSTAT ,ORD_RMK ,ORD_UNFOLDING ,ORD_ENDYN ,USR_CD ,SYS_DT ,ORD_PIDSEQ ,ORM_PLANDT ,COM_ARESEC ,CAR_NO ,PMS_NO ,COM_TONSEC ,DOK_NO ,ORM_PMSYN ,ORM_PMSND ,COM_SCD ,STI_CD ,COM_CTSEC ,COM_RFG ,WMS_YN ,PID_SEQ ,ORD_ITMCOL ,A.SET_QTY ,A.SDT_QTY ,A.BSET_CD ,A.BCOL_CD ,A.MNF_ADT ,A.WH_ADT ,FST_USR ,FST_SYS_DT ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST ) SELECT ? /*new_orm_no*/ ,TOD.ORD_SSEQ ,TOD.ORD_ISEQ ,TOD.SET_CD ,TOD.COL_SCD ,TOD.ITM_CD ,TOD.COL_CD ,TOD.ORD_QTY ,TOD.ORD_CST ,TOD.TAX_AMT ,TOD.STK_CD ,TOD.ORD_PURCD ,TOD.ORD_GOODSEC ,TOD.ORD_UPCD ,TOD.ORD_WHSCD ,TOD.ORD_TWHSCD ,TOD.ORD_CURCD ,TOD.ORD_FCST ,TOD.ORD_QSTAT ,TOD.ORD_RMK ,TOD.ORD_UNFOLDING ,TOD.ORD_ENDYN ,TOD.USR_CD ,GETDATE() ,TOD.ORD_PIDSEQ ,ORM_PLANDT ,TOD.COM_ARESEC ,TOD.CAR_NO ,TOD.PMS_NO ,TOD.COM_TONSEC ,TOD.DOK_NO ,TOD.ORM_PMSYN ,TOD.ORM_PMSND ,TOD.COM_SCD ,TOD.STI_CD ,TOD.COM_CTSEC ,TOD.COM_RFG ,TOD.WMS_YN ,TOD.PID_SEQ ,TOD.ORD_ITMCOL ,TOD.SET_QTY ,TOD.SDT_QTY ,TOD.BSET_CD ,TOD.BCOL_CD ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,FST_USR ,GETDATE() ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST FROM TO_ORDDET TOD WITH (NOLOCK) WHERE TOD.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertNewOrdDetail:143] - ==> Parameters: I20210614224307(String), T01I(String), 20210630(String), T01I(String), T01I(String), 20210630(String), T01I(String), I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDDET (
		  ORM_NO
	      ,ORD_SSEQ
	      ,ORD_ISEQ
	      ,SET_CD
	      ,COL_SCD
	      ,ITM_CD
	      ,COL_CD
	      ,ORD_QTY
	      ,ORD_CST
	      ,TAX_AMT
	      ,STK_CD
	      ,ORD_PURCD
	      ,ORD_GOODSEC
	      ,ORD_UPCD
	      ,ORD_WHSCD
	      ,ORD_TWHSCD
	      ,ORD_CURCD
	      ,ORD_FCST
	      ,ORD_QSTAT
	      ,ORD_RMK
	      ,ORD_UNFOLDING
	      ,ORD_ENDYN
	      ,USR_CD
	      ,SYS_DT
	      ,ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,COM_ARESEC
	      ,CAR_NO
	      ,PMS_NO
	      ,COM_TONSEC
	      ,DOK_NO
	      ,ORM_PMSYN
	      ,ORM_PMSND
	      ,COM_SCD
	      ,STI_CD
	      ,COM_CTSEC
	      ,COM_RFG
	      ,WMS_YN
	      ,PID_SEQ
	      ,ORD_ITMCOL
	      ,A.SET_QTY
          ,A.SDT_QTY
          ,A.BSET_CD
          ,A.BCOL_CD
          ,A.MNF_ADT
          ,A.WH_ADT
		  ,FST_USR       
		  ,FST_SYS_DT
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
 	      )
	SELECT
		  'I20210614224307' /*new_orm_no*/ 
	      ,TOD.ORD_SSEQ
	      ,TOD.ORD_ISEQ
	      ,TOD.SET_CD
	      ,TOD.COL_SCD
	      ,TOD.ITM_CD
	      ,TOD.COL_CD
	      ,TOD.ORD_QTY
	      ,TOD.ORD_CST
	      ,TOD.TAX_AMT
	      ,TOD.STK_CD
	      ,TOD.ORD_PURCD
	      ,TOD.ORD_GOODSEC
	      ,TOD.ORD_UPCD
	      ,TOD.ORD_WHSCD
	      ,TOD.ORD_TWHSCD
	      ,TOD.ORD_CURCD
	      ,TOD.ORD_FCST
	      ,TOD.ORD_QSTAT
	      ,TOD.ORD_RMK
	      ,TOD.ORD_UNFOLDING
	      ,TOD.ORD_ENDYN
	      ,TOD.USR_CD
	      ,GETDATE()
	      ,TOD.ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,TOD.COM_ARESEC
	      ,TOD.CAR_NO
	      ,TOD.PMS_NO
	      ,TOD.COM_TONSEC
	      ,TOD.DOK_NO
	      ,TOD.ORM_PMSYN
	      ,TOD.ORM_PMSND
	      ,TOD.COM_SCD
	      ,TOD.STI_CD
	      ,TOD.COM_CTSEC
	      ,TOD.COM_RFG
	      ,TOD.WMS_YN
	      ,TOD.PID_SEQ
	      ,TOD.ORD_ITMCOL
	      ,TOD.SET_QTY
          ,TOD.SDT_QTY
          ,TOD.BSET_CD
          ,TOD.BCOL_CD
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210630' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) 
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210630' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0)
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
		  ,FST_USR       
		  ,GETDATE()
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
	  FROM TO_ORDDET TOD WITH (NOLOCK)
	 WHERE TOD.ORM_NO = 'I20210614224306' /*key_no*/
 {executed in 184 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertNewOrdDetail:143] - <==    Updates: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [deleteRecdRenD:143] - ==>  Preparing: DELETE FROM TO_RECE_REN WHERE REC_NO = CAST(? /*key_no*/ AS VARCHAR) 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [deleteRecdRenD:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM TO_RECE_REN
     WHERE REC_NO = CAST('I20210614224306' /*key_no*/  AS VARCHAR)
 {executed in 5 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [deleteRecdRenD:143] - <==    Updates: 0
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertRecdRenD:143] - ==>  Preparing: INSERT INTO TO_RECE_REN (REC_NO , ITM_CD ,COL_CD ,REC_QTY ,ORM_RDT ,ORM_RDT_2 ,ORM_RDT_2_YN ,REC_DT_1 ,REC_DT_2 ,COM_CMP ,IOP_FINEST ,COM_GOODCD ,VND_CD ,COM_STKSEC ,COM_STDSEC ,IOP_MNFCST ) SELECT D.ORM_NO ,D.ITM_CD ,D.COL_CD ,SUM(D.ORD_QTY) ,M.ORM_RDT ,NULL ,NULL ,NULL ,NULL ,CAST('T01I' AS VARCHAR) ,C.IOP_FINEST ,C.COM_GOODCD ,C.VND_CD ,S.COM_STKSEC ,S.COM_STDSEC ,C.IOP_MNFCST FROM TO_ORDMAS M WITH (NOLOCK) ,TO_ORDDET D WITH (NOLOCK) ,TT_ITMCOP C WITH (NOLOCK) ,TT_ITMMST S WITH (NOLOCK) WHERE M.ORM_NO = D.ORM_NO AND D.ITM_CD = C.ITM_CD AND D.COL_CD = C.COL_CD AND C.ITM_CD = S.ITM_CD AND C.COL_CD = S.COL_CD AND D.ORM_NO = CAST(? /*key_no*/ AS VARCHAR) AND C.COM_CMP = CAST('T01I' AS VARCHAR) GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertRecdRenD:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT 
	  INTO TO_RECE_REN 
	            (REC_NO
	             , ITM_CD
	             ,COL_CD
	             ,REC_QTY
	             ,ORM_RDT
	             ,ORM_RDT_2
	             ,ORM_RDT_2_YN
	             ,REC_DT_1
	             ,REC_DT_2
                ,COM_CMP
                ,IOP_FINEST
                ,COM_GOODCD
                ,VND_CD
                ,COM_STKSEC
                ,COM_STDSEC
                ,IOP_MNFCST
                )
	SELECT D.ORM_NO 
	           ,D.ITM_CD 
	           ,D.COL_CD 
	           ,SUM(D.ORD_QTY) 
	           ,M.ORM_RDT 
	           ,NULL
	           ,NULL 
	           ,NULL 
	           ,NULL 
			   ,CAST('T01I' AS VARCHAR) 
			   ,C.IOP_FINEST 
			   ,C.COM_GOODCD 
			   ,C.VND_CD 
			   ,S.COM_STKSEC 
			   ,S.COM_STDSEC 
			   ,C.IOP_MNFCST	   
	FROM TO_ORDMAS M WITH (NOLOCK)
	         ,TO_ORDDET D WITH (NOLOCK)
	         ,TT_ITMCOP C WITH (NOLOCK)
	         ,TT_ITMMST S WITH (NOLOCK)
	WHERE M.ORM_NO = D.ORM_NO
	AND D.ITM_CD = C.ITM_CD 
	AND D.COL_CD = C.COL_CD
	AND C.ITM_CD = S.ITM_CD 
	AND C.COL_CD = S.COL_CD
	AND D.ORM_NO = CAST('I20210614224306' /*key_no*/  AS VARCHAR)
	AND C.COM_CMP = CAST('T01I' AS VARCHAR) 
	GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, 
				    C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST
 {executed in 4 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertRecdRenD:143] - <==    Updates: 20
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224306' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 6 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateToOrdChgmasStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() ,EMC_YN = 'N' ,OUT_TYP = ' ' ,MULTI_CHGKND = '' ,NEW_ORMNO = ? /*new_orm_no*/ WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateToOrdChgmasStat:143] - ==> Parameters: I20210614224307(String), I20210614224306(String), 01(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
            ,EMC_YN = 'N'
            ,OUT_TYP = '      ' 
            ,MULTI_CHGKND = ''
            ,NEW_ORMNO = 'I20210614224307' /*new_orm_no*/ 
       WHERE ORM_NO = 'I20210614224306' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 5 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateToOrdChgmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateToOrdmasStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_STAT = 'O08003' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateToOrdmasStat:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS              									
       SET ORM_STAT = 'O08003' 
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224306' /*key_no*/
 {executed in 54 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateToOrdmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectOrmCryn:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224306' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectSigongReserveYn:143] - ==>  Preparing: SELECT ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectSigongReserveYn:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224306' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectSigongReserveYn:143] - <==      Total: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectRemdtRemseq:143] - ==>  Preparing: SELECT TCR.REM_DT AS DATA1, TCR.REM_SEQ AS DATA2, ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ AND TCR.REM_DT = ? /*rem_dt*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectRemdtRemseq:143] - ==> Parameters: I20210614224306(String), 20210629(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TCR.REM_DT AS DATA1,
		TCR.REM_SEQ AS DATA2,
		ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224306' /*key_no*/ 
	   AND TCR.REM_DT = '20210629' /*rem_dt*/
 {executed in 4 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectRemdtRemseq:143] - <==      Total: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectTcMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1 FROM TC_SEQNOINF WHERE COM_AGSEC = ? /*com_agsec*/ AND COM_NOSEC = 'C08CRS' AND SEQ_SETDT = ? /*req_dt*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectTcMaxSeqNo:143] - ==> Parameters: C02I(String), 20210630(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1
		  FROM TC_SEQNOINF 
		 WHERE COM_AGSEC = 'C02I' /*com_agsec*/ 	
		   AND COM_NOSEC = 'C08CRS' 
		   AND SEQ_SETDT = '20210630' /*req_dt*/
 {executed in 7 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectTcMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertTcSeqnoinf:143] - ==>  Preparing: MERGE INTO TC_SEQNOINF SI USING (SELECT ? /*com_agsec*/ AS COM_AGSEC ,? /*req_dt*/ AS SEQ_SETDT) A ON SI.COM_AGSEC = A.COM_AGSEC AND SI.SEQ_SETDT = A.SEQ_SETDT AND SI.COM_NOSEC = 'C08CRS' WHEN MATCHED THEN UPDATE SET SEQ_NO = ? /*max_seq_no*/ WHEN NOT MATCHED THEN INSERT (COM_AGSEC ,COM_NOSEC ,SEQ_SETDT ,SEQ_NO ,USR_CD ,SYS_DT ) VALUES(? /*com_agsec*/ ,'C08CRS' ,? /*req_dt*/ ,? /*max_seq_no*/ ,'CHATBOT' ,GETDATE() ); 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertTcSeqnoinf:143] - ==> Parameters: C02I(String), 20210630(String), 797(Integer), C02I(String), 20210630(String), 797(Integer)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. MERGE INTO TC_SEQNOINF SI
    	 USING (SELECT 'C02I' /*com_agsec*/  AS COM_AGSEC
    	              ,'20210630' /*req_dt*/  AS SEQ_SETDT) A
       		ON SI.COM_AGSEC = A.COM_AGSEC
       	   AND SI.SEQ_SETDT = A.SEQ_SETDT
       	   AND SI.COM_NOSEC = 'C08CRS'
          WHEN MATCHED THEN
            UPDATE 
               SET SEQ_NO = 797 /*max_seq_no*/ 
          WHEN NOT MATCHED THEN
		    INSERT
		      	  (COM_AGSEC
		      	  ,COM_NOSEC
		      	  ,SEQ_SETDT
		      	  ,SEQ_NO
		      	  ,USR_CD
		      	  ,SYS_DT
		          )    
			VALUES('C02I' /*com_agsec*/ 
			      ,'C08CRS'
			      ,'20210630' /*req_dt*/ 
			      ,797 /*max_seq_no*/ 
			      ,'CHATBOT'
			      ,GETDATE()
			      );
 {executed in 4 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertTcSeqnoinf:143] - <==    Updates: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateTcresdtl:143] - ==>  Preparing: UPDATE TC_RESDTL SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateTcresdtl:143] - ==> Parameters: 20210630(String), IC0797(String), 20210629(String), IC0433(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESDTL SET REM_DT = '20210630' /*req_dt*/ , REM_SEQ = 'IC0797' /*new_rem_seq*/ 
	 WHERE REM_DT = '20210629' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0433' /*rem_seq*/
 {executed in 6 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateTcresdtl:143] - <==    Updates: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateTcresmst:143] - ==>  Preparing: UPDATE TC_RESMST SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ , ORM_NO = ? /*new_ormno*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateTcresmst:143] - ==> Parameters: 20210630(String), IC0797(String), I20210614224307(String), 20210629(String), IC0433(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST SET REM_DT = '20210630' /*req_dt*/ , REM_SEQ = 'IC0797' /*new_rem_seq*/ , ORM_NO = 'I20210614224307' /*new_ormno*/ 
	 WHERE REM_DT = '20210629' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0433' /*rem_seq*/
 {executed in 4 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateTcresmst:143] - <==    Updates: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateToOrdmasSigongStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_PSTS = 'E' /* 예약상태 */ ,ORM_CDT = ? /*req_dt*/ /* 확정납기일 */ ,USR_CD = 'CHATBOT' /* 최종변경자 */ ,SYS_DT = GETDATE() /* 최종변경일시 */ ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,? /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990')) END) WHERE ORM_NO = ? /*new_ormno*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateToOrdmasSigongStat:143] - ==> Parameters: 20210630(String), 20210630(String), 20210630(String), I20210614224307(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS
       SET ORM_PSTS = 'E'    /* 예약상태 */		
          ,ORM_CDT  = '20210630' /*req_dt*/      /* 확정납기일 */		
          ,USR_CD   = 'CHATBOT'   /* 최종변경자 */
          ,SYS_DT   = GETDATE()     /* 최종변경일시 */
		  ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL('20210630' /*chg_orm_cdt*/ ,'') != '' THEN
							  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,'20210630' /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990'))
							   END)
     WHERE ORM_NO = 'I20210614224307' /*new_ormno*/
 {executed in 31 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [updateToOrdmasSigongStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectOnlineynCheck:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224306' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224306(String), I20210614224306(String), I20210614224306(String), 챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224306,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224306' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224306' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224306' /*key_no*/ ),
		        '챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224306,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 4 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertApicallHist:143] - ==> Parameters: erp_OrderArrivalDateChange(String), 챗봇 주문 도착일정 변경 Auto 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderArrivalDateChange' /*call_function*/ , '챗봇 주문 도착일정 변경 Auto 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 5 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectChginformData:143] - ==> Parameters: I20210614224306(String)
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224306' /*key_no*/
 {executed in 9 msec}
DEBUG 21-06-23 15:12:13[http-nio-8082-exec-5] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 15:14:32[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 15:14:33[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 15:14:33[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 15:14:33[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 15:15:27[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 21380 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 15:15:27[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 15:15:28[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 15:15:28[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 15:15:28[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:15:28[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 15:15:28[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 15:15:28[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 15:15:28[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 1124 ms
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 15:15:29[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17410c07, org.springframework.security.web.context.SecurityContextPersistenceFilter@5626d18c, org.springframework.security.web.header.HeaderWriterFilter@7cca01a8, org.springframework.security.web.authentication.logout.LogoutFilter@5634a861, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@40a72ecd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3dc95b8b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@49d30c6f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6ee99964, org.springframework.security.web.session.SessionManagementFilter@35c9a231, org.springframework.security.web.access.ExceptionTranslationFilter@7ff19c33, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6b63e6ad]
INFO  21-06-23 15:15:29[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 15:15:29[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 15:15:29[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 15:15:29[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:15:29[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 15:15:29[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 15:15:29[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 15:15:30[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 15:15:30[main] [ChatBotApplication:61] - Started ChatBotApplication in 2.767 seconds (JVM running for 4.298)
INFO  21-06-23 15:15:38[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 15:15:38[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 15:15:38[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 5 ms
INFO  21-06-23 15:16:10[http-nio-8082-exec-1] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 15:16:13[http-nio-8082-exec-1] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectSigongYn:143] - ==>  Preparing: SELECT ISNULL(ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectSigongYn:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(ORM_CRYN, 'N') AS DATA1,
		   TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224307' /*key_no*/
 {executed in 25 msec}
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectSigongYn:143] - <==      Total: 1
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectSchDivYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectSchDivYn:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224307' /*key_no*/
 {executed in 42 msec}
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectSchDivYn:143] - <==      Total: 1
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224307' /*key_no*/
 {executed in 16 msec}
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - <==      Total: 1
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectChgstatusYn:143] - ==>  Preparing: SELECT ( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = ? /*key_no*/ AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' ) 
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectChgstatusYn:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TO_CHGMAS TOC WITH (NOLOCK)
	 WHERE TOC.ORM_NO = 'I20210614224307' /*key_no*/ 
	   AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' )
 {executed in 27 msec}
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [selectChgstatusYn:143] - <==      Total: 1
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45002', NULL, 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, ? /*req_dt*/ , TOO.ORM_NM, NULL, TOO.ORM_GPOST, NULL, TOO.ORM_GADDR, NULL, NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, NULL, TOO.BDONG, NULL FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - ==> Parameters: 20210629(String), I20210614224307(String)
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45002',
		NULL,
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'20210629' /*req_dt*/ ,
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL,
		TOO.ORM_GADDR,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		NULL,
		TOO.BDONG,
		NULL
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224307' /*key_no*/
 {executed in 208 msec}
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeDtRequest(String), 챗봇 주문 도착일정 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeDtRequest' /*call_function*/ , '챗봇 주문 도착일정 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 28 msec}
DEBUG 21-06-23 15:16:13[http-nio-8082-exec-1] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [executeProGetNo:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', 'I20210614224307' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 4 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectToChgmasChgdt:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224307' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 6 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectToChgmasChgdt:143] - <==      Total: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertNewOrdMaster:143] - ==>  Preparing: INSERT INTO TO_ORDMAS ( ORM_NO ,ORM_NM ,COM_ORD ,ORM_SSEC ,VND_CD ,AGT_CD ,CMP_CD ,ORM_ORDDT ,ORM_STAT ,ORM_RDT ,ORM_ADT ,ORM_CDT ,ORM_AGTCST ,ORM_PURCST ,ORM_VISIT ,ORM_PURRSN ,ORM_GGUBUN ,ORM_GOOD ,ORM_GPOST ,ORM_GADDR ,ORM_GEMP ,DET_CD ,ORM_GEMPHP ,ORM_HDPHONE ,ORM_GSPC ,ORM_DOWNST ,ORM_GRTTON ,ORM_DOWNNM ,ORM_DPOST ,ORM_DADDR ,ORM_CONSP ,ORM_SALEMP ,ORM_AGTEMP ,PRJ_CD ,ORM_REBAGT ,ORM_CMPCD ,ORM_SPC ,ORM_PART ,EPI_PINO ,ORM_CRYN ,ORM_CSTYN ,ORM_CSTRATE ,ORM_COMRATE ,USR_CD ,SYS_DT ,ORM_WMSSEC ,WMS_YN ,PLM_PTM ,PLM_EVT ,PLM_ITR ,FRM_NO ,ORM_PSTS ,ADDR_DTL ,BDONG ,ORM_ATTR ,DLV_KIND ,PLM_MERG_NO ,COM_BRD ,LDDR_YN ,CNT_CDT ,CNT_ATTR ,SHP_NO ,FST_USR ,FST_SYS_DT ,PAY_DUE_DT ,APT_SEQ ,PROMO_SERIAL ,LDDR_FREE ,ADDR_GUBUN ) SELECT ? /*new_orm_no*/ ,TOO.ORM_NM ,TOO.COM_ORD ,TOO.ORM_SSEC ,TOO.VND_CD ,TOO.AGT_CD ,TOO.CMP_CD ,TOO.ORM_ORDDT ,TOO.ORM_STAT ,TOO.ORM_RDT ,TOO.ORM_ADT ,? /*chg_orm_cdt*/ ,TOO.ORM_AGTCST ,TOO.ORM_PURCST ,TOO.ORM_VISIT ,TOO.ORM_PURRSN ,TOO.ORM_GGUBUN ,TOO.ORM_GOOD ,TOO.ORM_GPOST ,TOO.ORM_GADDR ,TOO.ORM_GEMP ,TOO.DET_CD ,TOO.ORM_GEMPHP ,TOO.ORM_HDPHONE ,TOO.ORM_GSPC ,TOO.ORM_DOWNST ,TOO.ORM_GRTTON ,TOO.ORM_DOWNNM ,TOO.ORM_DPOST ,TOO.ORM_DADDR ,TOO.ORM_CONSP ,TOO.ORM_SALEMP ,TOO.ORM_AGTEMP ,TOO.PRJ_CD ,TOO.ORM_REBAGT ,TOO.ORM_CMPCD ,TOO.ORM_SPC ,TOO.ORM_PART ,TOO.EPI_PINO ,TOO.ORM_CRYN ,TOO.ORM_CSTYN ,TOO.ORM_CSTRATE ,TOO.ORM_COMRATE ,TOO.USR_CD ,GETDATE() ,TOO.ORM_WMSSEC ,TOO.WMS_YN ,TOO.PLM_PTM ,TOO.PLM_EVT ,TOO.PLM_ITR ,TOO.FRM_NO ,TOO.ORM_PSTS ,TOO.ADDR_DTL ,TOO.BDONG ,TOO.ORM_ATTR ,TOO.DLV_KIND ,TOO.PLM_MERG_NO ,TOO.COM_BRD ,TOO.LDDR_YN ,TOO.CNT_CDT ,TOO.CNT_ATTR ,TOO.SHP_NO ,TOO.FST_USR ,GETDATE() ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I',? /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990')) END) ,TOO.APT_SEQ ,TOO.PROMO_SERIAL ,TOO.LDDR_FREE ,TOO.ADDR_GUBUN FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertNewOrdMaster:143] - ==> Parameters: I20210614224308(String), 20210629(String), 20210629(String), 20210629(String), I20210614224307(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDMAS (
		  ORM_NO               
          ,ORM_NM
          ,COM_ORD
          ,ORM_SSEC
          ,VND_CD
          ,AGT_CD
          ,CMP_CD
          ,ORM_ORDDT   
          ,ORM_STAT                
          ,ORM_RDT
          ,ORM_ADT
          ,ORM_CDT             
          ,ORM_AGTCST
          ,ORM_PURCST
          ,ORM_VISIT   
          ,ORM_PURRSN
          ,ORM_GGUBUN
          ,ORM_GOOD
          ,ORM_GPOST
          ,ORM_GADDR
          ,ORM_GEMP
          ,DET_CD   
          ,ORM_GEMPHP
          ,ORM_HDPHONE
          ,ORM_GSPC
          ,ORM_DOWNST
          ,ORM_GRTTON
          ,ORM_DOWNNM
          ,ORM_DPOST   
          ,ORM_DADDR
          ,ORM_CONSP
          ,ORM_SALEMP
          ,ORM_AGTEMP
          ,PRJ_CD
          ,ORM_REBAGT
          ,ORM_CMPCD   
          ,ORM_SPC
          ,ORM_PART
          ,EPI_PINO
          ,ORM_CRYN
          ,ORM_CSTYN
          ,ORM_CSTRATE
          ,ORM_COMRATE
          ,USR_CD
          ,SYS_DT
          ,ORM_WMSSEC
          ,WMS_YN
          ,PLM_PTM
          ,PLM_EVT
          ,PLM_ITR
          ,FRM_NO
          ,ORM_PSTS
  		  ,ADDR_DTL
  		  ,BDONG
  		  ,ORM_ATTR
  		  ,DLV_KIND
  		  ,PLM_MERG_NO
  		  ,COM_BRD
  		  ,LDDR_YN
  		  ,CNT_CDT
  		  ,CNT_ATTR 
  		  ,SHP_NO 
  		 ,FST_USR       
		 ,FST_SYS_DT 
		 ,PAY_DUE_DT
		 ,APT_SEQ
		 ,PROMO_SERIAL
		 ,LDDR_FREE
		 ,ADDR_GUBUN
 	      )
	SELECT
		  'I20210614224308' /*new_orm_no*/            
          ,TOO.ORM_NM
          ,TOO.COM_ORD
          ,TOO.ORM_SSEC
          ,TOO.VND_CD
          ,TOO.AGT_CD
          ,TOO.CMP_CD
          ,TOO.ORM_ORDDT   
          ,TOO.ORM_STAT                
          ,TOO.ORM_RDT
          ,TOO.ORM_ADT
          ,'20210629' /*chg_orm_cdt*/          
          ,TOO.ORM_AGTCST
          ,TOO.ORM_PURCST
          ,TOO.ORM_VISIT   
          ,TOO.ORM_PURRSN
          ,TOO.ORM_GGUBUN
          ,TOO.ORM_GOOD
          ,TOO.ORM_GPOST
          ,TOO.ORM_GADDR
          ,TOO.ORM_GEMP
          ,TOO.DET_CD   
          ,TOO.ORM_GEMPHP
          ,TOO.ORM_HDPHONE
          ,TOO.ORM_GSPC
          ,TOO.ORM_DOWNST
          ,TOO.ORM_GRTTON
          ,TOO.ORM_DOWNNM
          ,TOO.ORM_DPOST   
          ,TOO.ORM_DADDR
          ,TOO.ORM_CONSP
          ,TOO.ORM_SALEMP
          ,TOO.ORM_AGTEMP
          ,TOO.PRJ_CD
          ,TOO.ORM_REBAGT
          ,TOO.ORM_CMPCD   
          ,TOO.ORM_SPC
          ,TOO.ORM_PART
          ,TOO.EPI_PINO
          ,TOO.ORM_CRYN
          ,TOO.ORM_CSTYN
          ,TOO.ORM_CSTRATE
          ,TOO.ORM_COMRATE
          ,TOO.USR_CD
          ,GETDATE()
          ,TOO.ORM_WMSSEC
          ,TOO.WMS_YN
          ,TOO.PLM_PTM
          ,TOO.PLM_EVT
          ,TOO.PLM_ITR
          ,TOO.FRM_NO
          ,TOO.ORM_PSTS
  		  ,TOO.ADDR_DTL
  		  ,TOO.BDONG
  		  ,TOO.ORM_ATTR
  		  ,TOO.DLV_KIND
  		  ,TOO.PLM_MERG_NO
  		  ,TOO.COM_BRD
  		  ,TOO.LDDR_YN
  		  ,TOO.CNT_CDT
  		  ,TOO.CNT_ATTR 
  		  ,TOO.SHP_NO 
  		  ,TOO.FST_USR       
		  ,GETDATE() 
		  ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL('20210629' /*chg_orm_cdt*/ ,'') != '' THEN 
		  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I','20210629' /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990'))   
		   END)
		  ,TOO.APT_SEQ
		  ,TOO.PROMO_SERIAL
		  ,TOO.LDDR_FREE
		  ,TOO.ADDR_GUBUN	
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224307' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertNewOrdMaster:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertNewOrdDetail:143] - ==>  Preparing: INSERT INTO TO_ORDDET ( ORM_NO ,ORD_SSEQ ,ORD_ISEQ ,SET_CD ,COL_SCD ,ITM_CD ,COL_CD ,ORD_QTY ,ORD_CST ,TAX_AMT ,STK_CD ,ORD_PURCD ,ORD_GOODSEC ,ORD_UPCD ,ORD_WHSCD ,ORD_TWHSCD ,ORD_CURCD ,ORD_FCST ,ORD_QSTAT ,ORD_RMK ,ORD_UNFOLDING ,ORD_ENDYN ,USR_CD ,SYS_DT ,ORD_PIDSEQ ,ORM_PLANDT ,COM_ARESEC ,CAR_NO ,PMS_NO ,COM_TONSEC ,DOK_NO ,ORM_PMSYN ,ORM_PMSND ,COM_SCD ,STI_CD ,COM_CTSEC ,COM_RFG ,WMS_YN ,PID_SEQ ,ORD_ITMCOL ,A.SET_QTY ,A.SDT_QTY ,A.BSET_CD ,A.BCOL_CD ,A.MNF_ADT ,A.WH_ADT ,FST_USR ,FST_SYS_DT ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST ) SELECT ? /*new_orm_no*/ ,TOD.ORD_SSEQ ,TOD.ORD_ISEQ ,TOD.SET_CD ,TOD.COL_SCD ,TOD.ITM_CD ,TOD.COL_CD ,TOD.ORD_QTY ,TOD.ORD_CST ,TOD.TAX_AMT ,TOD.STK_CD ,TOD.ORD_PURCD ,TOD.ORD_GOODSEC ,TOD.ORD_UPCD ,TOD.ORD_WHSCD ,TOD.ORD_TWHSCD ,TOD.ORD_CURCD ,TOD.ORD_FCST ,TOD.ORD_QSTAT ,TOD.ORD_RMK ,TOD.ORD_UNFOLDING ,TOD.ORD_ENDYN ,TOD.USR_CD ,GETDATE() ,TOD.ORD_PIDSEQ ,ORM_PLANDT ,TOD.COM_ARESEC ,TOD.CAR_NO ,TOD.PMS_NO ,TOD.COM_TONSEC ,TOD.DOK_NO ,TOD.ORM_PMSYN ,TOD.ORM_PMSND ,TOD.COM_SCD ,TOD.STI_CD ,TOD.COM_CTSEC ,TOD.COM_RFG ,TOD.WMS_YN ,TOD.PID_SEQ ,TOD.ORD_ITMCOL ,TOD.SET_QTY ,TOD.SDT_QTY ,TOD.BSET_CD ,TOD.BCOL_CD ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,FST_USR ,GETDATE() ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST FROM TO_ORDDET TOD WITH (NOLOCK) WHERE TOD.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertNewOrdDetail:143] - ==> Parameters: I20210614224308(String), T01I(String), 20210629(String), T01I(String), T01I(String), 20210629(String), T01I(String), I20210614224307(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDDET (
		  ORM_NO
	      ,ORD_SSEQ
	      ,ORD_ISEQ
	      ,SET_CD
	      ,COL_SCD
	      ,ITM_CD
	      ,COL_CD
	      ,ORD_QTY
	      ,ORD_CST
	      ,TAX_AMT
	      ,STK_CD
	      ,ORD_PURCD
	      ,ORD_GOODSEC
	      ,ORD_UPCD
	      ,ORD_WHSCD
	      ,ORD_TWHSCD
	      ,ORD_CURCD
	      ,ORD_FCST
	      ,ORD_QSTAT
	      ,ORD_RMK
	      ,ORD_UNFOLDING
	      ,ORD_ENDYN
	      ,USR_CD
	      ,SYS_DT
	      ,ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,COM_ARESEC
	      ,CAR_NO
	      ,PMS_NO
	      ,COM_TONSEC
	      ,DOK_NO
	      ,ORM_PMSYN
	      ,ORM_PMSND
	      ,COM_SCD
	      ,STI_CD
	      ,COM_CTSEC
	      ,COM_RFG
	      ,WMS_YN
	      ,PID_SEQ
	      ,ORD_ITMCOL
	      ,A.SET_QTY
          ,A.SDT_QTY
          ,A.BSET_CD
          ,A.BCOL_CD
          ,A.MNF_ADT
          ,A.WH_ADT
		  ,FST_USR       
		  ,FST_SYS_DT
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
 	      )
	SELECT
		  'I20210614224308' /*new_orm_no*/ 
	      ,TOD.ORD_SSEQ
	      ,TOD.ORD_ISEQ
	      ,TOD.SET_CD
	      ,TOD.COL_SCD
	      ,TOD.ITM_CD
	      ,TOD.COL_CD
	      ,TOD.ORD_QTY
	      ,TOD.ORD_CST
	      ,TOD.TAX_AMT
	      ,TOD.STK_CD
	      ,TOD.ORD_PURCD
	      ,TOD.ORD_GOODSEC
	      ,TOD.ORD_UPCD
	      ,TOD.ORD_WHSCD
	      ,TOD.ORD_TWHSCD
	      ,TOD.ORD_CURCD
	      ,TOD.ORD_FCST
	      ,TOD.ORD_QSTAT
	      ,TOD.ORD_RMK
	      ,TOD.ORD_UNFOLDING
	      ,TOD.ORD_ENDYN
	      ,TOD.USR_CD
	      ,GETDATE()
	      ,TOD.ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,TOD.COM_ARESEC
	      ,TOD.CAR_NO
	      ,TOD.PMS_NO
	      ,TOD.COM_TONSEC
	      ,TOD.DOK_NO
	      ,TOD.ORM_PMSYN
	      ,TOD.ORM_PMSND
	      ,TOD.COM_SCD
	      ,TOD.STI_CD
	      ,TOD.COM_CTSEC
	      ,TOD.COM_RFG
	      ,TOD.WMS_YN
	      ,TOD.PID_SEQ
	      ,TOD.ORD_ITMCOL
	      ,TOD.SET_QTY
          ,TOD.SDT_QTY
          ,TOD.BSET_CD
          ,TOD.BCOL_CD
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210629' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) 
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210629' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0)
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
		  ,FST_USR       
		  ,GETDATE()
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
	  FROM TO_ORDDET TOD WITH (NOLOCK)
	 WHERE TOD.ORM_NO = 'I20210614224307' /*key_no*/
 {executed in 153 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertNewOrdDetail:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [deleteRecdRenD:143] - ==>  Preparing: DELETE FROM TO_RECE_REN WHERE REC_NO = CAST(? /*key_no*/ AS VARCHAR) 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [deleteRecdRenD:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM TO_RECE_REN
     WHERE REC_NO = CAST('I20210614224307' /*key_no*/  AS VARCHAR)
 {executed in 6 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [deleteRecdRenD:143] - <==    Updates: 0
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertRecdRenD:143] - ==>  Preparing: INSERT INTO TO_RECE_REN (REC_NO , ITM_CD ,COL_CD ,REC_QTY ,ORM_RDT ,ORM_RDT_2 ,ORM_RDT_2_YN ,REC_DT_1 ,REC_DT_2 ,COM_CMP ,IOP_FINEST ,COM_GOODCD ,VND_CD ,COM_STKSEC ,COM_STDSEC ,IOP_MNFCST ) SELECT D.ORM_NO ,D.ITM_CD ,D.COL_CD ,SUM(D.ORD_QTY) ,M.ORM_RDT ,NULL ,NULL ,NULL ,NULL ,CAST('T01I' AS VARCHAR) ,C.IOP_FINEST ,C.COM_GOODCD ,C.VND_CD ,S.COM_STKSEC ,S.COM_STDSEC ,C.IOP_MNFCST FROM TO_ORDMAS M WITH (NOLOCK) ,TO_ORDDET D WITH (NOLOCK) ,TT_ITMCOP C WITH (NOLOCK) ,TT_ITMMST S WITH (NOLOCK) WHERE M.ORM_NO = D.ORM_NO AND D.ITM_CD = C.ITM_CD AND D.COL_CD = C.COL_CD AND C.ITM_CD = S.ITM_CD AND C.COL_CD = S.COL_CD AND D.ORM_NO = CAST(? /*key_no*/ AS VARCHAR) AND C.COM_CMP = CAST('T01I' AS VARCHAR) GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertRecdRenD:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT 
	  INTO TO_RECE_REN 
	            (REC_NO
	             , ITM_CD
	             ,COL_CD
	             ,REC_QTY
	             ,ORM_RDT
	             ,ORM_RDT_2
	             ,ORM_RDT_2_YN
	             ,REC_DT_1
	             ,REC_DT_2
                ,COM_CMP
                ,IOP_FINEST
                ,COM_GOODCD
                ,VND_CD
                ,COM_STKSEC
                ,COM_STDSEC
                ,IOP_MNFCST
                )
	SELECT D.ORM_NO 
	           ,D.ITM_CD 
	           ,D.COL_CD 
	           ,SUM(D.ORD_QTY) 
	           ,M.ORM_RDT 
	           ,NULL
	           ,NULL 
	           ,NULL 
	           ,NULL 
			   ,CAST('T01I' AS VARCHAR) 
			   ,C.IOP_FINEST 
			   ,C.COM_GOODCD 
			   ,C.VND_CD 
			   ,S.COM_STKSEC 
			   ,S.COM_STDSEC 
			   ,C.IOP_MNFCST	   
	FROM TO_ORDMAS M WITH (NOLOCK)
	         ,TO_ORDDET D WITH (NOLOCK)
	         ,TT_ITMCOP C WITH (NOLOCK)
	         ,TT_ITMMST S WITH (NOLOCK)
	WHERE M.ORM_NO = D.ORM_NO
	AND D.ITM_CD = C.ITM_CD 
	AND D.COL_CD = C.COL_CD
	AND C.ITM_CD = S.ITM_CD 
	AND C.COL_CD = S.COL_CD
	AND D.ORM_NO = CAST('I20210614224307' /*key_no*/  AS VARCHAR)
	AND C.COM_CMP = CAST('T01I' AS VARCHAR) 
	GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, 
				    C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST
 {executed in 7 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertRecdRenD:143] - <==    Updates: 20
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224307' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 4 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateToOrdChgmasStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() ,EMC_YN = 'N' ,OUT_TYP = ' ' ,MULTI_CHGKND = '' ,NEW_ORMNO = ? /*new_orm_no*/ WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateToOrdChgmasStat:143] - ==> Parameters: I20210614224308(String), I20210614224307(String), 01(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
            ,EMC_YN = 'N'
            ,OUT_TYP = '      ' 
            ,MULTI_CHGKND = ''
            ,NEW_ORMNO = 'I20210614224308' /*new_orm_no*/ 
       WHERE ORM_NO = 'I20210614224307' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 5 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateToOrdChgmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateToOrdmasStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_STAT = 'O08003' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateToOrdmasStat:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS              									
       SET ORM_STAT = 'O08003' 
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224307' /*key_no*/
 {executed in 41 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateToOrdmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectOrmCryn:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224307' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectSigongReserveYn:143] - ==>  Preparing: SELECT ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectSigongReserveYn:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224307' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectSigongReserveYn:143] - <==      Total: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectRemdtRemseq:143] - ==>  Preparing: SELECT TCR.REM_DT AS DATA1, TCR.REM_SEQ AS DATA2, ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ AND TCR.REM_DT = ? /*rem_dt*/ 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectRemdtRemseq:143] - ==> Parameters: I20210614224307(String), 20210630(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TCR.REM_DT AS DATA1,
		TCR.REM_SEQ AS DATA2,
		ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224307' /*key_no*/ 
	   AND TCR.REM_DT = '20210630' /*rem_dt*/
 {executed in 3 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectRemdtRemseq:143] - <==      Total: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectTcMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1 FROM TC_SEQNOINF WHERE COM_AGSEC = ? /*com_agsec*/ AND COM_NOSEC = 'C08CRS' AND SEQ_SETDT = ? /*req_dt*/ 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectTcMaxSeqNo:143] - ==> Parameters: C02I(String), 20210629(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1
		  FROM TC_SEQNOINF 
		 WHERE COM_AGSEC = 'C02I' /*com_agsec*/ 	
		   AND COM_NOSEC = 'C08CRS' 
		   AND SEQ_SETDT = '20210629' /*req_dt*/
 {executed in 5 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [selectTcMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertTcSeqnoinf:143] - ==>  Preparing: MERGE INTO TC_SEQNOINF SI USING (SELECT ? /*com_agsec*/ AS COM_AGSEC ,? /*req_dt*/ AS SEQ_SETDT) A ON SI.COM_AGSEC = A.COM_AGSEC AND SI.SEQ_SETDT = A.SEQ_SETDT AND SI.COM_NOSEC = 'C08CRS' WHEN MATCHED THEN UPDATE SET SEQ_NO = ? /*max_seq_no*/ WHEN NOT MATCHED THEN INSERT (COM_AGSEC ,COM_NOSEC ,SEQ_SETDT ,SEQ_NO ,USR_CD ,SYS_DT ) VALUES(? /*com_agsec*/ ,'C08CRS' ,? /*req_dt*/ ,? /*max_seq_no*/ ,'CHATBOT' ,GETDATE() ); 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertTcSeqnoinf:143] - ==> Parameters: C02I(String), 20210629(String), 434(Integer), C02I(String), 20210629(String), 434(Integer)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. MERGE INTO TC_SEQNOINF SI
    	 USING (SELECT 'C02I' /*com_agsec*/  AS COM_AGSEC
    	              ,'20210629' /*req_dt*/  AS SEQ_SETDT) A
       		ON SI.COM_AGSEC = A.COM_AGSEC
       	   AND SI.SEQ_SETDT = A.SEQ_SETDT
       	   AND SI.COM_NOSEC = 'C08CRS'
          WHEN MATCHED THEN
            UPDATE 
               SET SEQ_NO = 434 /*max_seq_no*/ 
          WHEN NOT MATCHED THEN
		    INSERT
		      	  (COM_AGSEC
		      	  ,COM_NOSEC
		      	  ,SEQ_SETDT
		      	  ,SEQ_NO
		      	  ,USR_CD
		      	  ,SYS_DT
		          )    
			VALUES('C02I' /*com_agsec*/ 
			      ,'C08CRS'
			      ,'20210629' /*req_dt*/ 
			      ,434 /*max_seq_no*/ 
			      ,'CHATBOT'
			      ,GETDATE()
			      );
 {executed in 5 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [insertTcSeqnoinf:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateTcresdtl:143] - ==>  Preparing: UPDATE TC_RESDTL SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateTcresdtl:143] - ==> Parameters: 20210629(String), IC0434(String), 20210630(String), IC0797(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESDTL SET REM_DT = '20210629' /*req_dt*/ , REM_SEQ = 'IC0434' /*new_rem_seq*/ 
	 WHERE REM_DT = '20210630' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0797' /*rem_seq*/
 {executed in 6 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateTcresdtl:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateTcresmst:143] - ==>  Preparing: UPDATE TC_RESMST SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ , ORM_NO = ? /*new_ormno*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateTcresmst:143] - ==> Parameters: 20210629(String), IC0434(String), I20210614224308(String), 20210630(String), IC0797(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST SET REM_DT = '20210629' /*req_dt*/ , REM_SEQ = 'IC0434' /*new_rem_seq*/ , ORM_NO = 'I20210614224308' /*new_ormno*/ 
	 WHERE REM_DT = '20210630' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0797' /*rem_seq*/
 {executed in 7 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateTcresmst:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateToOrdmasSigongStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_PSTS = 'E' /* 예약상태 */ ,ORM_CDT = ? /*req_dt*/ /* 확정납기일 */ ,USR_CD = 'CHATBOT' /* 최종변경자 */ ,SYS_DT = GETDATE() /* 최종변경일시 */ ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,? /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990')) END) WHERE ORM_NO = ? /*new_ormno*/ 
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateToOrdmasSigongStat:143] - ==> Parameters: 20210629(String), 20210629(String), 20210629(String), I20210614224308(String)
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS
       SET ORM_PSTS = 'E'    /* 예약상태 */		
          ,ORM_CDT  = '20210629' /*req_dt*/      /* 확정납기일 */		
          ,USR_CD   = 'CHATBOT'   /* 최종변경자 */
          ,SYS_DT   = GETDATE()     /* 최종변경일시 */
		  ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL('20210629' /*chg_orm_cdt*/ ,'') != '' THEN
							  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,'20210629' /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990'))
							   END)
     WHERE ORM_NO = 'I20210614224308' /*new_ormno*/
 {executed in 30 msec}
DEBUG 21-06-23 15:16:41[http-nio-8082-exec-2] [updateToOrdmasSigongStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [selectOnlineynCheck:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224307' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224307(String), I20210614224307(String), I20210614224307(String), 챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224307,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224307' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224307' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224307' /*key_no*/ ),
		        '챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224307,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 5 msec}
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [insertApicallHist:143] - ==> Parameters: erp_OrderArrivalDateChange(String), 챗봇 주문 도착일정 변경 Auto 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderArrivalDateChange' /*call_function*/ , '챗봇 주문 도착일정 변경 Auto 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 5 msec}
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [selectChginformData:143] - ==> Parameters: I20210614224307(String)
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224307' /*key_no*/
 {executed in 10 msec}
DEBUG 21-06-23 15:16:42[http-nio-8082-exec-2] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 15:18:48[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 15:18:49[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 15:18:49[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 15:18:49[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 15:18:54[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 31140 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 15:18:54[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 15:18:55[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 15:18:55[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 15:18:55[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:18:55[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 15:18:55[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 15:18:55[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 15:18:55[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 1119 ms
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 15:18:56[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64f981e2, org.springframework.security.web.context.SecurityContextPersistenceFilter@45f756e6, org.springframework.security.web.header.HeaderWriterFilter@45e9b12d, org.springframework.security.web.authentication.logout.LogoutFilter@75e09567, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@257ef9ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3003827c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3bed3315, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@361abd01, org.springframework.security.web.session.SessionManagementFilter@2d55e826, org.springframework.security.web.access.ExceptionTranslationFilter@7a4d582c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@ae73c80]
INFO  21-06-23 15:18:56[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 15:18:56[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 15:18:56[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 15:18:56[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:18:56[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 15:18:56[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 15:18:56[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 15:18:56[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 15:18:57[main] [ChatBotApplication:61] - Started ChatBotApplication in 2.571 seconds (JVM running for 3.996)
INFO  21-06-23 15:19:02[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 15:19:02[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 15:19:02[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 5 ms
INFO  21-06-23 15:19:29[http-nio-8082-exec-1] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 15:19:30[http-nio-8082-exec-1] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectSigongYn:143] - ==>  Preparing: SELECT ISNULL(ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectSigongYn:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(ORM_CRYN, 'N') AS DATA1,
		   TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224308' /*key_no*/
 {executed in 13 msec}
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectSigongYn:143] - <==      Total: 1
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectSchDivYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectSchDivYn:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224308' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectSchDivYn:143] - <==      Total: 1
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224308' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectSigongConfirmYn:143] - <==      Total: 1
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectChgstatusYn:143] - ==>  Preparing: SELECT ( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = ? /*key_no*/ AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' ) 
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectChgstatusYn:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TO_CHGMAS TOC WITH (NOLOCK)
	 WHERE TOC.ORM_NO = 'I20210614224308' /*key_no*/ 
	   AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' )
 {executed in 7 msec}
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [selectChgstatusYn:143] - <==      Total: 1
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45002', NULL, 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, ? /*req_dt*/ , TOO.ORM_NM, NULL, TOO.ORM_GPOST, NULL, TOO.ORM_GADDR, NULL, NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, NULL, TOO.BDONG, NULL FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - ==> Parameters: 20210628(String), I20210614224308(String)
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45002',
		NULL,
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'20210628' /*req_dt*/ ,
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL,
		TOO.ORM_GADDR,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		NULL,
		TOO.BDONG,
		NULL
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224308' /*key_no*/
 {executed in 6 msec}
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [insertOrmCdtChangeReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeDtRequest(String), 챗봇 주문 도착일정 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeDtRequest' /*call_function*/ , '챗봇 주문 도착일정 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 6 msec}
DEBUG 21-06-23 15:19:31[http-nio-8082-exec-1] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:57[http-nio-8082-exec-3] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 15:19:57[http-nio-8082-exec-3] [executeProGetNo:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', 'I20210614224308' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 4 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectToChgmasChgdt:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224308' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 5 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectToChgmasChgdt:143] - <==      Total: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertNewOrdMaster:143] - ==>  Preparing: INSERT INTO TO_ORDMAS ( ORM_NO ,ORM_NM ,COM_ORD ,ORM_SSEC ,VND_CD ,AGT_CD ,CMP_CD ,ORM_ORDDT ,ORM_STAT ,ORM_RDT ,ORM_ADT ,ORM_CDT ,ORM_AGTCST ,ORM_PURCST ,ORM_VISIT ,ORM_PURRSN ,ORM_GGUBUN ,ORM_GOOD ,ORM_GPOST ,ORM_GADDR ,ORM_GEMP ,DET_CD ,ORM_GEMPHP ,ORM_HDPHONE ,ORM_GSPC ,ORM_DOWNST ,ORM_GRTTON ,ORM_DOWNNM ,ORM_DPOST ,ORM_DADDR ,ORM_CONSP ,ORM_SALEMP ,ORM_AGTEMP ,PRJ_CD ,ORM_REBAGT ,ORM_CMPCD ,ORM_SPC ,ORM_PART ,EPI_PINO ,ORM_CRYN ,ORM_CSTYN ,ORM_CSTRATE ,ORM_COMRATE ,USR_CD ,SYS_DT ,ORM_WMSSEC ,WMS_YN ,PLM_PTM ,PLM_EVT ,PLM_ITR ,FRM_NO ,ORM_PSTS ,ADDR_DTL ,BDONG ,ORM_ATTR ,DLV_KIND ,PLM_MERG_NO ,COM_BRD ,LDDR_YN ,CNT_CDT ,CNT_ATTR ,SHP_NO ,FST_USR ,FST_SYS_DT ,PAY_DUE_DT ,APT_SEQ ,PROMO_SERIAL ,LDDR_FREE ,ADDR_GUBUN ) SELECT ? /*new_orm_no*/ ,TOO.ORM_NM ,TOO.COM_ORD ,TOO.ORM_SSEC ,TOO.VND_CD ,TOO.AGT_CD ,TOO.CMP_CD ,TOO.ORM_ORDDT ,TOO.ORM_STAT ,TOO.ORM_RDT ,TOO.ORM_ADT ,? /*chg_orm_cdt*/ ,TOO.ORM_AGTCST ,TOO.ORM_PURCST ,TOO.ORM_VISIT ,TOO.ORM_PURRSN ,TOO.ORM_GGUBUN ,TOO.ORM_GOOD ,TOO.ORM_GPOST ,TOO.ORM_GADDR ,TOO.ORM_GEMP ,TOO.DET_CD ,TOO.ORM_GEMPHP ,TOO.ORM_HDPHONE ,TOO.ORM_GSPC ,TOO.ORM_DOWNST ,TOO.ORM_GRTTON ,TOO.ORM_DOWNNM ,TOO.ORM_DPOST ,TOO.ORM_DADDR ,TOO.ORM_CONSP ,TOO.ORM_SALEMP ,TOO.ORM_AGTEMP ,TOO.PRJ_CD ,TOO.ORM_REBAGT ,TOO.ORM_CMPCD ,TOO.ORM_SPC ,TOO.ORM_PART ,TOO.EPI_PINO ,TOO.ORM_CRYN ,TOO.ORM_CSTYN ,TOO.ORM_CSTRATE ,TOO.ORM_COMRATE ,TOO.USR_CD ,GETDATE() ,TOO.ORM_WMSSEC ,TOO.WMS_YN ,TOO.PLM_PTM ,TOO.PLM_EVT ,TOO.PLM_ITR ,TOO.FRM_NO ,TOO.ORM_PSTS ,TOO.ADDR_DTL ,TOO.BDONG ,TOO.ORM_ATTR ,TOO.DLV_KIND ,TOO.PLM_MERG_NO ,TOO.COM_BRD ,TOO.LDDR_YN ,TOO.CNT_CDT ,TOO.CNT_ATTR ,TOO.SHP_NO ,TOO.FST_USR ,GETDATE() ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I',? /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990')) END) ,TOO.APT_SEQ ,TOO.PROMO_SERIAL ,TOO.LDDR_FREE ,TOO.ADDR_GUBUN FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertNewOrdMaster:143] - ==> Parameters: I20210614224309(String), 20210628(String), 20210628(String), 20210628(String), I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDMAS (
		  ORM_NO               
          ,ORM_NM
          ,COM_ORD
          ,ORM_SSEC
          ,VND_CD
          ,AGT_CD
          ,CMP_CD
          ,ORM_ORDDT   
          ,ORM_STAT                
          ,ORM_RDT
          ,ORM_ADT
          ,ORM_CDT             
          ,ORM_AGTCST
          ,ORM_PURCST
          ,ORM_VISIT   
          ,ORM_PURRSN
          ,ORM_GGUBUN
          ,ORM_GOOD
          ,ORM_GPOST
          ,ORM_GADDR
          ,ORM_GEMP
          ,DET_CD   
          ,ORM_GEMPHP
          ,ORM_HDPHONE
          ,ORM_GSPC
          ,ORM_DOWNST
          ,ORM_GRTTON
          ,ORM_DOWNNM
          ,ORM_DPOST   
          ,ORM_DADDR
          ,ORM_CONSP
          ,ORM_SALEMP
          ,ORM_AGTEMP
          ,PRJ_CD
          ,ORM_REBAGT
          ,ORM_CMPCD   
          ,ORM_SPC
          ,ORM_PART
          ,EPI_PINO
          ,ORM_CRYN
          ,ORM_CSTYN
          ,ORM_CSTRATE
          ,ORM_COMRATE
          ,USR_CD
          ,SYS_DT
          ,ORM_WMSSEC
          ,WMS_YN
          ,PLM_PTM
          ,PLM_EVT
          ,PLM_ITR
          ,FRM_NO
          ,ORM_PSTS
  		  ,ADDR_DTL
  		  ,BDONG
  		  ,ORM_ATTR
  		  ,DLV_KIND
  		  ,PLM_MERG_NO
  		  ,COM_BRD
  		  ,LDDR_YN
  		  ,CNT_CDT
  		  ,CNT_ATTR 
  		  ,SHP_NO 
  		 ,FST_USR       
		 ,FST_SYS_DT 
		 ,PAY_DUE_DT
		 ,APT_SEQ
		 ,PROMO_SERIAL
		 ,LDDR_FREE
		 ,ADDR_GUBUN
 	      )
	SELECT
		  'I20210614224309' /*new_orm_no*/            
          ,TOO.ORM_NM
          ,TOO.COM_ORD
          ,TOO.ORM_SSEC
          ,TOO.VND_CD
          ,TOO.AGT_CD
          ,TOO.CMP_CD
          ,TOO.ORM_ORDDT   
          ,TOO.ORM_STAT                
          ,TOO.ORM_RDT
          ,TOO.ORM_ADT
          ,'20210628' /*chg_orm_cdt*/          
          ,TOO.ORM_AGTCST
          ,TOO.ORM_PURCST
          ,TOO.ORM_VISIT   
          ,TOO.ORM_PURRSN
          ,TOO.ORM_GGUBUN
          ,TOO.ORM_GOOD
          ,TOO.ORM_GPOST
          ,TOO.ORM_GADDR
          ,TOO.ORM_GEMP
          ,TOO.DET_CD   
          ,TOO.ORM_GEMPHP
          ,TOO.ORM_HDPHONE
          ,TOO.ORM_GSPC
          ,TOO.ORM_DOWNST
          ,TOO.ORM_GRTTON
          ,TOO.ORM_DOWNNM
          ,TOO.ORM_DPOST   
          ,TOO.ORM_DADDR
          ,TOO.ORM_CONSP
          ,TOO.ORM_SALEMP
          ,TOO.ORM_AGTEMP
          ,TOO.PRJ_CD
          ,TOO.ORM_REBAGT
          ,TOO.ORM_CMPCD   
          ,TOO.ORM_SPC
          ,TOO.ORM_PART
          ,TOO.EPI_PINO
          ,TOO.ORM_CRYN
          ,TOO.ORM_CSTYN
          ,TOO.ORM_CSTRATE
          ,TOO.ORM_COMRATE
          ,TOO.USR_CD
          ,GETDATE()
          ,TOO.ORM_WMSSEC
          ,TOO.WMS_YN
          ,TOO.PLM_PTM
          ,TOO.PLM_EVT
          ,TOO.PLM_ITR
          ,TOO.FRM_NO
          ,TOO.ORM_PSTS
  		  ,TOO.ADDR_DTL
  		  ,TOO.BDONG
  		  ,TOO.ORM_ATTR
  		  ,TOO.DLV_KIND
  		  ,TOO.PLM_MERG_NO
  		  ,TOO.COM_BRD
  		  ,TOO.LDDR_YN
  		  ,TOO.CNT_CDT
  		  ,TOO.CNT_ATTR 
  		  ,TOO.SHP_NO 
  		  ,TOO.FST_USR       
		  ,GETDATE() 
		  ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL('20210628' /*chg_orm_cdt*/ ,'') != '' THEN 
		  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I','20210628' /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990'))   
		   END)
		  ,TOO.APT_SEQ
		  ,TOO.PROMO_SERIAL
		  ,TOO.LDDR_FREE
		  ,TOO.ADDR_GUBUN	
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224308' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertNewOrdMaster:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertNewOrdDetail:143] - ==>  Preparing: INSERT INTO TO_ORDDET ( ORM_NO ,ORD_SSEQ ,ORD_ISEQ ,SET_CD ,COL_SCD ,ITM_CD ,COL_CD ,ORD_QTY ,ORD_CST ,TAX_AMT ,STK_CD ,ORD_PURCD ,ORD_GOODSEC ,ORD_UPCD ,ORD_WHSCD ,ORD_TWHSCD ,ORD_CURCD ,ORD_FCST ,ORD_QSTAT ,ORD_RMK ,ORD_UNFOLDING ,ORD_ENDYN ,USR_CD ,SYS_DT ,ORD_PIDSEQ ,ORM_PLANDT ,COM_ARESEC ,CAR_NO ,PMS_NO ,COM_TONSEC ,DOK_NO ,ORM_PMSYN ,ORM_PMSND ,COM_SCD ,STI_CD ,COM_CTSEC ,COM_RFG ,WMS_YN ,PID_SEQ ,ORD_ITMCOL ,A.SET_QTY ,A.SDT_QTY ,A.BSET_CD ,A.BCOL_CD ,A.MNF_ADT ,A.WH_ADT ,FST_USR ,FST_SYS_DT ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST ) SELECT ? /*new_orm_no*/ ,TOD.ORD_SSEQ ,TOD.ORD_ISEQ ,TOD.SET_CD ,TOD.COL_SCD ,TOD.ITM_CD ,TOD.COL_CD ,TOD.ORD_QTY ,TOD.ORD_CST ,TOD.TAX_AMT ,TOD.STK_CD ,TOD.ORD_PURCD ,TOD.ORD_GOODSEC ,TOD.ORD_UPCD ,TOD.ORD_WHSCD ,TOD.ORD_TWHSCD ,TOD.ORD_CURCD ,TOD.ORD_FCST ,TOD.ORD_QSTAT ,TOD.ORD_RMK ,TOD.ORD_UNFOLDING ,TOD.ORD_ENDYN ,TOD.USR_CD ,GETDATE() ,TOD.ORD_PIDSEQ ,ORM_PLANDT ,TOD.COM_ARESEC ,TOD.CAR_NO ,TOD.PMS_NO ,TOD.COM_TONSEC ,TOD.DOK_NO ,TOD.ORM_PMSYN ,TOD.ORM_PMSND ,TOD.COM_SCD ,TOD.STI_CD ,TOD.COM_CTSEC ,TOD.COM_RFG ,TOD.WMS_YN ,TOD.PID_SEQ ,TOD.ORD_ITMCOL ,TOD.SET_QTY ,TOD.SDT_QTY ,TOD.BSET_CD ,TOD.BCOL_CD ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,FST_USR ,GETDATE() ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST FROM TO_ORDDET TOD WITH (NOLOCK) WHERE TOD.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertNewOrdDetail:143] - ==> Parameters: I20210614224309(String), T01I(String), 20210628(String), T01I(String), T01I(String), 20210628(String), T01I(String), I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDDET (
		  ORM_NO
	      ,ORD_SSEQ
	      ,ORD_ISEQ
	      ,SET_CD
	      ,COL_SCD
	      ,ITM_CD
	      ,COL_CD
	      ,ORD_QTY
	      ,ORD_CST
	      ,TAX_AMT
	      ,STK_CD
	      ,ORD_PURCD
	      ,ORD_GOODSEC
	      ,ORD_UPCD
	      ,ORD_WHSCD
	      ,ORD_TWHSCD
	      ,ORD_CURCD
	      ,ORD_FCST
	      ,ORD_QSTAT
	      ,ORD_RMK
	      ,ORD_UNFOLDING
	      ,ORD_ENDYN
	      ,USR_CD
	      ,SYS_DT
	      ,ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,COM_ARESEC
	      ,CAR_NO
	      ,PMS_NO
	      ,COM_TONSEC
	      ,DOK_NO
	      ,ORM_PMSYN
	      ,ORM_PMSND
	      ,COM_SCD
	      ,STI_CD
	      ,COM_CTSEC
	      ,COM_RFG
	      ,WMS_YN
	      ,PID_SEQ
	      ,ORD_ITMCOL
	      ,A.SET_QTY
          ,A.SDT_QTY
          ,A.BSET_CD
          ,A.BCOL_CD
          ,A.MNF_ADT
          ,A.WH_ADT
		  ,FST_USR       
		  ,FST_SYS_DT
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
 	      )
	SELECT
		  'I20210614224309' /*new_orm_no*/ 
	      ,TOD.ORD_SSEQ
	      ,TOD.ORD_ISEQ
	      ,TOD.SET_CD
	      ,TOD.COL_SCD
	      ,TOD.ITM_CD
	      ,TOD.COL_CD
	      ,TOD.ORD_QTY
	      ,TOD.ORD_CST
	      ,TOD.TAX_AMT
	      ,TOD.STK_CD
	      ,TOD.ORD_PURCD
	      ,TOD.ORD_GOODSEC
	      ,TOD.ORD_UPCD
	      ,TOD.ORD_WHSCD
	      ,TOD.ORD_TWHSCD
	      ,TOD.ORD_CURCD
	      ,TOD.ORD_FCST
	      ,TOD.ORD_QSTAT
	      ,TOD.ORD_RMK
	      ,TOD.ORD_UNFOLDING
	      ,TOD.ORD_ENDYN
	      ,TOD.USR_CD
	      ,GETDATE()
	      ,TOD.ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,TOD.COM_ARESEC
	      ,TOD.CAR_NO
	      ,TOD.PMS_NO
	      ,TOD.COM_TONSEC
	      ,TOD.DOK_NO
	      ,TOD.ORM_PMSYN
	      ,TOD.ORM_PMSND
	      ,TOD.COM_SCD
	      ,TOD.STI_CD
	      ,TOD.COM_CTSEC
	      ,TOD.COM_RFG
	      ,TOD.WMS_YN
	      ,TOD.PID_SEQ
	      ,TOD.ORD_ITMCOL
	      ,TOD.SET_QTY
          ,TOD.SDT_QTY
          ,TOD.BSET_CD
          ,TOD.BCOL_CD
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210628' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) 
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210628' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0)
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
		  ,FST_USR       
		  ,GETDATE()
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
	  FROM TO_ORDDET TOD WITH (NOLOCK)
	 WHERE TOD.ORM_NO = 'I20210614224308' /*key_no*/
 {executed in 137 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertNewOrdDetail:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [deleteRecdRenD:143] - ==>  Preparing: DELETE FROM TO_RECE_REN WHERE REC_NO = CAST(? /*key_no*/ AS VARCHAR) 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [deleteRecdRenD:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM TO_RECE_REN
     WHERE REC_NO = CAST('I20210614224308' /*key_no*/  AS VARCHAR)
 {executed in 7 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [deleteRecdRenD:143] - <==    Updates: 0
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertRecdRenD:143] - ==>  Preparing: INSERT INTO TO_RECE_REN (REC_NO , ITM_CD ,COL_CD ,REC_QTY ,ORM_RDT ,ORM_RDT_2 ,ORM_RDT_2_YN ,REC_DT_1 ,REC_DT_2 ,COM_CMP ,IOP_FINEST ,COM_GOODCD ,VND_CD ,COM_STKSEC ,COM_STDSEC ,IOP_MNFCST ) SELECT D.ORM_NO ,D.ITM_CD ,D.COL_CD ,SUM(D.ORD_QTY) ,M.ORM_RDT ,NULL ,NULL ,NULL ,NULL ,CAST('T01I' AS VARCHAR) ,C.IOP_FINEST ,C.COM_GOODCD ,C.VND_CD ,S.COM_STKSEC ,S.COM_STDSEC ,C.IOP_MNFCST FROM TO_ORDMAS M WITH (NOLOCK) ,TO_ORDDET D WITH (NOLOCK) ,TT_ITMCOP C WITH (NOLOCK) ,TT_ITMMST S WITH (NOLOCK) WHERE M.ORM_NO = D.ORM_NO AND D.ITM_CD = C.ITM_CD AND D.COL_CD = C.COL_CD AND C.ITM_CD = S.ITM_CD AND C.COL_CD = S.COL_CD AND D.ORM_NO = CAST(? /*key_no*/ AS VARCHAR) AND C.COM_CMP = CAST('T01I' AS VARCHAR) GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertRecdRenD:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT 
	  INTO TO_RECE_REN 
	            (REC_NO
	             , ITM_CD
	             ,COL_CD
	             ,REC_QTY
	             ,ORM_RDT
	             ,ORM_RDT_2
	             ,ORM_RDT_2_YN
	             ,REC_DT_1
	             ,REC_DT_2
                ,COM_CMP
                ,IOP_FINEST
                ,COM_GOODCD
                ,VND_CD
                ,COM_STKSEC
                ,COM_STDSEC
                ,IOP_MNFCST
                )
	SELECT D.ORM_NO 
	           ,D.ITM_CD 
	           ,D.COL_CD 
	           ,SUM(D.ORD_QTY) 
	           ,M.ORM_RDT 
	           ,NULL
	           ,NULL 
	           ,NULL 
	           ,NULL 
			   ,CAST('T01I' AS VARCHAR) 
			   ,C.IOP_FINEST 
			   ,C.COM_GOODCD 
			   ,C.VND_CD 
			   ,S.COM_STKSEC 
			   ,S.COM_STDSEC 
			   ,C.IOP_MNFCST	   
	FROM TO_ORDMAS M WITH (NOLOCK)
	         ,TO_ORDDET D WITH (NOLOCK)
	         ,TT_ITMCOP C WITH (NOLOCK)
	         ,TT_ITMMST S WITH (NOLOCK)
	WHERE M.ORM_NO = D.ORM_NO
	AND D.ITM_CD = C.ITM_CD 
	AND D.COL_CD = C.COL_CD
	AND C.ITM_CD = S.ITM_CD 
	AND C.COL_CD = S.COL_CD
	AND D.ORM_NO = CAST('I20210614224308' /*key_no*/  AS VARCHAR)
	AND C.COM_CMP = CAST('T01I' AS VARCHAR) 
	GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, 
				    C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST
 {executed in 4 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertRecdRenD:143] - <==    Updates: 20
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224308' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 4 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateToOrdChgmasStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() ,EMC_YN = 'N' ,OUT_TYP = ' ' ,MULTI_CHGKND = '' ,NEW_ORMNO = ? /*new_orm_no*/ WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateToOrdChgmasStat:143] - ==> Parameters: I20210614224309(String), I20210614224308(String), 01(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
            ,EMC_YN = 'N'
            ,OUT_TYP = '      ' 
            ,MULTI_CHGKND = ''
            ,NEW_ORMNO = 'I20210614224309' /*new_orm_no*/ 
       WHERE ORM_NO = 'I20210614224308' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 5 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateToOrdChgmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateToOrdmasStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_STAT = 'O08003' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateToOrdmasStat:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS              									
       SET ORM_STAT = 'O08003' 
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224308' /*key_no*/
 {executed in 73 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateToOrdmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectOrmCryn:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224308' /*key_no*/
 {executed in 6 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectSigongReserveYn:143] - ==>  Preparing: SELECT ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectSigongReserveYn:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224308' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectSigongReserveYn:143] - <==      Total: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectRemdtRemseq:143] - ==>  Preparing: SELECT TCR.REM_DT AS DATA1, TCR.REM_SEQ AS DATA2, ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ AND TCR.REM_DT = ? /*rem_dt*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectRemdtRemseq:143] - ==> Parameters: I20210614224308(String), 20210629(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TCR.REM_DT AS DATA1,
		TCR.REM_SEQ AS DATA2,
		ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614224308' /*key_no*/ 
	   AND TCR.REM_DT = '20210629' /*rem_dt*/
 {executed in 5 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectRemdtRemseq:143] - <==      Total: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectTcMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1 FROM TC_SEQNOINF WHERE COM_AGSEC = ? /*com_agsec*/ AND COM_NOSEC = 'C08CRS' AND SEQ_SETDT = ? /*req_dt*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectTcMaxSeqNo:143] - ==> Parameters: C02I(String), 20210628(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1
		  FROM TC_SEQNOINF 
		 WHERE COM_AGSEC = 'C02I' /*com_agsec*/ 	
		   AND COM_NOSEC = 'C08CRS' 
		   AND SEQ_SETDT = '20210628' /*req_dt*/
 {executed in 7 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectTcMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertTcSeqnoinf:143] - ==>  Preparing: MERGE INTO TC_SEQNOINF SI USING (SELECT ? /*com_agsec*/ AS COM_AGSEC ,? /*req_dt*/ AS SEQ_SETDT) A ON SI.COM_AGSEC = A.COM_AGSEC AND SI.SEQ_SETDT = A.SEQ_SETDT AND SI.COM_NOSEC = 'C08CRS' WHEN MATCHED THEN UPDATE SET SEQ_NO = ? /*max_seq_no*/ WHEN NOT MATCHED THEN INSERT (COM_AGSEC ,COM_NOSEC ,SEQ_SETDT ,SEQ_NO ,USR_CD ,SYS_DT ) VALUES(? /*com_agsec*/ ,'C08CRS' ,? /*req_dt*/ ,? /*max_seq_no*/ ,'CHATBOT' ,GETDATE() ); 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertTcSeqnoinf:143] - ==> Parameters: C02I(String), 20210628(String), 420(Integer), C02I(String), 20210628(String), 420(Integer)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. MERGE INTO TC_SEQNOINF SI
    	 USING (SELECT 'C02I' /*com_agsec*/  AS COM_AGSEC
    	              ,'20210628' /*req_dt*/  AS SEQ_SETDT) A
       		ON SI.COM_AGSEC = A.COM_AGSEC
       	   AND SI.SEQ_SETDT = A.SEQ_SETDT
       	   AND SI.COM_NOSEC = 'C08CRS'
          WHEN MATCHED THEN
            UPDATE 
               SET SEQ_NO = 420 /*max_seq_no*/ 
          WHEN NOT MATCHED THEN
		    INSERT
		      	  (COM_AGSEC
		      	  ,COM_NOSEC
		      	  ,SEQ_SETDT
		      	  ,SEQ_NO
		      	  ,USR_CD
		      	  ,SYS_DT
		          )    
			VALUES('C02I' /*com_agsec*/ 
			      ,'C08CRS'
			      ,'20210628' /*req_dt*/ 
			      ,420 /*max_seq_no*/ 
			      ,'CHATBOT'
			      ,GETDATE()
			      );
 {executed in 5 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertTcSeqnoinf:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateTcresdtl:143] - ==>  Preparing: UPDATE TC_RESDTL SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateTcresdtl:143] - ==> Parameters: 20210628(String), IC0420(String), 20210629(String), IC0434(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESDTL SET REM_DT = '20210628' /*req_dt*/ , REM_SEQ = 'IC0420' /*new_rem_seq*/ 
	 WHERE REM_DT = '20210629' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0434' /*rem_seq*/
 {executed in 5 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateTcresdtl:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateTcresmst:143] - ==>  Preparing: UPDATE TC_RESMST SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ , ORM_NO = ? /*new_ormno*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateTcresmst:143] - ==> Parameters: 20210628(String), IC0420(String), I20210614224309(String), 20210629(String), IC0434(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST SET REM_DT = '20210628' /*req_dt*/ , REM_SEQ = 'IC0420' /*new_rem_seq*/ , ORM_NO = 'I20210614224309' /*new_ormno*/ 
	 WHERE REM_DT = '20210629' /*rem_dt*/ 
	   AND REM_SEQ = 'IC0434' /*rem_seq*/
 {executed in 7 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateTcresmst:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateToOrdmasSigongStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_PSTS = 'E' /* 예약상태 */ ,ORM_CDT = ? /*req_dt*/ /* 확정납기일 */ ,USR_CD = 'CHATBOT' /* 최종변경자 */ ,SYS_DT = GETDATE() /* 최종변경일시 */ ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,? /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990')) END) WHERE ORM_NO = ? /*new_ormno*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateToOrdmasSigongStat:143] - ==> Parameters: 20210628(String), 20210628(String), 20210628(String), I20210614224309(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS
       SET ORM_PSTS = 'E'    /* 예약상태 */		
          ,ORM_CDT  = '20210628' /*req_dt*/      /* 확정납기일 */		
          ,USR_CD   = 'CHATBOT'   /* 최종변경자 */
          ,SYS_DT   = GETDATE()     /* 최종변경일시 */
		  ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL('20210628' /*chg_orm_cdt*/ ,'') != '' THEN
							  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,'20210628' /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990'))
							   END)
     WHERE ORM_NO = 'I20210614224309' /*new_ormno*/
 {executed in 27 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [updateToOrdmasSigongStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectOnlineynCheck:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224308' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224308(String), I20210614224308(String), I20210614224308(String), 챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224308,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224308' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224308' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224308' /*key_no*/ ),
		        '챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614224308,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 5 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertApicallHist:143] - ==> Parameters: erp_OrderArrivalDateChange(String), 챗봇 주문 도착일정 변경 Auto 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderArrivalDateChange' /*call_function*/ , '챗봇 주문 도착일정 변경 Auto 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 4 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectChginformData:143] - ==> Parameters: I20210614224308(String)
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224308' /*key_no*/
 {executed in 10 msec}
DEBUG 21-06-23 15:19:58[http-nio-8082-exec-3] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 15:25:24[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 15:25:25[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 15:25:25[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 15:25:25[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 15:25:34[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 29376 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 15:25:34[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 15:25:36[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 15:25:36[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 15:25:36[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:25:36[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 15:25:36[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 15:25:36[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 15:25:36[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 2075 ms
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 15:25:38[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@794366a5, org.springframework.security.web.context.SecurityContextPersistenceFilter@30b975ad, org.springframework.security.web.header.HeaderWriterFilter@5634a861, org.springframework.security.web.authentication.logout.LogoutFilter@c386958, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@15c487a8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a334bac, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6949e948, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@480b57e2, org.springframework.security.web.session.SessionManagementFilter@37ad042b, org.springframework.security.web.access.ExceptionTranslationFilter@3bc4ef12, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@625a9c5d]
INFO  21-06-23 15:25:38[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 15:25:38[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 15:25:39[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 15:25:39[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:25:39[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 15:25:39[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 15:25:39[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 15:25:39[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 15:25:39[main] [ChatBotApplication:61] - Started ChatBotApplication in 5.456 seconds (JVM running for 8.958)
INFO  21-06-23 15:25:43[http-nio-8082-exec-2] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 15:25:43[http-nio-8082-exec-2] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 15:25:43[http-nio-8082-exec-2] [DispatcherServlet:547] - Completed initialization in 10 ms
INFO  21-06-23 15:28:06[http-nio-8082-exec-1] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 15:28:08[http-nio-8082-exec-1] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 15:28:08[http-nio-8082-exec-1] [insertChgAddrReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45005', 'O47002', 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, '', TOO.ORM_NM, NULL, TOO.ORM_GPOST, ? /*chg_orm_gpost*/ , TOO.ORM_GADDR, ? /*chg_addr*/ , NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, ? /*chg_addr_dtl*/ , TOO.BDONG, ? /*chg_bdongcd*/ FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:28:08[http-nio-8082-exec-1] [insertChgAddrReq:143] - ==> Parameters: null, 서울 도봉구 해등로 195(String), 쌍문삼익세라믹 APT 101동 1501호(String), 01431(String), I20210614224309(String)
DEBUG 21-06-23 15:28:08[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45005',
		'O47002',
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'',
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL /*chg_orm_gpost*/ ,
		TOO.ORM_GADDR,
		'서울 도봉구 해등로 195' /*chg_addr*/ ,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		'쌍문삼익세라믹 APT 101동 1501호' /*chg_addr_dtl*/ ,
		TOO.BDONG,
		'01431' /*chg_bdongcd*/ 
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 9 msec}
DEBUG 21-06-23 15:28:08[http-nio-8082-exec-1] [insertChgAddrReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:28:08[http-nio-8082-exec-1] [updateToOrdmasAddr:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_GPOST = ? /*orm_gpost*/ , ORM_GADDR = ? /*chg_addr*/ , ADDR_DTL = ISNULL(? /*chg_addr_dtl*/ , ''), BDONG = ? /*bdongcd*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:28:08[http-nio-8082-exec-1] [updateToOrdmasAddr:143] - ==> Parameters: 1132010500(String), 서울 도봉구 해등로 195(String), 쌍문삼익세라믹 APT 101동 1501호(String), null, I20210614224309(String)
ERROR 21-06-23 15:28:08[http-nio-8082-exec-1] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_GPOST = '1132010500' /*orm_gpost*/ , ORM_GADDR = '서울 도봉구 해등로 195' /*chg_addr*/ , ADDR_DTL = ISNULL('쌍문삼익세라믹 APT 101동 1501호' /*chg_addr_dtl*/ , ''), BDONG = NULL /*bdongcd*/ 
	WHERE ORM_NO = 'I20210614224309' /*key_no*/
 {FAILED after 34 msec}
com.microsoft.sqlserver.jdbc.SQLServerException: 문자열이나 이진 데이터는 잘립니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:262)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.getNextResult(SQLServerStatement.java:1624)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:594)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:524)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7194)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:2979)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:248)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:223)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.execute(SQLServerPreparedStatement.java:505)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy117.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy72.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy82.updateToOrdmasAddr(Unknown Source)
	at com.fursys.chatbot.controllers.AppController.erp_OrderChangeAddressRequestProc(AppController.java:2334)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [insertChgAddrReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45005', 'O47002', 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, '', TOO.ORM_NM, NULL, TOO.ORM_GPOST, ? /*chg_orm_gpost*/ , TOO.ORM_GADDR, ? /*chg_addr*/ , NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, ? /*chg_addr_dtl*/ , TOO.BDONG, ? /*chg_bdongcd*/ FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [insertChgAddrReq:143] - ==> Parameters: null, 서울 도봉구 해등로 195(String), 쌍문삼익세라믹 APT 101동 1501호(String), 1132010500(String), I20210614224309(String)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45005',
		'O47002',
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'',
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL /*chg_orm_gpost*/ ,
		TOO.ORM_GADDR,
		'서울 도봉구 해등로 195' /*chg_addr*/ ,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		'쌍문삼익세라믹 APT 101동 1501호' /*chg_addr_dtl*/ ,
		TOO.BDONG,
		'1132010500' /*chg_bdongcd*/ 
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [insertChgAddrReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [updateToOrdmasAddr:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_GPOST = ? /*orm_gpost*/ , ORM_GADDR = ? /*chg_addr*/ , ADDR_DTL = ISNULL(? /*chg_addr_dtl*/ , ''), BDONG = ? /*bdongcd*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [updateToOrdmasAddr:143] - ==> Parameters: 01431(String), 서울 도봉구 해등로 195(String), 쌍문삼익세라믹 APT 101동 1501호(String), null, I20210614224309(String)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_GPOST = '01431' /*orm_gpost*/ , ORM_GADDR = '서울 도봉구 해등로 195' /*chg_addr*/ , ADDR_DTL = ISNULL('쌍문삼익세라믹 APT 101동 1501호' /*chg_addr_dtl*/ , ''), BDONG = NULL /*bdongcd*/ 
	WHERE ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 33 msec}
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [updateToOrdmasAddr:143] - <==    Updates: 1
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224309' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 5 msec}
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectOrmCryn:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [updateTcResmstAddr:143] - ==>  Preparing: UPDATE TC_RESMST SET TOWN_CD = ? /*chg_bdongcd*/ , USR_CD = 'CHATBOT', SYS_DT = GETDATE() WHERE COM_SSEC = 'C18C' AND ORM_NO = ? /*key_no*/ AND REM_DT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ) 
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [updateTcResmstAddr:143] - ==> Parameters: 1132010500(String), I20210614224309(String), I20210614224309(String)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST 
	   SET TOWN_CD = '1132010500' /*chg_bdongcd*/ , USR_CD = 'CHATBOT', SYS_DT = GETDATE()
	 WHERE COM_SSEC = 'C18C'
	   AND ORM_NO = 'I20210614224309' /*key_no*/ 
	   AND REM_DT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/  )
 {executed in 10 msec}
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [updateTcResmstAddr:143] - <==    Updates: 1
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectTcplanmstYn:143] - ==>  Preparing: SELECT (CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TC_PLANMST TCP WITH (NOLOCK) WHERE TCP.ORM_NO = ? /*key_no*/ AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ) 
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectTcplanmstYn:143] - ==> Parameters: I20210614224309(String), I20210614224309(String)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		(CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TC_PLANMST TCP WITH (NOLOCK)
	 WHERE TCP.ORM_NO = 'I20210614224309' /*key_no*/ 
	   AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/  )
 {executed in 4 msec}
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectTcplanmstYn:143] - <==      Total: 1
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [updateToChgmasChgAddrStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [updateToChgmasChgAddrStat:143] - ==> Parameters: I20210614224309(String), 01(String)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224309' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 3 msec}
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [updateToChgmasChgAddrStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectOnlineynCheck:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224309(String), I20210614224309(String), I20210614224309(String), 챗봇을 통해 주소변경처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        '챗봇을 통해 주소변경처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 2 msec}
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeAddressRequestProc(String), 챗봇 주문 주소변경요청 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeAddressRequestProc' /*call_function*/ , '챗봇 주문 주소변경요청 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 5 msec}
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectChginformData:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 75 msec}
DEBUG 21-06-23 15:28:39[http-nio-8082-exec-4] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 15:30:43[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 15:30:44[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 15:30:44[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 15:30:44[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 15:37:16[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 25804 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 15:37:16[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 15:37:17[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 15:37:17[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 15:37:17[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:37:17[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 15:37:17[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 15:37:17[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 15:37:17[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 1183 ms
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 15:37:18[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7523a3dc, org.springframework.security.web.context.SecurityContextPersistenceFilter@73809e7, org.springframework.security.web.header.HeaderWriterFilter@732f6050, org.springframework.security.web.authentication.logout.LogoutFilter@3dc95b8b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@51a18b21, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48df4071, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37854b34, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2806d6da, org.springframework.security.web.session.SessionManagementFilter@30c4e352, org.springframework.security.web.access.ExceptionTranslationFilter@3c91530d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@eb6ec6]
INFO  21-06-23 15:37:18[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 15:37:18[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 15:37:18[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 15:37:18[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:37:18[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 15:37:18[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 15:37:18[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 15:37:18[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 15:37:18[main] [ChatBotApplication:61] - Started ChatBotApplication in 2.633 seconds (JVM running for 4.13)
INFO  21-06-23 15:37:38[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 15:37:38[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 15:37:38[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 3 ms
INFO  21-06-23 15:38:58[http-nio-8082-exec-2] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 15:38:59[http-nio-8082-exec-2] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 15:38:59[http-nio-8082-exec-2] [insertChgAddrReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45005', 'O47002', 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, '', TOO.ORM_NM, NULL, TOO.ORM_GPOST, ? /*chg_orm_gpost*/ , TOO.ORM_GADDR, ? /*chg_addr*/ , NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, ? /*chg_addr_dtl*/ , TOO.BDONG, ? /*chg_bdongcd*/ FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:38:59[http-nio-8082-exec-2] [insertChgAddrReq:143] - ==> Parameters: null, 서울 도봉구 해등로 195(String), 삼익세라믹 101동 1501호(String), 01431(String), I20210614224309(String)
DEBUG 21-06-23 15:38:59[http-nio-8082-exec-2] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45005',
		'O47002',
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'',
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL /*chg_orm_gpost*/ ,
		TOO.ORM_GADDR,
		'서울 도봉구 해등로 195' /*chg_addr*/ ,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		'삼익세라믹 101동 1501호' /*chg_addr_dtl*/ ,
		TOO.BDONG,
		'01431' /*chg_bdongcd*/ 
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 8 msec}
DEBUG 21-06-23 15:38:59[http-nio-8082-exec-2] [insertChgAddrReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:38:59[http-nio-8082-exec-2] [updateToOrdmasAddr:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_GPOST = ? /*orm_gpost*/ , ORM_GADDR = ? /*chg_addr*/ , ADDR_DTL = ISNULL(? /*chg_addr_dtl*/ , ''), BDONG = ? /*bdongcd*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:38:59[http-nio-8082-exec-2] [updateToOrdmasAddr:143] - ==> Parameters: 1132010500(String), 서울 도봉구 해등로 195(String), 삼익세라믹 101동 1501호(String), null, I20210614224309(String)
ERROR 21-06-23 15:38:59[http-nio-8082-exec-2] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_GPOST = '1132010500' /*orm_gpost*/ , ORM_GADDR = '서울 도봉구 해등로 195' /*chg_addr*/ , ADDR_DTL = ISNULL('삼익세라믹 101동 1501호' /*chg_addr_dtl*/ , ''), BDONG = NULL /*bdongcd*/ 
	WHERE ORM_NO = 'I20210614224309' /*key_no*/
 {FAILED after 8 msec}
com.microsoft.sqlserver.jdbc.SQLServerException: 문자열이나 이진 데이터는 잘립니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:262)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.getNextResult(SQLServerStatement.java:1624)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:594)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:524)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7194)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:2979)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:248)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:223)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.execute(SQLServerPreparedStatement.java:505)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy117.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy72.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy82.updateToOrdmasAddr(Unknown Source)
	at com.fursys.chatbot.controllers.AppController.erp_OrderChangeAddressRequestProc(AppController.java:2336)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
DEBUG 21-06-23 15:39:38[http-nio-8082-exec-4] [insertChgAddrReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45005', 'O47002', 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, '', TOO.ORM_NM, NULL, TOO.ORM_GPOST, ? /*chg_orm_gpost*/ , TOO.ORM_GADDR, ? /*chg_addr*/ , NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, ? /*chg_addr_dtl*/ , TOO.BDONG, ? /*chg_bdongcd*/ FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:39:38[http-nio-8082-exec-4] [insertChgAddrReq:143] - ==> Parameters: null, 서울 도봉구 해등로 195(String), 삼익세라믹 101동 1501호(String), 01431(String), I20210614224309(String)
DEBUG 21-06-23 15:39:38[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45005',
		'O47002',
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'',
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL /*chg_orm_gpost*/ ,
		TOO.ORM_GADDR,
		'서울 도봉구 해등로 195' /*chg_addr*/ ,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		'삼익세라믹 101동 1501호' /*chg_addr_dtl*/ ,
		TOO.BDONG,
		'01431' /*chg_bdongcd*/ 
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 6 msec}
DEBUG 21-06-23 15:39:38[http-nio-8082-exec-4] [insertChgAddrReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:39:38[http-nio-8082-exec-4] [updateToOrdmasAddr:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_GPOST = ? /*orm_gpost*/ , ORM_GADDR = ? /*chg_addr*/ , ADDR_DTL = ISNULL(? /*chg_addr_dtl*/ , ''), BDONG = ? /*bdongcd*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:39:38[http-nio-8082-exec-4] [updateToOrdmasAddr:143] - ==> Parameters: 1132010500(String), 서울 도봉구 해등로 195(String), 삼익세라믹 101동 1501호(String), null, I20210614224309(String)
ERROR 21-06-23 15:39:38[http-nio-8082-exec-4] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_GPOST = '1132010500' /*orm_gpost*/ , ORM_GADDR = '서울 도봉구 해등로 195' /*chg_addr*/ , ADDR_DTL = ISNULL('삼익세라믹 101동 1501호' /*chg_addr_dtl*/ , ''), BDONG = NULL /*bdongcd*/ 
	WHERE ORM_NO = 'I20210614224309' /*key_no*/
 {FAILED after 5 msec}
com.microsoft.sqlserver.jdbc.SQLServerException: 문자열이나 이진 데이터는 잘립니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:262)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.getNextResult(SQLServerStatement.java:1624)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:594)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:524)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7194)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:2979)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:248)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:223)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.execute(SQLServerPreparedStatement.java:505)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy117.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy72.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy82.updateToOrdmasAddr(Unknown Source)
	at com.fursys.chatbot.controllers.AppController.erp_OrderChangeAddressRequestProc(AppController.java:2336)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [insertChgAddrReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45005', 'O47002', 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, '', TOO.ORM_NM, NULL, TOO.ORM_GPOST, ? /*chg_orm_gpost*/ , TOO.ORM_GADDR, ? /*chg_addr*/ , NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, ? /*chg_addr_dtl*/ , TOO.BDONG, ? /*chg_bdongcd*/ FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [insertChgAddrReq:143] - ==> Parameters: null, 서울 도봉구 해등로 195(String), 삼익세라믹 101동 1501호(String), 1132010500(String), I20210614224309(String)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45005',
		'O47002',
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'',
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL /*chg_orm_gpost*/ ,
		TOO.ORM_GADDR,
		'서울 도봉구 해등로 195' /*chg_addr*/ ,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		'삼익세라믹 101동 1501호' /*chg_addr_dtl*/ ,
		TOO.BDONG,
		'1132010500' /*chg_bdongcd*/ 
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 8 msec}
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [insertChgAddrReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [updateToOrdmasAddr:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_GPOST = ? /*orm_gpost*/ , ORM_GADDR = ? /*chg_addr*/ , ADDR_DTL = ISNULL(? /*chg_addr_dtl*/ , ''), BDONG = ? /*bdongcd*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [updateToOrdmasAddr:143] - ==> Parameters: 01431(String), 서울 도봉구 해등로 195(String), 삼익세라믹 101동 1501호(String), null, I20210614224309(String)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_GPOST = '01431' /*orm_gpost*/ , ORM_GADDR = '서울 도봉구 해등로 195' /*chg_addr*/ , ADDR_DTL = ISNULL('삼익세라믹 101동 1501호' /*chg_addr_dtl*/ , ''), BDONG = NULL /*bdongcd*/ 
	WHERE ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 61 msec}
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [updateToOrdmasAddr:143] - <==    Updates: 1
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614224309' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 7 msec}
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectOrmCryn:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 13 msec}
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [updateTcResmstAddr:143] - ==>  Preparing: UPDATE TC_RESMST SET TOWN_CD = ? /*chg_bdongcd*/ , USR_CD = 'CHATBOT', SYS_DT = GETDATE() WHERE COM_SSEC = 'C18C' AND ORM_NO = ? /*key_no*/ AND REM_DT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ) 
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [updateTcResmstAddr:143] - ==> Parameters: 1132010500(String), I20210614224309(String), I20210614224309(String)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST 
	   SET TOWN_CD = '1132010500' /*chg_bdongcd*/ , USR_CD = 'CHATBOT', SYS_DT = GETDATE()
	 WHERE COM_SSEC = 'C18C'
	   AND ORM_NO = 'I20210614224309' /*key_no*/ 
	   AND REM_DT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/  )
 {executed in 36 msec}
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [updateTcResmstAddr:143] - <==    Updates: 1
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectTcplanmstYn:143] - ==>  Preparing: SELECT (CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TC_PLANMST TCP WITH (NOLOCK) WHERE TCP.ORM_NO = ? /*key_no*/ AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ) 
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectTcplanmstYn:143] - ==> Parameters: I20210614224309(String), I20210614224309(String)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		(CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TC_PLANMST TCP WITH (NOLOCK)
	 WHERE TCP.ORM_NO = 'I20210614224309' /*key_no*/ 
	   AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/  )
 {executed in 7 msec}
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectTcplanmstYn:143] - <==      Total: 1
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [updateToChgmasChgAddrStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [updateToChgmasChgAddrStat:143] - ==> Parameters: I20210614224309(String), 01(String)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614224309' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 5 msec}
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [updateToChgmasChgAddrStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectOnlineynCheck:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224309(String), I20210614224309(String), I20210614224309(String), 챗봇을 통해 주소변경처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        '챗봇을 통해 주소변경처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 5 msec}
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeAddressRequestProc(String), 챗봇 주문 주소변경요청 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeAddressRequestProc' /*call_function*/ , '챗봇 주문 주소변경요청 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 5 msec}
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectChginformData:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 17 msec}
DEBUG 21-06-23 15:39:59[http-nio-8082-exec-5] [selectChginformData:143] - <==      Total: 1
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [updateOrderHpChange:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_HDPHONE = ? /*ctm_hp*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [updateOrderHpChange:143] - ==> Parameters: 010-3652-9837(String), I20210614224309(String)
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_HDPHONE = '010-3652-9837' /*ctm_hp*/ 
	WHERE ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 37 msec}
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [updateOrderHpChange:143] - <==    Updates: 1
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [selectOnlineynCheck:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 6 msec}
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224309(String), I20210614224309(String), I20210614224309(String), 챗봇을 통해 납품처 핸드폰 번호 변경 처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        '챗봇을 통해 납품처 핸드폰 번호 변경 처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 4 msec}
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [insertApicallHist:143] - ==> Parameters: erp_orderHpChange(String), 챗봇 주문 납품처 핸드폰번호 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_orderHpChange' /*call_function*/ , '챗봇 주문 납품처 핸드폰번호 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 5 msec}
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [selectChginformData:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 12 msec}
DEBUG 21-06-23 15:44:21[http-nio-8082-exec-6] [selectChginformData:143] - <==      Total: 1
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [updateOrderHpChange:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_HDPHONE = ? /*ctm_hp*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [updateOrderHpChange:143] - ==> Parameters: 010-7334-8156(String), I20210614224309(String)
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_HDPHONE = '010-7334-8156' /*ctm_hp*/ 
	WHERE ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 47 msec}
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [updateOrderHpChange:143] - <==    Updates: 1
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [selectOnlineynCheck:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224309(String), I20210614224309(String), I20210614224309(String), 챗봇을 통해 납품처 핸드폰 번호 변경 처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        '챗봇을 통해 납품처 핸드폰 번호 변경 처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 9 msec}
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [insertApicallHist:143] - ==> Parameters: erp_orderHpChange(String), 챗봇 주문 납품처 핸드폰번호 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_orderHpChange' /*call_function*/ , '챗봇 주문 납품처 핸드폰번호 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 5 msec}
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [selectChginformData:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 9 msec}
DEBUG 21-06-23 15:45:20[http-nio-8082-exec-9] [selectChginformData:143] - <==      Total: 1
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [updateOrderHpChange:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_HDPHONE = ? /*ctm_hp*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [updateOrderHpChange:143] - ==> Parameters: 010-7334-8156(String), I20210614224309(String)
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_HDPHONE = '010-7334-8156' /*ctm_hp*/ 
	WHERE ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 29 msec}
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [updateOrderHpChange:143] - <==    Updates: 1
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [selectOnlineynCheck:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224309(String), I20210614224309(String), I20210614224309(String), 챗봇을 통해 납품처 핸드폰 번호 변경 처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        '챗봇을 통해 납품처 핸드폰 번호 변경 처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 3 msec}
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [insertApicallHist:143] - ==> Parameters: erp_orderHpChange(String), 챗봇 주문 납품처 핸드폰번호 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_orderHpChange' /*call_function*/ , '챗봇 주문 납품처 핸드폰번호 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 4 msec}
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [selectChginformData:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 8 msec}
DEBUG 21-06-23 15:45:52[http-nio-8082-exec-10] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 15:46:12[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 15:46:14[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 15:46:14[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 15:46:14[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
INFO  21-06-23 15:46:22[main] [ChatBotApplication:55] - Starting ChatBotApplication on DESKTOP-Q2KV5DR with PID 1236 (D:\development\workspace\ChatBot\bin\main started by hwang in D:\development\workspace\ChatBot)
INFO  21-06-23 15:46:22[main] [ChatBotApplication:651] - No active profile set, falling back to default profiles: default
DEBUG 21-06-23 15:46:24[main] [LogFactory:105] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
INFO  21-06-23 15:46:24[main] [TomcatWebServer:108] - Tomcat initialized with port(s): 8082 (http)
INFO  21-06-23 15:46:24[main] [Http11NioProtocol:173] - Initializing ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:46:24[main] [StandardService:173] - Starting service [Tomcat]
INFO  21-06-23 15:46:24[main] [StandardEngine:173] - Starting Servlet engine: [Apache Tomcat/9.0.36]
INFO  21-06-23 15:46:24[main] [[/]:173] - Initializing Spring embedded WebApplicationContext
INFO  21-06-23 15:46:24[main] [ServletWebServerApplicationContext:285] - Root WebApplicationContext: initialization completed in 1709 ms
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/css/**'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/js/**'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/img/**'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/images/**'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/lib/**'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/templates/**'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/v2/api-docs'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/ui'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-resources/**'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/configuration/security'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger-ui.html'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/webjars/**'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/swagger/**'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: Ant [pattern='/_sign/**'], []
INFO  21-06-23 15:46:25[main] [DefaultSecurityFilterChain:43] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43bdaa1b, org.springframework.security.web.context.SecurityContextPersistenceFilter@2596d7f4, org.springframework.security.web.header.HeaderWriterFilter@73ae0257, org.springframework.security.web.authentication.logout.LogoutFilter@1e236278, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5634a861, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6aa3bfc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@66933239, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30b975ad, org.springframework.security.web.session.SessionManagementFilter@5762658b, org.springframework.security.web.access.ExceptionTranslationFilter@2513a118, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3bed3315]
INFO  21-06-23 15:46:25[main] [PropertySourcedRequestMappingHandlerMapping:69] - Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
INFO  21-06-23 15:46:25[main] [ThreadPoolTaskExecutor:181] - Initializing ExecutorService 'applicationTaskExecutor'
WARN  21-06-23 15:46:26[main] [TemplateMode:150] - [THYMELEAF][main] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
INFO  21-06-23 15:46:26[main] [Http11NioProtocol:173] - Starting ProtocolHandler ["http-nio-8082"]
INFO  21-06-23 15:46:26[main] [TomcatWebServer:220] - Tomcat started on port(s): 8082 (http) with context path ''
INFO  21-06-23 15:46:26[main] [DocumentationPluginsBootstrapper:160] - Context refreshed
INFO  21-06-23 15:46:26[main] [DocumentationPluginsBootstrapper:163] - Found 1 custom documentation plugin(s)
INFO  21-06-23 15:46:26[main] [ApiListingReferenceScanner:41] - Scanning for api listing references
INFO  21-06-23 15:46:26[main] [ChatBotApplication:61] - Started ChatBotApplication in 3.948 seconds (JVM running for 6.451)
INFO  21-06-23 15:46:33[http-nio-8082-exec-1] [[/]:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  21-06-23 15:46:33[http-nio-8082-exec-1] [DispatcherServlet:525] - Initializing Servlet 'dispatcherServlet'
INFO  21-06-23 15:46:33[http-nio-8082-exec-1] [DispatcherServlet:547] - Completed initialization in 4 ms
INFO  21-06-23 15:47:00[http-nio-8082-exec-1] [HikariDataSource:110] - HikariPool-1 - Starting...
INFO  21-06-23 15:47:01[http-nio-8082-exec-1] [HikariDataSource:123] - HikariPool-1 - Start completed.
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [updateOrderHpChange:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_HDPHONE = ? /*ctm_hp*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [updateOrderHpChange:143] - ==> Parameters: 010-7334-8156(String), I20210614224309(String)
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_HDPHONE = '010-7334-8156' /*ctm_hp*/ 
	WHERE ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 31 msec}
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [updateOrderHpChange:143] - <==    Updates: 1
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [selectOnlineynCheck:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614224309(String), I20210614224309(String), I20210614224309(String), 챗봇을 통해 납품처 핸드폰 번호 변경 처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )(String)
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/ ),
		        '챗봇을 통해 납품처 핸드폰 번호 변경 처리 되었습니다. (주문번호 : I20210614224309,  수주건명 : 정태연 )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 3 msec}
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [insertApicallHist:143] - ==> Parameters: erp_orderHpChange(String), 챗봇 주문 납품처 핸드폰번호 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_orderHpChange' /*call_function*/ , '챗봇 주문 납품처 핸드폰번호 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 4 msec}
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [selectChginformData:143] - ==> Parameters: I20210614224309(String)
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614224309' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 15:47:01[http-nio-8082-exec-1] [selectChginformData:143] - <==      Total: 1
DEBUG 21-06-23 15:51:29[http-nio-8082-exec-4] [updateOrderHpChange:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_HDPHONE = ? /*ctm_hp*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:51:29[http-nio-8082-exec-4] [updateOrderHpChange:143] - ==> Parameters: 010-7334-8156(String), I20210614268600(String)
DEBUG 21-06-23 15:51:29[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_HDPHONE = '010-7334-8156' /*ctm_hp*/ 
	WHERE ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 49 msec}
DEBUG 21-06-23 15:51:29[http-nio-8082-exec-4] [updateOrderHpChange:143] - <==    Updates: 1
DEBUG 21-06-23 15:51:29[http-nio-8082-exec-4] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:51:29[http-nio-8082-exec-4] [selectOnlineynCheck:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 8 msec}
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614268600(String), I20210614268600(String), I20210614268600(String), 챗봇을 통해 납품처 핸드폰 번호 변경 처리 되었습니다. (주문번호 : I20210614268600,  수주건명 : 박희철(블루베리) )(String)
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/ ),
		        '챗봇을 통해 납품처 핸드폰 번호 변경 처리 되었습니다. (주문번호 : I20210614268600,  수주건명 : 박희철(블루베리) )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 5 msec}
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [insertApicallHist:143] - ==> Parameters: erp_orderHpChange(String), 챗봇 주문 납품처 핸드폰번호 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_orderHpChange' /*call_function*/ , '챗봇 주문 납품처 핸드폰번호 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 5 msec}
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [selectChginformData:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 11 msec}
DEBUG 21-06-23 15:51:30[http-nio-8082-exec-4] [selectChginformData:143] - <==      Total: 1
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [insertChgAddrReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45005', 'O47002', 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, '', TOO.ORM_NM, NULL, TOO.ORM_GPOST, ? /*chg_orm_gpost*/ , TOO.ORM_GADDR, ? /*chg_addr*/ , NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, ? /*chg_addr_dtl*/ , TOO.BDONG, ? /*chg_bdongcd*/ FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [insertChgAddrReq:143] - ==> Parameters: null, 서울 도봉구 해등로 195(String), 쌍문 삼익(String), 1132010500(String), I20210614268600(String)
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45005',
		'O47002',
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'',
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL /*chg_orm_gpost*/ ,
		TOO.ORM_GADDR,
		'서울 도봉구 해등로 195' /*chg_addr*/ ,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		'쌍문 삼익' /*chg_addr_dtl*/ ,
		TOO.BDONG,
		'1132010500' /*chg_bdongcd*/ 
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 12 msec}
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [insertChgAddrReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [updateToOrdmasAddr:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_GPOST = ? /*orm_gpost*/ , ORM_GADDR = ? /*chg_addr*/ , ADDR_DTL = ISNULL(? /*chg_addr_dtl*/ , ''), BDONG = ? /*bdongcd*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [updateToOrdmasAddr:143] - ==> Parameters: 01431(String), 서울 도봉구 해등로 195(String), 쌍문 삼익(String), null, I20210614268600(String)
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_GPOST = '01431' /*orm_gpost*/ , ORM_GADDR = '서울 도봉구 해등로 195' /*chg_addr*/ , ADDR_DTL = ISNULL('쌍문 삼익' /*chg_addr_dtl*/ , ''), BDONG = NULL /*bdongcd*/ 
	WHERE ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 41 msec}
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [updateToOrdmasAddr:143] - <==    Updates: 1
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614268600' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 7 msec}
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [selectOrmCryn:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [updateTcResmstAddr:143] - ==>  Preparing: UPDATE TC_RESMST SET TOWN_CD = ? /*chg_bdongcd*/ , USR_CD = 'CHATBOT', SYS_DT = GETDATE() WHERE COM_SSEC = 'C18C' AND ORM_NO = ? /*key_no*/ AND REM_DT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ) 
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [updateTcResmstAddr:143] - ==> Parameters: 1132010500(String), I20210614268600(String), I20210614268600(String)
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST 
	   SET TOWN_CD = '1132010500' /*chg_bdongcd*/ , USR_CD = 'CHATBOT', SYS_DT = GETDATE()
	 WHERE COM_SSEC = 'C18C'
	   AND ORM_NO = 'I20210614268600' /*key_no*/ 
	   AND REM_DT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/  )
 {executed in 13 msec}
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [updateTcResmstAddr:143] - <==    Updates: 1
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [selectTcplanmstYn:143] - ==>  Preparing: SELECT (CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TC_PLANMST TCP WITH (NOLOCK) WHERE TCP.ORM_NO = ? /*key_no*/ AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ) 
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [selectTcplanmstYn:143] - ==> Parameters: I20210614268600(String), I20210614268600(String)
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		(CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TC_PLANMST TCP WITH (NOLOCK)
	 WHERE TCP.ORM_NO = 'I20210614268600' /*key_no*/ 
	   AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/  )
 {executed in 34 msec}
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [selectTcplanmstYn:143] - <==      Total: 1
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [updateTcPlanmstAddr:143] - ==>  Preparing: UPDATE TC_PLANMST SET TOWN_CD = ? /*chg_bdongcd*/ , ORM_GPOST = ? /*chg_orm_gpost*/ , ORM_GADDR = ? /*chg_addr*/ + ' ' + ? /*chg_addr_dtl*/ , _USR_CD = 'CHATBOT', SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ) 
DEBUG 21-06-23 15:52:39[http-nio-8082-exec-7] [updateTcPlanmstAddr:143] - ==> Parameters: 1132010500(String), null, 서울 도봉구 해등로 195(String), 쌍문 삼익(String), I20210614268600(String), I20210614268600(String)
ERROR 21-06-23 15:52:39[http-nio-8082-exec-7] [sqltiming:150] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_PLANMST 
	   SET TOWN_CD = '1132010500' /*chg_bdongcd*/ , ORM_GPOST = NULL /*chg_orm_gpost*/ , ORM_GADDR = '서울 도봉구 해등로 195' /*chg_addr*/  + ' ' + '쌍문 삼익' /*chg_addr_dtl*/ , _USR_CD = 'CHATBOT', SYS_DT = GETDATE()
	 WHERE ORM_NO = 'I20210614268600' /*key_no*/ 
	   AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/  )
 {FAILED after 6 msec}
com.microsoft.sqlserver.jdbc.SQLServerException: 여러 부분으로 구성된 식별자 "TCP.PLM_CDT"은(는) 바인딩할 수 없습니다.
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDatabaseError(SQLServerException.java:262)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.getNextResult(SQLServerStatement.java:1624)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(SQLServerPreparedStatement.java:594)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PrepStmtExecCmd.doExecute(SQLServerPreparedStatement.java:524)
	at com.microsoft.sqlserver.jdbc.TDSCommand.execute(IOBuffer.java:7194)
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(SQLServerConnection.java:2979)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(SQLServerStatement.java:248)
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(SQLServerStatement.java:223)
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.execute(SQLServerPreparedStatement.java:505)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor120.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy117.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	at com.sun.proxy.$Proxy72.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:287)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:67)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy82.updateTcPlanmstAddr(Unknown Source)
	at com.fursys.chatbot.controllers.AppController.erp_OrderChangeAddressRequestProc(AppController.java:2394)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [insertChgAddrReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45005', 'O47002', 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, '', TOO.ORM_NM, NULL, TOO.ORM_GPOST, ? /*chg_orm_gpost*/ , TOO.ORM_GADDR, ? /*chg_addr*/ , NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, ? /*chg_addr_dtl*/ , TOO.BDONG, ? /*chg_bdongcd*/ FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [insertChgAddrReq:143] - ==> Parameters: null, 서울 도봉구 해등로 195(String), 쌍문 삼익(String), 1132010500(String), I20210614268600(String)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45005',
		'O47002',
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'',
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL /*chg_orm_gpost*/ ,
		TOO.ORM_GADDR,
		'서울 도봉구 해등로 195' /*chg_addr*/ ,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		'쌍문 삼익' /*chg_addr_dtl*/ ,
		TOO.BDONG,
		'1132010500' /*chg_bdongcd*/ 
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [insertChgAddrReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [updateToOrdmasAddr:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_GPOST = ? /*orm_gpost*/ , ORM_GADDR = ? /*chg_addr*/ , ADDR_DTL = ISNULL(? /*chg_addr_dtl*/ , ''), BDONG = ? /*bdongcd*/ WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [updateToOrdmasAddr:143] - ==> Parameters: 01431(String), 서울 도봉구 해등로 195(String), 쌍문 삼익(String), null, I20210614268600(String)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS SET ORM_GPOST = '01431' /*orm_gpost*/ , ORM_GADDR = '서울 도봉구 해등로 195' /*chg_addr*/ , ADDR_DTL = ISNULL('쌍문 삼익' /*chg_addr_dtl*/ , ''), BDONG = NULL /*bdongcd*/ 
	WHERE ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 31 msec}
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [updateToOrdmasAddr:143] - <==    Updates: 1
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614268600' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 7 msec}
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectOrmCryn:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [updateTcResmstAddr:143] - ==>  Preparing: UPDATE TC_RESMST SET TOWN_CD = ? /*chg_bdongcd*/ , USR_CD = 'CHATBOT', SYS_DT = GETDATE() WHERE COM_SSEC = 'C18C' AND ORM_NO = ? /*key_no*/ AND REM_DT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ) 
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [updateTcResmstAddr:143] - ==> Parameters: 1132010500(String), I20210614268600(String), I20210614268600(String)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST 
	   SET TOWN_CD = '1132010500' /*chg_bdongcd*/ , USR_CD = 'CHATBOT', SYS_DT = GETDATE()
	 WHERE COM_SSEC = 'C18C'
	   AND ORM_NO = 'I20210614268600' /*key_no*/ 
	   AND REM_DT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/  )
 {executed in 4 msec}
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [updateTcResmstAddr:143] - <==    Updates: 1
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectTcplanmstYn:143] - ==>  Preparing: SELECT (CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TC_PLANMST TCP WITH (NOLOCK) WHERE TCP.ORM_NO = ? /*key_no*/ AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ) 
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectTcplanmstYn:143] - ==> Parameters: I20210614268600(String), I20210614268600(String)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		(CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TC_PLANMST TCP WITH (NOLOCK)
	 WHERE TCP.ORM_NO = 'I20210614268600' /*key_no*/ 
	   AND TCP.PLM_CDT = ( SELECT TOO.ORM_CDT FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/  )
 {executed in 9 msec}
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectTcplanmstYn:143] - <==      Total: 1
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [updateToChgmasChgAddrStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [updateToChgmasChgAddrStat:143] - ==> Parameters: I20210614268600(String), 01(String)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614268600' /*key_no*/ 
       AND RQT_SEQ = '01' /*req_seq*/
 {executed in 31 msec}
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [updateToChgmasChgAddrStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectOnlineynCheck:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614268600(String), I20210614268600(String), I20210614268600(String), 챗봇을 통해 주소변경처리 되었습니다. (주문번호 : I20210614268600,  수주건명 : 박희철(블루베리) )(String)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/ ),
		        '챗봇을 통해 주소변경처리 되었습니다. (주문번호 : I20210614268600,  수주건명 : 박희철(블루베리) )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 4 msec}
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeAddressRequestProc(String), 챗봇 주문 주소변경요청 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeAddressRequestProc' /*call_function*/ , '챗봇 주문 주소변경요청 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 5 msec}
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectChginformData:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 11 msec}
DEBUG 21-06-23 15:56:43[http-nio-8082-exec-8] [selectChginformData:143] - <==      Total: 1
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectSigongYn:143] - ==>  Preparing: SELECT ISNULL(ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectSigongYn:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(ORM_CRYN, 'N') AS DATA1,
		   TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectSigongYn:143] - <==      Total: 1
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectSchDivYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectSchDivYn:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.SCHDIV_YN), 'N') else 'N' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 6 msec}
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectSchDivYn:143] - <==      Total: 1
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectSigongConfirmYn:143] - ==>  Preparing: SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectSigongConfirmYn:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ( case when count(*) > 0 then ISNULL(max(TCR.COM_RFG), 'C141') else 'C141' end ) AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 3 msec}
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectSigongConfirmYn:143] - <==      Total: 1
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectChgstatusYn:143] - ==>  Preparing: SELECT ( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1 FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = ? /*key_no*/ AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' ) 
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectChgstatusYn:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		( CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END ) AS DATA1
	  FROM TO_CHGMAS TOC WITH (NOLOCK)
	 WHERE TOC.ORM_NO = 'I20210614268600' /*key_no*/ 
	   AND ( TOC.ING_STT= 'O46001' OR TOC.ING_STT= 'O46005' OR TOC.ING_STT= 'O46006' OR TOC.ING_STT= 'O46007' OR TOC.ING_STT= 'O46008' OR TOC.ING_STT= 'O46010' )
 {executed in 4 msec}
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [selectChgstatusYn:143] - <==      Total: 1
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [insertOrmCdtChangeReq:143] - ==>  Preparing: INSERT INTO TO_CHGMAS ( ORM_NO ,RQT_SEQ ,VND_CD ,CMP_CD ,AGT_CD ,RQT_DT ,RQT_TYP ,ETC_TYP ,ING_STT ,RQT_USR ,EMC_YN ,OUT_TYP ,ORM_CDT ,CHG_CDT ,ORM_NM ,CHG_NM ,ORM_GPOST ,CHG_ZIPCD ,ORM_GADDR ,CHG_ADDR ,ORM_CTM ,CHG_CTM ,CHG_RMK ,RQT_RSN ,ETC_RMK ,USR_CD ,SYS_DT ,ORM_GOOD ,CHG_GOOD ,ORM_GEMP ,CHG_GEMP ,DET_CD ,CHG_DET_CD ,ORM_GEMPHP ,CHG_GEMPHP ,ORM_HDPHONE ,CHG_HDPHONE ,ORM_SPC ,CHG_SPC ,AUTO_BLOCK_KND ,MULTI_CHGKND ,CHGRQT_REASON ,FST_USR ,FST_SYS_DT ,ADDR_DTL ,CHG_ADDR_DTL ,BDONG ,CHG_BDONG ) SELECT TOO.ORM_NO, (SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) ) FROM TO_CHGMAS TOC WITH (NOLOCK) WHERE TOC.ORM_NO = TOO.ORM_NO ), TOO.VND_CD, TOO.CMP_CD, TOO.AGT_CD, GETDATE(), 'O45002', NULL, 'O46001', 'CHATBOT', 'N', '', TOO.ORM_CDT, ? /*req_dt*/ , TOO.ORM_NM, NULL, TOO.ORM_GPOST, NULL, TOO.ORM_GADDR, NULL, NULL, NULL, NULL, NULL, NULL, 'CHATBOT', GETDATE(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, '사유', 'CHATBOT', GETDATE(), TOO.ADDR_DTL, NULL, TOO.BDONG, NULL FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [insertOrmCdtChangeReq:143] - ==> Parameters: 20210628(String), I20210614268600(String)
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_CHGMAS (
			      ORM_NO
			      ,RQT_SEQ
			      ,VND_CD
			      ,CMP_CD
			      ,AGT_CD
			      ,RQT_DT
			      ,RQT_TYP
			      ,ETC_TYP
			      ,ING_STT
			      ,RQT_USR
			      ,EMC_YN
			      ,OUT_TYP
			      ,ORM_CDT
			      ,CHG_CDT
			      ,ORM_NM
			      ,CHG_NM
			      ,ORM_GPOST
			      ,CHG_ZIPCD
			      ,ORM_GADDR
			      ,CHG_ADDR
			      ,ORM_CTM
			      ,CHG_CTM
			      ,CHG_RMK
			      ,RQT_RSN
			      ,ETC_RMK
			      ,USR_CD
			      ,SYS_DT
			      ,ORM_GOOD
			      ,CHG_GOOD
			      ,ORM_GEMP
			      ,CHG_GEMP
			      ,DET_CD
			      ,CHG_DET_CD
			      ,ORM_GEMPHP
			      ,CHG_GEMPHP
			      ,ORM_HDPHONE
			      ,CHG_HDPHONE
			      ,ORM_SPC
			      ,CHG_SPC
			      ,AUTO_BLOCK_KND
			      ,MULTI_CHGKND
			      ,CHGRQT_REASON
			      ,FST_USR
			      ,FST_SYS_DT
			      ,ADDR_DTL
			      ,CHG_ADDR_DTL
			      ,BDONG
			      ,CHG_BDONG
	      )
	SELECT
		TOO.ORM_NO,
		(SELECT (SELECT RIGHT('00' + CONVERT(VARCHAR(3), isnull(MAX(TOC.RQT_SEQ), 0) + 1) , 2) )
	      FROM TO_CHGMAS TOC WITH (NOLOCK)
	     WHERE TOC.ORM_NO = TOO.ORM_NO ),
		TOO.VND_CD,
		TOO.CMP_CD,
		TOO.AGT_CD,
		GETDATE(),
		'O45002',
		NULL,
		'O46001',
		'CHATBOT',
		'N',
		'',
		TOO.ORM_CDT,
		'20210628' /*req_dt*/ ,
		TOO.ORM_NM,
		NULL,
		TOO.ORM_GPOST,
		NULL,
		TOO.ORM_GADDR,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		'CHATBOT',
		GETDATE(),
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL,
		NULL, 
		NULL,
		NULL,
		NULL,
	   '사유',
	   'CHATBOT',
	   GETDATE(),
		TOO.ADDR_DTL,
		NULL,
		TOO.BDONG,
		NULL
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [insertOrmCdtChangeReq:143] - <==    Updates: 1
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [insertApicallHist:143] - ==> Parameters: erp_OrderChangeDtRequest(String), 챗봇 주문 도착일정 변경(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderChangeDtRequest' /*call_function*/ , '챗봇 주문 도착일정 변경' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 4 msec}
DEBUG 21-06-23 15:57:48[http-nio-8082-exec-10] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:58:32[http-nio-8082-exec-1] [executeProGetNo:143] - ==>  Preparing: DECLARE @RTN_NO NVARCHAR(20) EXEC PRO_GETNO_CHATBOT 'orm', ? /*key_no*/ , 'div', '', '', @PSOUTPUT = @RTN_NO OUTPUT SELECT @RTN_NO DATA1 
DEBUG 21-06-23 15:58:32[http-nio-8082-exec-1] [executeProGetNo:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:58:32[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DECLARE @RTN_NO NVARCHAR(20)
	EXEC PRO_GETNO_CHATBOT 'orm', 'I20210614268600' /*key_no*/ , 'div', '', '',  @PSOUTPUT = @RTN_NO OUTPUT
	SELECT @RTN_NO DATA1
 {executed in 36 msec}
DEBUG 21-06-23 15:58:32[http-nio-8082-exec-1] [executeProGetNo:143] - <==      Total: 1
DEBUG 21-06-23 15:58:32[http-nio-8082-exec-1] [selectToChgmasChgdt:143] - ==>  Preparing: SELECT TOC.CHG_CDT AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:58:32[http-nio-8082-exec-1] [selectToChgmasChgdt:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:58:32[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOC.CHG_CDT AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614268600' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 14 msec}
DEBUG 21-06-23 15:58:32[http-nio-8082-exec-1] [selectToChgmasChgdt:143] - <==      Total: 1
DEBUG 21-06-23 15:58:32[http-nio-8082-exec-1] [insertNewOrdMaster:143] - ==>  Preparing: INSERT INTO TO_ORDMAS ( ORM_NO ,ORM_NM ,COM_ORD ,ORM_SSEC ,VND_CD ,AGT_CD ,CMP_CD ,ORM_ORDDT ,ORM_STAT ,ORM_RDT ,ORM_ADT ,ORM_CDT ,ORM_AGTCST ,ORM_PURCST ,ORM_VISIT ,ORM_PURRSN ,ORM_GGUBUN ,ORM_GOOD ,ORM_GPOST ,ORM_GADDR ,ORM_GEMP ,DET_CD ,ORM_GEMPHP ,ORM_HDPHONE ,ORM_GSPC ,ORM_DOWNST ,ORM_GRTTON ,ORM_DOWNNM ,ORM_DPOST ,ORM_DADDR ,ORM_CONSP ,ORM_SALEMP ,ORM_AGTEMP ,PRJ_CD ,ORM_REBAGT ,ORM_CMPCD ,ORM_SPC ,ORM_PART ,EPI_PINO ,ORM_CRYN ,ORM_CSTYN ,ORM_CSTRATE ,ORM_COMRATE ,USR_CD ,SYS_DT ,ORM_WMSSEC ,WMS_YN ,PLM_PTM ,PLM_EVT ,PLM_ITR ,FRM_NO ,ORM_PSTS ,ADDR_DTL ,BDONG ,ORM_ATTR ,DLV_KIND ,PLM_MERG_NO ,COM_BRD ,LDDR_YN ,CNT_CDT ,CNT_ATTR ,SHP_NO ,FST_USR ,FST_SYS_DT ,PAY_DUE_DT ,APT_SEQ ,PROMO_SERIAL ,LDDR_FREE ,ADDR_GUBUN ) SELECT ? /*new_orm_no*/ ,TOO.ORM_NM ,TOO.COM_ORD ,TOO.ORM_SSEC ,TOO.VND_CD ,TOO.AGT_CD ,TOO.CMP_CD ,TOO.ORM_ORDDT ,TOO.ORM_STAT ,TOO.ORM_RDT ,TOO.ORM_ADT ,? /*chg_orm_cdt*/ ,TOO.ORM_AGTCST ,TOO.ORM_PURCST ,TOO.ORM_VISIT ,TOO.ORM_PURRSN ,TOO.ORM_GGUBUN ,TOO.ORM_GOOD ,TOO.ORM_GPOST ,TOO.ORM_GADDR ,TOO.ORM_GEMP ,TOO.DET_CD ,TOO.ORM_GEMPHP ,TOO.ORM_HDPHONE ,TOO.ORM_GSPC ,TOO.ORM_DOWNST ,TOO.ORM_GRTTON ,TOO.ORM_DOWNNM ,TOO.ORM_DPOST ,TOO.ORM_DADDR ,TOO.ORM_CONSP ,TOO.ORM_SALEMP ,TOO.ORM_AGTEMP ,TOO.PRJ_CD ,TOO.ORM_REBAGT ,TOO.ORM_CMPCD ,TOO.ORM_SPC ,TOO.ORM_PART ,TOO.EPI_PINO ,TOO.ORM_CRYN ,TOO.ORM_CSTYN ,TOO.ORM_CSTRATE ,TOO.ORM_COMRATE ,TOO.USR_CD ,GETDATE() ,TOO.ORM_WMSSEC ,TOO.WMS_YN ,TOO.PLM_PTM ,TOO.PLM_EVT ,TOO.PLM_ITR ,TOO.FRM_NO ,TOO.ORM_PSTS ,TOO.ADDR_DTL ,TOO.BDONG ,TOO.ORM_ATTR ,TOO.DLV_KIND ,TOO.PLM_MERG_NO ,TOO.COM_BRD ,TOO.LDDR_YN ,TOO.CNT_CDT ,TOO.CNT_ATTR ,TOO.SHP_NO ,TOO.FST_USR ,GETDATE() ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I',? /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990')) END) ,TOO.APT_SEQ ,TOO.PROMO_SERIAL ,TOO.LDDR_FREE ,TOO.ADDR_GUBUN FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:58:32[http-nio-8082-exec-1] [insertNewOrdMaster:143] - ==> Parameters: I20210614268601(String), 20210628(String), 20210628(String), 20210628(String), I20210614268600(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDMAS (
		  ORM_NO               
          ,ORM_NM
          ,COM_ORD
          ,ORM_SSEC
          ,VND_CD
          ,AGT_CD
          ,CMP_CD
          ,ORM_ORDDT   
          ,ORM_STAT                
          ,ORM_RDT
          ,ORM_ADT
          ,ORM_CDT             
          ,ORM_AGTCST
          ,ORM_PURCST
          ,ORM_VISIT   
          ,ORM_PURRSN
          ,ORM_GGUBUN
          ,ORM_GOOD
          ,ORM_GPOST
          ,ORM_GADDR
          ,ORM_GEMP
          ,DET_CD   
          ,ORM_GEMPHP
          ,ORM_HDPHONE
          ,ORM_GSPC
          ,ORM_DOWNST
          ,ORM_GRTTON
          ,ORM_DOWNNM
          ,ORM_DPOST   
          ,ORM_DADDR
          ,ORM_CONSP
          ,ORM_SALEMP
          ,ORM_AGTEMP
          ,PRJ_CD
          ,ORM_REBAGT
          ,ORM_CMPCD   
          ,ORM_SPC
          ,ORM_PART
          ,EPI_PINO
          ,ORM_CRYN
          ,ORM_CSTYN
          ,ORM_CSTRATE
          ,ORM_COMRATE
          ,USR_CD
          ,SYS_DT
          ,ORM_WMSSEC
          ,WMS_YN
          ,PLM_PTM
          ,PLM_EVT
          ,PLM_ITR
          ,FRM_NO
          ,ORM_PSTS
  		  ,ADDR_DTL
  		  ,BDONG
  		  ,ORM_ATTR
  		  ,DLV_KIND
  		  ,PLM_MERG_NO
  		  ,COM_BRD
  		  ,LDDR_YN
  		  ,CNT_CDT
  		  ,CNT_ATTR 
  		  ,SHP_NO 
  		 ,FST_USR       
		 ,FST_SYS_DT 
		 ,PAY_DUE_DT
		 ,APT_SEQ
		 ,PROMO_SERIAL
		 ,LDDR_FREE
		 ,ADDR_GUBUN
 	      )
	SELECT
		  'I20210614268601' /*new_orm_no*/            
          ,TOO.ORM_NM
          ,TOO.COM_ORD
          ,TOO.ORM_SSEC
          ,TOO.VND_CD
          ,TOO.AGT_CD
          ,TOO.CMP_CD
          ,TOO.ORM_ORDDT   
          ,TOO.ORM_STAT                
          ,TOO.ORM_RDT
          ,TOO.ORM_ADT
          ,'20210628' /*chg_orm_cdt*/          
          ,TOO.ORM_AGTCST
          ,TOO.ORM_PURCST
          ,TOO.ORM_VISIT   
          ,TOO.ORM_PURRSN
          ,TOO.ORM_GGUBUN
          ,TOO.ORM_GOOD
          ,TOO.ORM_GPOST
          ,TOO.ORM_GADDR
          ,TOO.ORM_GEMP
          ,TOO.DET_CD   
          ,TOO.ORM_GEMPHP
          ,TOO.ORM_HDPHONE
          ,TOO.ORM_GSPC
          ,TOO.ORM_DOWNST
          ,TOO.ORM_GRTTON
          ,TOO.ORM_DOWNNM
          ,TOO.ORM_DPOST   
          ,TOO.ORM_DADDR
          ,TOO.ORM_CONSP
          ,TOO.ORM_SALEMP
          ,TOO.ORM_AGTEMP
          ,TOO.PRJ_CD
          ,TOO.ORM_REBAGT
          ,TOO.ORM_CMPCD   
          ,TOO.ORM_SPC
          ,TOO.ORM_PART
          ,TOO.EPI_PINO
          ,TOO.ORM_CRYN
          ,TOO.ORM_CSTYN
          ,TOO.ORM_CSTRATE
          ,TOO.ORM_COMRATE
          ,TOO.USR_CD
          ,GETDATE()
          ,TOO.ORM_WMSSEC
          ,TOO.WMS_YN
          ,TOO.PLM_PTM
          ,TOO.PLM_EVT
          ,TOO.PLM_ITR
          ,TOO.FRM_NO
          ,TOO.ORM_PSTS
  		  ,TOO.ADDR_DTL
  		  ,TOO.BDONG
  		  ,TOO.ORM_ATTR
  		  ,TOO.DLV_KIND
  		  ,TOO.PLM_MERG_NO
  		  ,TOO.COM_BRD
  		  ,TOO.LDDR_YN
  		  ,TOO.CNT_CDT
  		  ,TOO.CNT_ATTR 
  		  ,TOO.SHP_NO 
  		  ,TOO.FST_USR       
		  ,GETDATE() 
		  ,(SELECT CASE WHEN ISNULL(TOO.ORM_CDT,'') != '' AND ISNULL('20210628' /*chg_orm_cdt*/ ,'') != '' THEN 
		  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT('T01I','20210628' /*chg_orm_cdt*/ ,TOO.COM_BRD) ),120),' 23:59:59.990'))   
		   END)
		  ,TOO.APT_SEQ
		  ,TOO.PROMO_SERIAL
		  ,TOO.LDDR_FREE
		  ,TOO.ADDR_GUBUN	
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 171 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertNewOrdMaster:143] - <==    Updates: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertNewOrdDetail:143] - ==>  Preparing: INSERT INTO TO_ORDDET ( ORM_NO ,ORD_SSEQ ,ORD_ISEQ ,SET_CD ,COL_SCD ,ITM_CD ,COL_CD ,ORD_QTY ,ORD_CST ,TAX_AMT ,STK_CD ,ORD_PURCD ,ORD_GOODSEC ,ORD_UPCD ,ORD_WHSCD ,ORD_TWHSCD ,ORD_CURCD ,ORD_FCST ,ORD_QSTAT ,ORD_RMK ,ORD_UNFOLDING ,ORD_ENDYN ,USR_CD ,SYS_DT ,ORD_PIDSEQ ,ORM_PLANDT ,COM_ARESEC ,CAR_NO ,PMS_NO ,COM_TONSEC ,DOK_NO ,ORM_PMSYN ,ORM_PMSND ,COM_SCD ,STI_CD ,COM_CTSEC ,COM_RFG ,WMS_YN ,PID_SEQ ,ORD_ITMCOL ,A.SET_QTY ,A.SDT_QTY ,A.BSET_CD ,A.BCOL_CD ,A.MNF_ADT ,A.WH_ADT ,FST_USR ,FST_SYS_DT ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST ) SELECT ? /*new_orm_no*/ ,TOD.ORD_SSEQ ,TOD.ORD_ISEQ ,TOD.SET_CD ,TOD.COL_SCD ,TOD.ITM_CD ,TOD.COL_CD ,TOD.ORD_QTY ,TOD.ORD_CST ,TOD.TAX_AMT ,TOD.STK_CD ,TOD.ORD_PURCD ,TOD.ORD_GOODSEC ,TOD.ORD_UPCD ,TOD.ORD_WHSCD ,TOD.ORD_TWHSCD ,TOD.ORD_CURCD ,TOD.ORD_FCST ,TOD.ORD_QSTAT ,TOD.ORD_RMK ,TOD.ORD_UNFOLDING ,TOD.ORD_ENDYN ,TOD.USR_CD ,GETDATE() ,TOD.ORD_PIDSEQ ,ORM_PLANDT ,TOD.COM_ARESEC ,TOD.CAR_NO ,TOD.PMS_NO ,TOD.COM_TONSEC ,TOD.DOK_NO ,TOD.ORM_PMSYN ,TOD.ORM_PMSND ,TOD.COM_SCD ,TOD.STI_CD ,TOD.COM_CTSEC ,TOD.COM_RFG ,TOD.WMS_YN ,TOD.PID_SEQ ,TOD.ORD_ITMCOL ,TOD.SET_QTY ,TOD.SDT_QTY ,TOD.BSET_CD ,TOD.BCOL_CD ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,( SELECT T.CAL_YMD FROM ( SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM ,CAL_YMD FROM TT_CALENDAR WHERE COM_CMP = CAST(? /*com_cmp*/ AS VARCHAR) AND COM_CSEC = 'T32001' AND CAL_SEC = 'T33N' AND CAL_YMD < CAST(? /*chg_orm_cdt*/ AS VARCHAR) ) T WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0) FROM TO_DELIVEDT_ITM WHERE CMP_CD = CAST(? /*com_cmp*/ AS VARCHAR) AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR) AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) )) ) ,FST_USR ,GETDATE() ,DC_AMT ,DC_CST ,PROMO_DC_AMT ,PROMO_DC_CST ,GIFT_YN ,ORG_PROMO_CST ,JEJU_CST ,IOP_SALCST FROM TO_ORDDET TOD WITH (NOLOCK) WHERE TOD.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertNewOrdDetail:143] - ==> Parameters: I20210614268601(String), T01I(String), 20210628(String), T01I(String), T01I(String), 20210628(String), T01I(String), I20210614268600(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TO_ORDDET (
		  ORM_NO
	      ,ORD_SSEQ
	      ,ORD_ISEQ
	      ,SET_CD
	      ,COL_SCD
	      ,ITM_CD
	      ,COL_CD
	      ,ORD_QTY
	      ,ORD_CST
	      ,TAX_AMT
	      ,STK_CD
	      ,ORD_PURCD
	      ,ORD_GOODSEC
	      ,ORD_UPCD
	      ,ORD_WHSCD
	      ,ORD_TWHSCD
	      ,ORD_CURCD
	      ,ORD_FCST
	      ,ORD_QSTAT
	      ,ORD_RMK
	      ,ORD_UNFOLDING
	      ,ORD_ENDYN
	      ,USR_CD
	      ,SYS_DT
	      ,ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,COM_ARESEC
	      ,CAR_NO
	      ,PMS_NO
	      ,COM_TONSEC
	      ,DOK_NO
	      ,ORM_PMSYN
	      ,ORM_PMSND
	      ,COM_SCD
	      ,STI_CD
	      ,COM_CTSEC
	      ,COM_RFG
	      ,WMS_YN
	      ,PID_SEQ
	      ,ORD_ITMCOL
	      ,A.SET_QTY
          ,A.SDT_QTY
          ,A.BSET_CD
          ,A.BCOL_CD
          ,A.MNF_ADT
          ,A.WH_ADT
		  ,FST_USR       
		  ,FST_SYS_DT
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
 	      )
	SELECT
		  'I20210614268601' /*new_orm_no*/ 
	      ,TOD.ORD_SSEQ
	      ,TOD.ORD_ISEQ
	      ,TOD.SET_CD
	      ,TOD.COL_SCD
	      ,TOD.ITM_CD
	      ,TOD.COL_CD
	      ,TOD.ORD_QTY
	      ,TOD.ORD_CST
	      ,TOD.TAX_AMT
	      ,TOD.STK_CD
	      ,TOD.ORD_PURCD
	      ,TOD.ORD_GOODSEC
	      ,TOD.ORD_UPCD
	      ,TOD.ORD_WHSCD
	      ,TOD.ORD_TWHSCD
	      ,TOD.ORD_CURCD
	      ,TOD.ORD_FCST
	      ,TOD.ORD_QSTAT
	      ,TOD.ORD_RMK
	      ,TOD.ORD_UNFOLDING
	      ,TOD.ORD_ENDYN
	      ,TOD.USR_CD
	      ,GETDATE()
	      ,TOD.ORD_PIDSEQ
	      ,ORM_PLANDT
	      ,TOD.COM_ARESEC
	      ,TOD.CAR_NO
	      ,TOD.PMS_NO
	      ,TOD.COM_TONSEC
	      ,TOD.DOK_NO
	      ,TOD.ORM_PMSYN
	      ,TOD.ORM_PMSND
	      ,TOD.COM_SCD
	      ,TOD.STI_CD
	      ,TOD.COM_CTSEC
	      ,TOD.COM_RFG
	      ,TOD.WMS_YN
	      ,TOD.PID_SEQ
	      ,TOD.ORD_ITMCOL
	      ,TOD.SET_QTY
          ,TOD.SDT_QTY
          ,TOD.BSET_CD
          ,TOD.BCOL_CD
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210628' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(PRDCTNDAYS, 0) 
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
          ,(    SELECT T.CAL_YMD
				  FROM (
						SELECT ROW_NUMBER() OVER(ORDER BY CAL_YMD DESC) AS RNUM
							  ,CAL_YMD
						  FROM TT_CALENDAR
						 WHERE COM_CMP  = CAST('T01I' /*com_cmp*/  AS VARCHAR)
						   AND COM_CSEC = 'T32001'
						   AND CAL_SEC  = 'T33N'
						   AND CAL_YMD   <  CAST('20210628' /*chg_orm_cdt*/  AS VARCHAR)
						) T
				 WHERE RNUM = ABS((SELECT ISNULL(LGISTDAYS , 0)
												  FROM TO_DELIVEDT_ITM
												 WHERE CMP_CD = CAST('T01I' /*com_cmp*/  AS VARCHAR)
												   AND ITM_CD = CAST(TOD.ITM_CD AS VARCHAR)
												   AND COL_CD = CAST(TOD.COL_CD AS VARCHAR) ))
			)
		  ,FST_USR       
		  ,GETDATE()
		  ,DC_AMT
    	  ,DC_CST
    	  ,PROMO_DC_AMT
    	  ,PROMO_DC_CST
    	  ,GIFT_YN
    	  ,ORG_PROMO_CST
    	  ,JEJU_CST
    	  ,IOP_SALCST               
	  FROM TO_ORDDET TOD WITH (NOLOCK)
	 WHERE TOD.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 384 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertNewOrdDetail:143] - <==    Updates: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [deleteRecdRenD:143] - ==>  Preparing: DELETE FROM TO_RECE_REN WHERE REC_NO = CAST(? /*key_no*/ AS VARCHAR) 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [deleteRecdRenD:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE FROM TO_RECE_REN
     WHERE REC_NO = CAST('I20210614268600' /*key_no*/  AS VARCHAR)
 {executed in 11 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [deleteRecdRenD:143] - <==    Updates: 3
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertRecdRenD:143] - ==>  Preparing: INSERT INTO TO_RECE_REN (REC_NO , ITM_CD ,COL_CD ,REC_QTY ,ORM_RDT ,ORM_RDT_2 ,ORM_RDT_2_YN ,REC_DT_1 ,REC_DT_2 ,COM_CMP ,IOP_FINEST ,COM_GOODCD ,VND_CD ,COM_STKSEC ,COM_STDSEC ,IOP_MNFCST ) SELECT D.ORM_NO ,D.ITM_CD ,D.COL_CD ,SUM(D.ORD_QTY) ,M.ORM_RDT ,NULL ,NULL ,NULL ,NULL ,CAST('T01I' AS VARCHAR) ,C.IOP_FINEST ,C.COM_GOODCD ,C.VND_CD ,S.COM_STKSEC ,S.COM_STDSEC ,C.IOP_MNFCST FROM TO_ORDMAS M WITH (NOLOCK) ,TO_ORDDET D WITH (NOLOCK) ,TT_ITMCOP C WITH (NOLOCK) ,TT_ITMMST S WITH (NOLOCK) WHERE M.ORM_NO = D.ORM_NO AND D.ITM_CD = C.ITM_CD AND D.COL_CD = C.COL_CD AND C.ITM_CD = S.ITM_CD AND C.COL_CD = S.COL_CD AND D.ORM_NO = CAST(? /*key_no*/ AS VARCHAR) AND C.COM_CMP = CAST('T01I' AS VARCHAR) GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertRecdRenD:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT 
	  INTO TO_RECE_REN 
	            (REC_NO
	             , ITM_CD
	             ,COL_CD
	             ,REC_QTY
	             ,ORM_RDT
	             ,ORM_RDT_2
	             ,ORM_RDT_2_YN
	             ,REC_DT_1
	             ,REC_DT_2
                ,COM_CMP
                ,IOP_FINEST
                ,COM_GOODCD
                ,VND_CD
                ,COM_STKSEC
                ,COM_STDSEC
                ,IOP_MNFCST
                )
	SELECT D.ORM_NO 
	           ,D.ITM_CD 
	           ,D.COL_CD 
	           ,SUM(D.ORD_QTY) 
	           ,M.ORM_RDT 
	           ,NULL
	           ,NULL 
	           ,NULL 
	           ,NULL 
			   ,CAST('T01I' AS VARCHAR) 
			   ,C.IOP_FINEST 
			   ,C.COM_GOODCD 
			   ,C.VND_CD 
			   ,S.COM_STKSEC 
			   ,S.COM_STDSEC 
			   ,C.IOP_MNFCST	   
	FROM TO_ORDMAS M WITH (NOLOCK)
	         ,TO_ORDDET D WITH (NOLOCK)
	         ,TT_ITMCOP C WITH (NOLOCK)
	         ,TT_ITMMST S WITH (NOLOCK)
	WHERE M.ORM_NO = D.ORM_NO
	AND D.ITM_CD = C.ITM_CD 
	AND D.COL_CD = C.COL_CD
	AND C.ITM_CD = S.ITM_CD 
	AND C.COL_CD = S.COL_CD
	AND D.ORM_NO = CAST('I20210614268600' /*key_no*/  AS VARCHAR)
	AND C.COM_CMP = CAST('T01I' AS VARCHAR) 
	GROUP BY D.ORM_NO, D.ITM_CD, D.COL_CD, M.ORM_RDT, 
				    C.IOP_FINEST, C.COM_GOODCD, C.VND_CD, S.COM_STKSEC, S.COM_STDSEC, C.IOP_MNFCST
 {executed in 5 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertRecdRenD:143] - <==    Updates: 3
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectToChgmasMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(RQT_SEQ), '01') AS DATA1 FROM TO_CHGMAS TOC WITH(NOLOCK) WHERE ORM_NO = ? /*key_no*/ AND RQT_TYP = 'O45002' AND ING_STT = 'O46001' 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectToChgmasMaxSeqNo:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(MAX(RQT_SEQ), '01') AS DATA1
	  FROM TO_CHGMAS TOC WITH(NOLOCK)
	 WHERE ORM_NO = 'I20210614268600' /*key_no*/ 
	   AND RQT_TYP = 'O45002'
       AND ING_STT = 'O46001'
 {executed in 6 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectToChgmasMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateToOrdChgmasStat:143] - ==>  Preparing: UPDATE TO_CHGMAS SET ING_STT = 'O46002' ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() ,EMC_YN = 'N' ,OUT_TYP = ' ' ,MULTI_CHGKND = '' ,NEW_ORMNO = ? /*new_orm_no*/ WHERE ORM_NO = ? /*key_no*/ AND RQT_SEQ = ? /*req_seq*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateToOrdChgmasStat:143] - ==> Parameters: I20210614268601(String), I20210614268600(String), 02(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_CHGMAS               									
       SET ING_STT = 'O46002' 
            ,CHG_RMK = 'CHATBOT으로 AUTO 변경처리 됨(날짜변경)'
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
            ,EMC_YN = 'N'
            ,OUT_TYP = '      ' 
            ,MULTI_CHGKND = ''
            ,NEW_ORMNO = 'I20210614268601' /*new_orm_no*/ 
       WHERE ORM_NO = 'I20210614268600' /*key_no*/ 
       AND RQT_SEQ = '02' /*req_seq*/
 {executed in 6 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateToOrdChgmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateToOrdmasStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_STAT = 'O08003' ,USR_CD = 'CHATBOT' ,SYS_DT = GETDATE() WHERE ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateToOrdmasStat:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS              									
       SET ORM_STAT = 'O08003' 
            ,USR_CD = 'CHATBOT' 
            ,SYS_DT = GETDATE()
       WHERE ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 182 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateToOrdmasStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectOrmCryn:143] - ==>  Preparing: SELECT ISNULL(TOO.ORM_CRYN, 'N') AS DATA1, TOO.ORM_CDT AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectOrmCryn:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL(TOO.ORM_CRYN, 'N') AS DATA1,
		TOO.ORM_CDT AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 4 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectOrmCryn:143] - <==      Total: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectSigongReserveYn:143] - ==>  Preparing: SELECT ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectSigongReserveYn:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		ISNULL((CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END), 'N') AS DATA1
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 8 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectSigongReserveYn:143] - <==      Total: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectRemdtRemseq:143] - ==>  Preparing: SELECT TCR.REM_DT AS DATA1, TCR.REM_SEQ AS DATA2, ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3 FROM TC_RESMST TCR WITH (NOLOCK) WHERE TCR.COM_SSEC = 'C18C' AND TCR.ORM_NO = ? /*key_no*/ AND TCR.REM_DT = ? /*rem_dt*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectRemdtRemseq:143] - ==> Parameters: I20210614268600(String), 20210618(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TCR.REM_DT AS DATA1,
		TCR.REM_SEQ AS DATA2,
		ISNULL(TCR.PLM_NO, 'XXXX') AS DATA3
	  FROM TC_RESMST TCR WITH (NOLOCK)
	 WHERE TCR.COM_SSEC = 'C18C'
	   AND TCR.ORM_NO = 'I20210614268600' /*key_no*/ 
	   AND TCR.REM_DT = '20210618' /*rem_dt*/
 {executed in 5 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectRemdtRemseq:143] - <==      Total: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectTcMaxSeqNo:143] - ==>  Preparing: SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1 FROM TC_SEQNOINF WHERE COM_AGSEC = ? /*com_agsec*/ AND COM_NOSEC = 'C08CRS' AND SEQ_SETDT = ? /*req_dt*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectTcMaxSeqNo:143] - ==> Parameters: C02I(String), 20210628(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT ISNULL(MAX(SEQ_NO), 0) + 1 AS VALUE1
		  FROM TC_SEQNOINF 
		 WHERE COM_AGSEC = 'C02I' /*com_agsec*/ 	
		   AND COM_NOSEC = 'C08CRS' 
		   AND SEQ_SETDT = '20210628' /*req_dt*/
 {executed in 6 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectTcMaxSeqNo:143] - <==      Total: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertTcSeqnoinf:143] - ==>  Preparing: MERGE INTO TC_SEQNOINF SI USING (SELECT ? /*com_agsec*/ AS COM_AGSEC ,? /*req_dt*/ AS SEQ_SETDT) A ON SI.COM_AGSEC = A.COM_AGSEC AND SI.SEQ_SETDT = A.SEQ_SETDT AND SI.COM_NOSEC = 'C08CRS' WHEN MATCHED THEN UPDATE SET SEQ_NO = ? /*max_seq_no*/ WHEN NOT MATCHED THEN INSERT (COM_AGSEC ,COM_NOSEC ,SEQ_SETDT ,SEQ_NO ,USR_CD ,SYS_DT ) VALUES(? /*com_agsec*/ ,'C08CRS' ,? /*req_dt*/ ,? /*max_seq_no*/ ,'CHATBOT' ,GETDATE() ); 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertTcSeqnoinf:143] - ==> Parameters: C02I(String), 20210628(String), 421(Integer), C02I(String), 20210628(String), 421(Integer)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. MERGE INTO TC_SEQNOINF SI
    	 USING (SELECT 'C02I' /*com_agsec*/  AS COM_AGSEC
    	              ,'20210628' /*req_dt*/  AS SEQ_SETDT) A
       		ON SI.COM_AGSEC = A.COM_AGSEC
       	   AND SI.SEQ_SETDT = A.SEQ_SETDT
       	   AND SI.COM_NOSEC = 'C08CRS'
          WHEN MATCHED THEN
            UPDATE 
               SET SEQ_NO = 421 /*max_seq_no*/ 
          WHEN NOT MATCHED THEN
		    INSERT
		      	  (COM_AGSEC
		      	  ,COM_NOSEC
		      	  ,SEQ_SETDT
		      	  ,SEQ_NO
		      	  ,USR_CD
		      	  ,SYS_DT
		          )    
			VALUES('C02I' /*com_agsec*/ 
			      ,'C08CRS'
			      ,'20210628' /*req_dt*/ 
			      ,421 /*max_seq_no*/ 
			      ,'CHATBOT'
			      ,GETDATE()
			      );
 {executed in 9 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertTcSeqnoinf:143] - <==    Updates: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateTcresdtl:143] - ==>  Preparing: UPDATE TC_RESDTL SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateTcresdtl:143] - ==> Parameters: 20210628(String), IC0421(String), 20210618(String), IC2263(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESDTL SET REM_DT = '20210628' /*req_dt*/ , REM_SEQ = 'IC0421' /*new_rem_seq*/ 
	 WHERE REM_DT = '20210618' /*rem_dt*/ 
	   AND REM_SEQ = 'IC2263' /*rem_seq*/
 {executed in 6 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateTcresdtl:143] - <==    Updates: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateTcresmst:143] - ==>  Preparing: UPDATE TC_RESMST SET REM_DT = ? /*req_dt*/ , REM_SEQ = ? /*new_rem_seq*/ , ORM_NO = ? /*new_ormno*/ WHERE REM_DT = ? /*rem_dt*/ AND REM_SEQ = ? /*rem_seq*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateTcresmst:143] - ==> Parameters: 20210628(String), IC0421(String), I20210614268601(String), 20210618(String), IC2263(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TC_RESMST SET REM_DT = '20210628' /*req_dt*/ , REM_SEQ = 'IC0421' /*new_rem_seq*/ , ORM_NO = 'I20210614268601' /*new_ormno*/ 
	 WHERE REM_DT = '20210618' /*rem_dt*/ 
	   AND REM_SEQ = 'IC2263' /*rem_seq*/
 {executed in 45 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateTcresmst:143] - <==    Updates: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateToOrdmasSigongStat:143] - ==>  Preparing: UPDATE TO_ORDMAS SET ORM_PSTS = 'E' /* 예약상태 */ ,ORM_CDT = ? /*req_dt*/ /* 확정납기일 */ ,USR_CD = 'CHATBOT' /* 최종변경자 */ ,SYS_DT = GETDATE() /* 최종변경일시 */ ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL(? /*chg_orm_cdt*/ ,'') != '' THEN CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,? /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990')) END) WHERE ORM_NO = ? /*new_ormno*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateToOrdmasSigongStat:143] - ==> Parameters: 20210628(String), 20210628(String), 20210628(String), I20210614268601(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. UPDATE TO_ORDMAS
       SET ORM_PSTS = 'E'    /* 예약상태 */		
          ,ORM_CDT  = '20210628' /*req_dt*/      /* 확정납기일 */		
          ,USR_CD   = 'CHATBOT'   /* 최종변경자 */
          ,SYS_DT   = GETDATE()     /* 최종변경일시 */
		  ,PAY_DUE_DT = (SELECT CASE WHEN ISNULL(PAY_DUE_DT,'') != '' AND ISNULL('20210628' /*chg_orm_cdt*/ ,'') != '' THEN
							  		CONVERT(DATETIME,CONCAT(CONVERT(CHAR(10),CONVERT(DATE, DBO.FN_GET_PAY_DUE_DT(VND_CD,'20210628' /*chg_orm_cdt*/ ,COM_BRD) ),120),' 23:59:59.990'))
							   END)
     WHERE ORM_NO = 'I20210614268601' /*new_ormno*/
 {executed in 30 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [updateToOrdmasSigongStat:143] - <==    Updates: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectOnlineynCheck:143] - ==>  Preparing: SELECT (CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1, TOO.ORM_NM AS DATA2 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectOnlineynCheck:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	
		(CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '4' THEN 'Y' ELSE 'N' END ) AS DATA1,
		TOO.ORM_NM AS DATA2
	  FROM TO_ORDMAS TOO WITH (NOLOCK)
	 WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 5 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectOnlineynCheck:143] - <==      Total: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertAgtChangeAlarm:143] - ==>  Preparing: INSERT INTO TZ_ALARM ( SEND_DT, SEND_NM, COM_CMP, VND_CD, RECV_ID, ALARM_CNTN, MENU_ID, CNFN_DT, DEL_YN, DEL_DT, FST_USR, FST_SYS_DT, USR_CD, SYS_DT ) VALUES ( GETDATE(), 'CHATBOT', (SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ ), ? /*message*/ , NULL, NULL, 'N', NULL, 'CHATBOT', GETDATE(), 'CHATBOT', GETDATE() ) 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertAgtChangeAlarm:143] - ==> Parameters: I20210614268600(String), I20210614268600(String), I20210614268600(String), 챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614268600,  수주건명 : 박희철(블루베리) )(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TZ_ALARM 
			 ( 
			   SEND_DT, 
			   SEND_NM, 
			   COM_CMP, 
			   VND_CD, 
			   RECV_ID, 
			   ALARM_CNTN, 
			   MENU_ID, 
			   CNFN_DT,
			   DEL_YN, 
			   DEL_DT, 
			   FST_USR, 
			   FST_SYS_DT, 
			   USR_CD, 
			   SYS_DT 
			 )
		     VALUES 
		     (
		     	GETDATE(),
		     	'CHATBOT',
		     	(SELECT TOO.VND_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/ ),
		     	(SELECT TOO.AGT_CD FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/ ),
		        (SELECT TOO.FST_USR FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/ ),
		        '챗봇을 통해 납기변경처리 되었습니다. (주문번호 : I20210614268600,  수주건명 : 박희철(블루베리) )' /*message*/ ,
		        NULL,
		        NULL,
		        'N',
		        NULL,
		        'CHATBOT',
		        GETDATE(),
		        'CHATBOT',
		        GETDATE()
		     )
 {executed in 7 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertAgtChangeAlarm:143] - <==    Updates: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertApicallHist:143] - ==>  Preparing: INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT ) VALUES ('Y25001' , ? /*call_function*/ , ? /*function_name*/ , ? /*client_ip*/ , 'CHATBOT',GETDATE(), '' ) 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertApicallHist:143] - ==> Parameters: erp_OrderArrivalDateChange(String), 챗봇 주문 도착일정 변경 Auto 처리(String), 0:0:0:0:0:0:0:1(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO TY_FUNCTIONUSE_HIST (SYSTEM_GUBUN, CALL_FUNCTION, FUNCTION_NAME, CALL_IP, FST_USR_CD, FST_SYS_DT, CALL_RESULT )
						     VALUES ('Y25001'    , 'erp_OrderArrivalDateChange' /*call_function*/ , '챗봇 주문 도착일정 변경 Auto 처리' /*function_name*/ , '0:0:0:0:0:0:0:1' /*client_ip*/ , 'CHATBOT',GETDATE(), '' )
 {executed in 4 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [insertApicallHist:143] - <==    Updates: 1
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectChginformData:143] - ==>  Preparing: SELECT TOO.COM_BRD as DATA1, TOO.ORM_NM AS DATA2, ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3, ( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN '1' THEN'Y' ELSE 'N' END ) AS DATA4, ISNULL(( SELECT TOP 1 A.CEP_MP FROM TS_CEMPLOYEE A WITH (NOLOCK) , TS_CEMPDETAIL B WITH (NOLOCK) , ( SELECT O.VND_CD , P.VND_NM , O.COM_CMP , O.COM_MNGEST CMP_CD , O.USR_CD1 PIC_CD FROM TT_VNDCOP O WITH (NOLOCK) , TT_VENDOR P WITH (NOLOCK) WHERE O.VND_CD = P.VND_CD AND P.VND_DLVCD IN ('T4101') /*내수*/ AND O.COM_CMP = TOO.VND_CD AND O.COM_MNGEST= TOO.CMP_CD AND P.VND_CD = TOO.AGT_CD ) C WHERE A.CEP_CD = B.CEP_CD AND B.COM_CD = C.COM_CMP AND B.CED_CCD = C.VND_CD AND B.CED_YN IN ('Y', 'R') AND B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5 FROM TO_ORDMAS TOO WITH (NOLOCK) WHERE TOO.ORM_NO = ? /*key_no*/ 
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectChginformData:143] - ==> Parameters: I20210614268600(String)
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [sqltiming:368] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT
		TOO.COM_BRD as DATA1,
		TOO.ORM_NM AS DATA2,
		ISNULL((SELECT TSC.CEP_MP FROM TS_CEMPLOYEE TSC WITH (NOLOCK) WHERE TSC.CEP_CD = TOO.ORM_AGTEMP ), '') AS DATA3,
		( CASE ISNULL((SELECT TTC.REF_1 FROM TT_COMCD TTC WITH (NOLOCK) WHERE TTC.CCD_CD = TOO.ORM_CMPCD ), '1') WHEN  '1' THEN'Y' ELSE 'N' END ) AS DATA4,
		ISNULL(( SELECT TOP 1 A.CEP_MP
		  FROM	TS_CEMPLOYEE	A	WITH (NOLOCK)
		  		, TS_CEMPDETAIL	B	WITH (NOLOCK)
		  		, (
			  			SELECT	O.VND_CD
			  					, P.VND_NM
			  					, O.COM_CMP
			  					, O.COM_MNGEST	CMP_CD
			  					, O.USR_CD1		PIC_CD
						  FROM	TT_VNDCOP	O	WITH (NOLOCK)
						  		, TT_VENDOR	P	WITH (NOLOCK)
						 WHERE	O.VND_CD	= P.VND_CD						   
						   AND	P.VND_DLVCD	IN ('T4101')		/*내수*/
						   AND	O.COM_CMP	= TOO.VND_CD
						   AND	O.COM_MNGEST= TOO.CMP_CD
						   AND	P.VND_CD	= TOO.AGT_CD
		  		)	C
		 WHERE	A.CEP_CD	= B.CEP_CD
		   AND	B.COM_CD	= C.COM_CMP
		   AND	B.CED_CCD	= C.VND_CD

		   AND	B.CED_YN	IN ('Y', 'R')
		   AND  B.CED_POS IN ('S1119', 'S1140' ) ), '') AS DATA5		
	FROM TO_ORDMAS TOO WITH (NOLOCK)
	WHERE TOO.ORM_NO = 'I20210614268600' /*key_no*/
 {executed in 7 msec}
DEBUG 21-06-23 15:58:33[http-nio-8082-exec-1] [selectChginformData:143] - <==      Total: 1
INFO  21-06-23 16:35:21[RMI TCP Connection(2)-127.0.0.1] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin:159] - Application shutdown requested.
INFO  21-06-23 16:35:22[RMI TCP Connection(2)-127.0.0.1] [ThreadPoolTaskExecutor:218] - Shutting down ExecutorService 'applicationTaskExecutor'
INFO  21-06-23 16:35:22[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:350] - HikariPool-1 - Shutdown initiated...
INFO  21-06-23 16:35:22[RMI TCP Connection(2)-127.0.0.1] [HikariDataSource:352] - HikariPool-1 - Shutdown completed.
